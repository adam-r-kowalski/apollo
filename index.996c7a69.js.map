{"mappings":"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","sources":["src/fuzzy_find.ts","src/linear_algebra/matrix3x3.ts","src/linear_algebra/vector3.ts","src/state.ts","src/event.ts","src/ui/pointer_down.ts","src/ui/batch_geometry.ts","src/ui/camera_stack.ts","src/ui/center.ts","src/ui/alignment.ts","src/ui/column.ts","src/ui/container.ts","src/ui/row.ts","src/ui/scene.ts","src/ui/stack.ts","src/ui/text.ts","src/ui/index.ts","src/ui/reduce.ts","src/ui/gather_on_click_handlers.ts","src/ui/id_to_world_space.ts","src/ui/layer_geometry.ts","src/ui/gather_connections.ts","src/ui/reducer.ts","src/ui/render.ts","src/ui/webgl2.ts","src/ui/run.ts","src/ui/view/index.ts","src/index.ts"],"sourcesContent":["export interface FuzzyFind {\r\n    haystack: string\r\n    needle: string\r\n}\r\n\r\nexport const fuzzyFind = ({ haystack, needle }: FuzzyFind): boolean => {\r\n    let haystackIndex = 0\r\n    let needleIndex = 0\r\n    while (needleIndex < needle.length) {\r\n        const n = needle[needleIndex].toLowerCase()\r\n        while (haystackIndex < haystack.length && n !== haystack[haystackIndex].toLowerCase()) {\r\n            ++haystackIndex\r\n        }\r\n        if (haystackIndex === haystack.length) return false\r\n        ++needleIndex\r\n    }\r\n    return true\r\n}\r\n","import { Size } from \"../ui\"\r\nimport { Vector3 } from \"./vector3\"\r\n\r\nexport type Matrix3x3 = number[]\r\n\r\nexport const identity = (): Matrix3x3 => [\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1,\r\n]\r\n\r\nexport const projection = ({ width, height }: Size): Matrix3x3 => [\r\n    2 / width, 0, -1,\r\n    0, -2 / height, 1,\r\n    0, 0, 1\r\n]\r\n\r\nexport const translate = (x: number, y: number): Matrix3x3 => [\r\n    1, 0, x,\r\n    0, 1, y,\r\n    0, 0, 1\r\n]\r\n\r\nexport const scale = (x: number, y: number): Matrix3x3 => [\r\n    x, 0, 0,\r\n    0, y, 0,\r\n    0, 0, 1\r\n]\r\n\r\nexport const rotate = (radians: number): Matrix3x3 => {\r\n    const c = Math.cos(radians)\r\n    const s = Math.sin(radians)\r\n    return [\r\n        c, s, 0,\r\n        -s, c, 0,\r\n        0, 0, 1\r\n    ]\r\n}\r\n\r\nexport const multiplyMatrices = (...matrices: Matrix3x3[]) => {\r\n    const [head, ...tail] = matrices\r\n    return tail.reduce((a, b) => {\r\n        const a11 = a[0]\r\n        const a12 = a[1]\r\n        const a13 = a[2]\r\n        const a21 = a[3]\r\n        const a22 = a[4]\r\n        const a23 = a[5]\r\n        const a31 = a[6]\r\n        const a32 = a[7]\r\n        const a33 = a[8]\r\n        const b11 = b[0]\r\n        const b12 = b[1]\r\n        const b13 = b[2]\r\n        const b21 = b[3]\r\n        const b22 = b[4]\r\n        const b23 = b[5]\r\n        const b31 = b[6]\r\n        const b32 = b[7]\r\n        const b33 = b[8]\r\n        const c11 = a11 * b11 + a12 * b21 + a13 * b31\r\n        const c12 = a11 * b12 + a12 * b22 + a13 * b32\r\n        const c13 = a11 * b13 + a12 * b23 + a13 * b33\r\n        const c21 = a21 * b11 + a22 * b21 + a23 * b31\r\n        const c22 = a21 * b12 + a22 * b22 + a23 * b32\r\n        const c23 = a21 * b13 + a22 * b23 + a23 * b33\r\n        const c31 = a31 * b11 + a32 * b21 + a33 * b31\r\n        const c32 = a31 * b12 + a32 * b22 + a33 * b32\r\n        const c33 = a31 * b13 + a32 * b23 + a33 * b33\r\n        return [\r\n            c11, c12, c13,\r\n            c21, c22, c23,\r\n            c31, c32, c33,\r\n        ]\r\n    }, head)\r\n}\r\n\r\nexport const multiplyMatrixVector = (a: Matrix3x3, b: Vector3): Vector3 => {\r\n    const a11 = a[0]\r\n    const a12 = a[1]\r\n    const a13 = a[2]\r\n    const a21 = a[3]\r\n    const a22 = a[4]\r\n    const a23 = a[5]\r\n    const a31 = a[6]\r\n    const a32 = a[7]\r\n    const a33 = a[8]\r\n    const b1 = b[0]\r\n    const b2 = b[1]\r\n    const b3 = b[2]\r\n    const c1 = a11 * b1 + a12 * b2 + a13 * b3\r\n    const c2 = a21 * b1 + a22 * b2 + a23 * b3\r\n    const c3 = a31 * b1 + a32 * b2 + a33 * b3\r\n    return [c1, c2, c3]\r\n}\r\n\r\nexport const inverse = (a: Matrix3x3): Matrix3x3 => {\r\n    const a11 = a[0]\r\n    const a12 = a[1]\r\n    const a13 = a[2]\r\n    const a21 = a[3]\r\n    const a22 = a[4]\r\n    const a23 = a[5]\r\n    const a31 = a[6]\r\n    const a32 = a[7]\r\n    const a33 = a[8]\r\n    const b11 = a22 * a33 - a23 * a32\r\n    const b12 = a21 * a33 - a23 * a31\r\n    const b13 = a21 * a32 - a22 * a31\r\n    const b21 = a12 * a33 - a13 * a32\r\n    const b22 = a11 * a33 - a13 * a31\r\n    const b23 = a11 * a32 - a12 * a31\r\n    const b31 = a12 * a23 - a13 * a22\r\n    const b32 = a11 * a23 - a13 * a21\r\n    const b33 = a11 * a22 - a12 * a21\r\n    const det = a31 * b31 - a32 * b32 + a33 * b33\r\n    const idet = 1 / det\r\n    return [\r\n        idet * b11, idet * -b21, idet * b31,\r\n        idet * -b12, idet * b22, idet * -b32,\r\n        idet * b13, idet * -b23, idet * b33\r\n    ]\r\n}","export type Vector3 = number[]\r\n\r\nexport const length = ([a, b, c]: Vector3) =>\r\n    Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))","import { Matrix3x3 } from \"./linear_algebra/matrix3x3\"\r\nimport { Pointer, Color } from \"./ui\"\r\n\r\nexport interface InputPath {\r\n    nodeIndex: number\r\n    inputIndex: number\r\n}\r\n\r\nexport interface OutputPath {\r\n    nodeIndex: number\r\n    outputIndex: number\r\n}\r\n\r\nexport interface Input {\r\n    name: string\r\n    selected: boolean\r\n    edgeIndices: number[]\r\n}\r\n\r\nexport interface Output {\r\n    name: string\r\n    selected: boolean\r\n    edgeIndices: number[]\r\n}\r\n\r\nexport interface Body {\r\n    value: number\r\n    editing: boolean\r\n}\r\n\r\nexport interface Node {\r\n    name: string\r\n    inputs: Input[]\r\n    body?: Body\r\n    outputs: Output[]\r\n    x: number\r\n    y: number\r\n}\r\n\r\nexport interface Edge {\r\n    input: InputPath\r\n    output: OutputPath\r\n}\r\n\r\nexport interface Graph {\r\n    nodes: Node[]\r\n    edges: Edge[]\r\n}\r\n\r\nexport interface Theme {\r\n    background: Color\r\n    node: Color\r\n    input: Color\r\n    selectedInput: Color\r\n    connection: Color\r\n}\r\n\r\nexport interface Finder {\r\n    search: string\r\n    show: boolean\r\n    options: string[]\r\n}\r\n\r\nexport interface Operation {\r\n    name: string\r\n    inputs: string[]\r\n    body?: number\r\n    outputs: string[]\r\n}\r\n\r\nexport type Operations = { [name: string]: Operation }\r\n\r\nexport interface ScreenCoordinates {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nexport enum VirtualKeyboardKind {\r\n    ALPHABETIC,\r\n    NUMERIC\r\n}\r\n\r\nexport interface VirtualKeyboard {\r\n    show: boolean\r\n    kind: VirtualKeyboardKind\r\n}\r\n\r\nexport enum InputTargetKind {\r\n    FINDER,\r\n    NUMBER,\r\n    NONE\r\n}\r\n\r\nexport interface FinderInputTarget { kind: InputTargetKind.FINDER }\r\n\r\nexport interface NumberInputTarget {\r\n    kind: InputTargetKind.NUMBER,\r\n    nodeIndex: number\r\n}\r\n\r\nexport interface NoInputTarget {\r\n    kind: InputTargetKind.NONE,\r\n}\r\n\r\nexport type InputTarget =\r\n    | FinderInputTarget\r\n    | NumberInputTarget\r\n    | NoInputTarget\r\n\r\nexport interface State {\r\n    graph: Graph\r\n    zooming: boolean\r\n    dragging: boolean\r\n    draggedNode: number | null\r\n    pointers: Pointer[]\r\n    pointerDistance: number\r\n    pointerCenter: [number, number]\r\n    selectedOutput: OutputPath | null\r\n    selectedInput: InputPath | null\r\n    potentialDoubleClick: boolean\r\n    nodePlacementLocation: ScreenCoordinates\r\n    finder: Finder\r\n    virtualKeyboard: VirtualKeyboard\r\n    inputTarget: InputTarget\r\n    camera: Matrix3x3\r\n    operations: Operations\r\n    theme: Theme\r\n}\r\n","import { fuzzyFind } from \"./fuzzy_find\"\r\nimport { multiplyMatrices, multiplyMatrixVector, scale, translate } from \"./linear_algebra/matrix3x3\"\r\nimport { length } from \"./linear_algebra/vector3\"\r\nimport { UpdateResult } from \"./ui/run\"\r\nimport { InputPath, InputTargetKind, OutputPath, State, VirtualKeyboardKind } from \"./state\"\r\nimport { Pointer } from \"./ui\"\r\n\r\nexport enum EventKind {\r\n    POINTER_MOVE,\r\n    POINTER_DOWN,\r\n    POINTER_UP,\r\n    CLICKED_NODE,\r\n    WHEEL,\r\n    CLICKED_INPUT,\r\n    CLICKED_OUTPUT,\r\n    DOUBLE_CLICK_TIMEOUT,\r\n    DOUBLE_CLICK,\r\n    KEYDOWN,\r\n    VIRTUAL_KEYDOWN,\r\n    CLICKED_FINDER_OPTION,\r\n    CLICKED_NUMBER,\r\n    CLICKED_BACKGROUND\r\n}\r\n\r\nexport interface PointerMove {\r\n    kind: EventKind.POINTER_MOVE\r\n    pointer: Pointer\r\n}\r\n\r\nexport interface PointerDown {\r\n    kind: EventKind.POINTER_DOWN\r\n    pointer: Pointer\r\n}\r\n\r\nexport interface PointerUp {\r\n    kind: EventKind.POINTER_UP\r\n    pointer: Pointer\r\n}\r\n\r\nexport interface ClickedNode {\r\n    kind: EventKind.CLICKED_NODE\r\n    index: number\r\n}\r\n\r\nexport interface Wheel {\r\n    kind: EventKind.WHEEL\r\n    x: number\r\n    y: number\r\n    deltaY: number\r\n}\r\n\r\nexport interface ClickedInput {\r\n    kind: EventKind.CLICKED_INPUT\r\n    inputPath: InputPath\r\n}\r\n\r\nexport interface ClickedOutput {\r\n    kind: EventKind.CLICKED_OUTPUT\r\n    outputPath: OutputPath\r\n}\r\n\r\nexport interface DoubleClickTimeout {\r\n    kind: EventKind.DOUBLE_CLICK_TIMEOUT\r\n}\r\n\r\nexport interface DoubleClick {\r\n    kind: EventKind.DOUBLE_CLICK\r\n    pointer: Pointer\r\n}\r\n\r\nexport interface KeyDown {\r\n    kind: EventKind.KEYDOWN\r\n    key: string\r\n}\r\n\r\nexport interface VirtualKeyDown {\r\n    kind: EventKind.VIRTUAL_KEYDOWN\r\n    key: string\r\n}\r\n\r\nexport interface ClickedFinderOption {\r\n    kind: EventKind.CLICKED_FINDER_OPTION\r\n    option: string\r\n}\r\n\r\nexport interface ClickedNumber {\r\n    kind: EventKind.CLICKED_NUMBER,\r\n    nodeIndex: number\r\n}\r\n\r\nexport interface ClickedBackground {\r\n    kind: EventKind.CLICKED_BACKGROUND,\r\n}\r\n\r\nexport type AppEvent =\r\n    | PointerMove\r\n    | PointerDown\r\n    | PointerUp\r\n    | ClickedNode\r\n    | Wheel\r\n    | ClickedInput\r\n    | ClickedOutput\r\n    | DoubleClickTimeout\r\n    | DoubleClick\r\n    | KeyDown\r\n    | VirtualKeyDown\r\n    | ClickedFinderOption\r\n    | ClickedNumber\r\n    | ClickedBackground\r\n\r\n\r\nconst pointerDown = (state: State, event: PointerDown): UpdateResult<State, AppEvent> => {\r\n    if (state.inputTarget.kind !== InputTargetKind.NONE) return { state }\r\n    state.pointers.push(event.pointer)\r\n    if (state.pointers.length > 1) {\r\n        state.potentialDoubleClick = false\r\n        state.dragging = false\r\n        state.zooming = state.pointers.length === 2\r\n        return { state }\r\n    }\r\n    if (state.potentialDoubleClick) {\r\n        state.potentialDoubleClick = false\r\n        return {\r\n            state,\r\n            dispatch: [{ kind: EventKind.DOUBLE_CLICK, pointer: event.pointer }]\r\n        }\r\n    }\r\n    state.dragging = true\r\n    state.potentialDoubleClick = true\r\n    return {\r\n        state,\r\n        schedule: [\r\n            { after: { milliseconds: 300 }, event: { kind: EventKind.DOUBLE_CLICK_TIMEOUT } }\r\n        ]\r\n    }\r\n}\r\n\r\nconst pointerUp = (state: State, event: PointerUp) => {\r\n    const index = state.pointers.findIndex(p => p.id === event.pointer.id)\r\n    state.pointers.splice(index, 1)\r\n    if (state.pointers.length === 1) {\r\n        state.zooming = false\r\n        state.dragging = true\r\n        state.pointerDistance = 0\r\n    }\r\n    else if (state.pointers.length === 0) {\r\n        state.dragging = false\r\n        state.draggedNode = null\r\n        state.pointerDistance = 0\r\n    }\r\n    return { state }\r\n}\r\n\r\nconst pointerMove = (state: State, event: PointerMove) => {\r\n    if (!state.dragging && !state.zooming) {\r\n        if (!state.finder.show) {\r\n            state.nodePlacementLocation = { x: event.pointer.x, y: event.pointer.y }\r\n        }\r\n        return { state, rerender: false }\r\n    }\r\n    const index = state.pointers.findIndex(p => p.id === event.pointer.id)\r\n    const pointer = state.pointers[index]\r\n    state.pointers[index] = event.pointer\r\n    if (state.dragging) {\r\n        const dx = event.pointer.x - pointer.x\r\n        const dy = event.pointer.y - pointer.y\r\n        if (state.draggedNode !== null) {\r\n            const scaling = length(multiplyMatrixVector(state.camera, [0, 1, 0]))\r\n            const node = state.graph.nodes[state.draggedNode]\r\n            node.x += dx * scaling\r\n            node.y += dy * scaling\r\n        } else {\r\n            state.camera = multiplyMatrices(state.camera, translate(-dx, -dy))\r\n        }\r\n        return { state, render: true }\r\n    }\r\n    // must be zooming\r\n    const [p0, p1] = [state.pointers[0], state.pointers[1]]\r\n    const [x1, y1] = [p0.x, p0.y]\r\n    const [x2, y2] = [p1.x, p1.y]\r\n    const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2))\r\n    const previousDistance = state.pointerDistance\r\n    const previousCenter = state.pointerCenter\r\n    state.pointerDistance = distance\r\n    const x = (p0.x + p1.x) / 2\r\n    const y = (p0.y + p1.y) / 2\r\n    state.pointerCenter = [x, y]\r\n    if (previousDistance > 0) {\r\n        const move = translate(x, y)\r\n        const zoom = Math.pow(2, (previousDistance - distance) * 0.01)\r\n        const moveBack = translate(-x, -y)\r\n        const dx = x - previousCenter[0]\r\n        const dy = y - previousCenter[1]\r\n        state.camera = multiplyMatrices(state.camera, move, scale(zoom, zoom), moveBack, translate(-dx, -dy))\r\n        return { state, render: true }\r\n    } else return { state }\r\n}\r\n\r\nconst clickedNode = (state: State, event: ClickedNode) => {\r\n    state.draggedNode = event.index\r\n    return { state, render: true }\r\n}\r\n\r\nconst wheel = (state: State, event: Wheel) => {\r\n    const move = translate(event.x, event.y)\r\n    const zoom = Math.pow(2, event.deltaY * 0.01)\r\n    const moveBack = translate(-event.x, -event.y)\r\n    state.camera = multiplyMatrices(state.camera, move, scale(zoom, zoom), moveBack)\r\n    return { state, render: true }\r\n}\r\n\r\nconst clickedInput = (state: State, event: ClickedInput) => {\r\n    state.draggedNode = event.inputPath.nodeIndex\r\n    if (state.selectedOutput) {\r\n        const edgeIndex = state.graph.edges.length\r\n        state.graph.edges.push({\r\n            input: event.inputPath,\r\n            output: state.selectedOutput\r\n        })\r\n        {\r\n            const { nodeIndex, outputIndex } = state.selectedOutput\r\n            const output = state.graph.nodes[nodeIndex].outputs[outputIndex]\r\n            output.edgeIndices.push(edgeIndex)\r\n            output.selected = false\r\n        }\r\n        {\r\n            const { nodeIndex, inputIndex } = event.inputPath\r\n            const input = state.graph.nodes[nodeIndex].inputs[inputIndex]\r\n            input.edgeIndices.push(edgeIndex)\r\n        }\r\n        state.selectedOutput = null\r\n        state.draggedNode = null\r\n        return { state, render: true }\r\n    }\r\n    if (state.selectedInput) {\r\n        const { nodeIndex, inputIndex } = state.selectedInput\r\n        state.graph.nodes[nodeIndex].inputs[inputIndex].selected = false\r\n    }\r\n    const { nodeIndex, inputIndex } = event.inputPath\r\n    state.graph.nodes[nodeIndex].inputs[inputIndex].selected = true\r\n    state.selectedInput = event.inputPath\r\n    return { state, render: true }\r\n}\r\n\r\nconst clickedOutput = (state: State, event: ClickedOutput) => {\r\n    state.draggedNode = event.outputPath.nodeIndex\r\n    if (state.selectedInput) {\r\n        const edgeIndex = state.graph.edges.length\r\n        state.graph.edges.push({\r\n            input: state.selectedInput,\r\n            output: event.outputPath\r\n        })\r\n        {\r\n            const { nodeIndex, inputIndex } = state.selectedInput\r\n            const input = state.graph.nodes[nodeIndex].inputs[inputIndex]\r\n            input.edgeIndices.push(edgeIndex)\r\n            input.selected = false\r\n        }\r\n        {\r\n            const { nodeIndex, outputIndex } = event.outputPath\r\n            const output = state.graph.nodes[nodeIndex].outputs[outputIndex]\r\n            output.edgeIndices.push(edgeIndex)\r\n        }\r\n        state.selectedInput = null\r\n        state.draggedNode = null\r\n        return { state, render: true }\r\n    }\r\n    if (state.selectedOutput) {\r\n        const { nodeIndex, outputIndex } = state.selectedOutput\r\n        state.graph.nodes[nodeIndex].outputs[outputIndex].selected = false\r\n    }\r\n    const { nodeIndex, outputIndex } = event.outputPath\r\n    state.graph.nodes[nodeIndex].outputs[outputIndex].selected = true\r\n    state.selectedOutput = event.outputPath\r\n    return { state, render: true }\r\n}\r\n\r\nconst doubleClickTimeout = (state: State, _: DoubleClickTimeout) => {\r\n    if (state.potentialDoubleClick) {\r\n        state.potentialDoubleClick = false\r\n    }\r\n    return { state }\r\n}\r\n\r\nconst updateFinderOptions = (state: State): State => {\r\n    state.finder.options = Object.keys(state.operations)\r\n        .filter(item => fuzzyFind({ haystack: item, needle: state.finder.search }))\r\n    return state\r\n}\r\n\r\nexport const openFinder = (state: State) => {\r\n    state.finder.show = true\r\n    state.finder.search = ''\r\n    state.virtualKeyboard = {\r\n        show: true,\r\n        kind: VirtualKeyboardKind.ALPHABETIC\r\n    }\r\n    state.inputTarget = { kind: InputTargetKind.FINDER }\r\n    state.potentialDoubleClick = false\r\n    state = updateFinderOptions(state)\r\n    return state\r\n}\r\n\r\n\r\nconst doubleClick = (state: State, { pointer }: DoubleClick) => {\r\n    state = openFinder(state)\r\n    state.nodePlacementLocation = { x: pointer.x, y: pointer.y }\r\n    return { state: state, render: true }\r\n}\r\n\r\nconst closeFinder = (state: State) => {\r\n    state.finder.show = false\r\n    state.finder.search = ''\r\n    state.virtualKeyboard = {\r\n        show: false,\r\n        kind: VirtualKeyboardKind.ALPHABETIC\r\n    }\r\n    state.inputTarget = { kind: InputTargetKind.NONE }\r\n    return state\r\n}\r\n\r\nconst insertOperationFromFinder = (state: State, name: string): State => {\r\n    state = closeFinder(state)\r\n    const operation = state.operations[name]\r\n    const [x, y, _] = multiplyMatrixVector(state.camera, [state.nodePlacementLocation.x, state.nodePlacementLocation.y, 1])\r\n    state.graph.nodes.push({\r\n        name,\r\n        inputs: operation.inputs.map(input => ({\r\n            name: input,\r\n            selected: false,\r\n            edgeIndices: []\r\n        })),\r\n        outputs: operation.outputs.map(output => ({\r\n            name: output,\r\n            selected: false,\r\n            edgeIndices: []\r\n        })),\r\n        x,\r\n        y,\r\n        body: operation.body !== undefined ? {\r\n            value: operation.body,\r\n            editing: false\r\n        } : undefined\r\n    })\r\n    return state\r\n}\r\n\r\nconst keyDown = (state: State, { key }: KeyDown) => {\r\n    switch (state.inputTarget.kind) {\r\n        case InputTargetKind.FINDER:\r\n            switch (key) {\r\n                case 'Backspace':\r\n                    state.finder.search = state.finder.search.slice(0, -1)\r\n                    break\r\n                case 'Shift':\r\n                case 'Alt':\r\n                case 'Control':\r\n                case 'Meta':\r\n                case 'Tab':\r\n                    break\r\n                case 'Enter':\r\n                    if (state.finder.options.length > 0) {\r\n                        const name = state.finder.options[0]\r\n                        state = insertOperationFromFinder(state, name)\r\n                    } else {\r\n                        state = closeFinder(state)\r\n                    }\r\n                    break\r\n                case 'Escape':\r\n                    state = closeFinder(state)\r\n                    break\r\n                default:\r\n                    state.finder.search += key\r\n                    break\r\n            }\r\n            return { state: updateFinderOptions(state), render: true }\r\n        case InputTargetKind.NUMBER:\r\n            const node = state.graph.nodes[state.inputTarget.nodeIndex]\r\n            let value = node.body!.value.toString()\r\n            switch (key) {\r\n                case 'Backspace':\r\n                    let newValue = value.slice(0, -1)\r\n                    if (newValue === '') newValue = '0'\r\n                    node.body!.value = parseFloat(newValue)\r\n                    return { state, render: true }\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7':\r\n                case '8':\r\n                case '9':\r\n                case '0':\r\n                    value += key\r\n                    node.body!.value = parseFloat(value)\r\n                    return { state, render: true }\r\n                case 'Enter':\r\n                    node.body!.editing = false\r\n                    state.virtualKeyboard = {\r\n                        show: false,\r\n                        kind: VirtualKeyboardKind.ALPHABETIC\r\n                    }\r\n                    state.inputTarget = {\r\n                        kind: InputTargetKind.NONE\r\n                    }\r\n                    return { state, render: true }\r\n                default:\r\n                    return { state }\r\n            }\r\n        case InputTargetKind.NONE:\r\n            if (key == 'f') {\r\n                return { state: openFinder(state), render: true }\r\n            }\r\n            return { state }\r\n    }\r\n}\r\n\r\nconst virtualKeyDown = (state: State, { key }: VirtualKeyDown) => {\r\n    switch (state.inputTarget.kind) {\r\n        case InputTargetKind.FINDER:\r\n            switch (key) {\r\n                case 'del':\r\n                    state.finder.search = state.finder.search.slice(0, -1)\r\n                    break\r\n                case 'sft':\r\n                    break\r\n                case 'space':\r\n                    state.finder.search += ' '\r\n                    break\r\n                case 'ret':\r\n                    if (state.finder.options.length > 0) {\r\n                        const name = state.finder.options[0]\r\n                        state = insertOperationFromFinder(state, name)\r\n                    } else {\r\n                        state = closeFinder(state)\r\n                    }\r\n                    break\r\n                default:\r\n                    state.finder.search += key\r\n                    break\r\n            }\r\n            return { state: updateFinderOptions(state), render: true }\r\n        case InputTargetKind.NUMBER:\r\n            const node = state.graph.nodes[state.inputTarget.nodeIndex]\r\n            let value = node.body!.value.toString()\r\n            switch (key) {\r\n                case 'del':\r\n                    let newValue = value.slice(0, -1)\r\n                    if (newValue === '') newValue = '0'\r\n                    node.body!.value = parseFloat(newValue)\r\n                    return { state, render: true }\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7':\r\n                case '8':\r\n                case '9':\r\n                case '0':\r\n                case '.':\r\n                    value += key\r\n                    node.body!.value = parseFloat(value)\r\n                    return { state, render: true }\r\n                case 'ret':\r\n                    node.body!.editing = false\r\n                    state.virtualKeyboard = {\r\n                        show: false,\r\n                        kind: VirtualKeyboardKind.ALPHABETIC\r\n                    }\r\n                    state.inputTarget = {\r\n                        kind: InputTargetKind.NONE\r\n                    }\r\n                    return { state, render: true }\r\n                default:\r\n                    return { state }\r\n            }\r\n        case InputTargetKind.NONE:\r\n            return { state }\r\n    }\r\n}\r\n\r\nconst clickedFinderOption = (state: State, { option }: ClickedFinderOption) => ({\r\n    state: insertOperationFromFinder(state, option),\r\n    render: true\r\n})\r\n\r\nexport const openNumericKeyboard = (state: State, nodeIndex: number): State => {\r\n    state.virtualKeyboard = {\r\n        show: true,\r\n        kind: VirtualKeyboardKind.NUMERIC\r\n    }\r\n    state.inputTarget = {\r\n        kind: InputTargetKind.NUMBER,\r\n        nodeIndex\r\n    }\r\n    state.graph.nodes[nodeIndex].body!.editing = true\r\n    return state\r\n}\r\n\r\nconst clickedNumber = (state: State, { nodeIndex }: ClickedNumber) => {\r\n    if (state.inputTarget.kind === InputTargetKind.NUMBER) {\r\n        state.graph.nodes[state.inputTarget.nodeIndex].body!.editing = false\r\n    }\r\n    state = closeFinder(state)\r\n    state = openNumericKeyboard(state, nodeIndex)\r\n    return {\r\n        state,\r\n        render: true\r\n    }\r\n}\r\n\r\nconst clickedBackground = (state: State) => {\r\n    if (state.inputTarget.kind === InputTargetKind.NUMBER) {\r\n        state.graph.nodes[state.inputTarget.nodeIndex].body!.editing = false\r\n    }\r\n    return {\r\n        state: closeFinder(state),\r\n        render: true\r\n    }\r\n}\r\n\r\nexport const update = (state: State, event: AppEvent): UpdateResult<State, AppEvent> => {\r\n    switch (event.kind) {\r\n        case EventKind.POINTER_DOWN: return pointerDown(state, event)\r\n        case EventKind.POINTER_UP: return pointerUp(state, event)\r\n        case EventKind.POINTER_MOVE: return pointerMove(state, event)\r\n        case EventKind.CLICKED_NODE: return clickedNode(state, event)\r\n        case EventKind.WHEEL: return wheel(state, event)\r\n        case EventKind.CLICKED_INPUT: return clickedInput(state, event)\r\n        case EventKind.CLICKED_OUTPUT: return clickedOutput(state, event)\r\n        case EventKind.DOUBLE_CLICK_TIMEOUT: return doubleClickTimeout(state, event)\r\n        case EventKind.DOUBLE_CLICK: return doubleClick(state, event)\r\n        case EventKind.KEYDOWN: return keyDown(state, event)\r\n        case EventKind.VIRTUAL_KEYDOWN: return virtualKeyDown(state, event)\r\n        case EventKind.CLICKED_FINDER_OPTION: return clickedFinderOption(state, event)\r\n        case EventKind.CLICKED_NUMBER: return clickedNumber(state, event)\r\n        case EventKind.CLICKED_BACKGROUND: return clickedBackground(state)\r\n    }\r\n}\r\n","import { Renderer, Pointer, WorldSpace } from \".\"\r\n\r\nconst inWorldSpace = ({ x0, y0, x1, y1 }: WorldSpace, pointer: Pointer) =>\r\n    x0 <= pointer.x && pointer.x <= x1 &&\r\n    y0 <= pointer.y && pointer.y <= y1\r\n\r\nexport const pointerDown = <AppEvent, R extends Renderer<AppEvent>>(renderer: R, pointer: Pointer): R => {\r\n    for (let i = renderer.clickHandlers.length; i > 0; --i) {\r\n        for (const { onClick, worldSpace } of renderer.clickHandlers[i - 1]) {\r\n            if (inWorldSpace(worldSpace, pointer)) {\r\n                renderer.dispatch(onClick)\r\n                return renderer\r\n            }\r\n        }\r\n    }\r\n    return renderer\r\n}\r\n","import { Connections } from \"./gather_connections\"\r\nimport { Layers } from \"./layer_geometry\"\r\nimport { IdToWorldSpace } from \"./id_to_world_space\"\r\nimport { WorldSpace } from \".\"\r\n\r\nexport interface Triangles {\r\n    vertices: number[]\r\n    vertexIndices: number[]\r\n    colors: number[]\r\n    textureIndex: number\r\n    textureCoordinates: number[]\r\n    cameraIndex: number[]\r\n}\r\n\r\nexport interface Lines {\r\n    vertices: number[]\r\n    colors: number[]\r\n}\r\n\r\n\r\nexport interface Batch {\r\n    triangles: Triangles\r\n    lines: Lines\r\n}\r\n\r\nconst newBatch = (textureIndex: number): Batch => ({\r\n    triangles: {\r\n        vertices: [],\r\n        colors: [],\r\n        vertexIndices: [],\r\n        textureIndex,\r\n        textureCoordinates: [],\r\n        cameraIndex: []\r\n    },\r\n    lines: {\r\n        vertices: [],\r\n        colors: []\r\n    }\r\n})\r\n\r\nconst linspace = (start: number, stop: number, num: number): number[] => {\r\n    const step = (stop - start) / (num - 1)\r\n    return Array.from({ length: num }, (_, i) => start + step * i)\r\n}\r\n\r\nexport function* cubicBezier(ts: number[], from: WorldSpace, to: WorldSpace, offset: number): Generator<number> {\r\n    const p0x = (from.x0 + from.x1) / 2\r\n    const p0y = (from.y0 + from.y1) / 2\r\n    const p1x = p0x + offset\r\n    const p1y = p0y\r\n    const p3x = (to.x0 + to.x1) / 2\r\n    const p3y = (to.y0 + to.y1) / 2\r\n    const p2x = p3x - offset\r\n    const p2y = p3y\r\n    let lastX = 0\r\n    let lastY = 0\r\n    let first = true\r\n    for (const t of ts) {\r\n        const tSquared = t * t\r\n        const tCubed = tSquared * t\r\n        const oneMinusT = 1 - t\r\n        const oneMinusTSquared = oneMinusT * oneMinusT\r\n        const oneMinusTCubed = oneMinusTSquared * oneMinusT\r\n        const a = oneMinusTCubed\r\n        const b = 3 * oneMinusTSquared * t\r\n        const c = 3 * oneMinusT * tSquared\r\n        const d = tCubed\r\n        const x = a * p0x + b * p1x + c * p2x + d * p3x\r\n        const y = a * p0y + b * p1y + c * p2y + d * p3y\r\n        if (first) {\r\n            yield x\r\n            yield y\r\n            first = false\r\n        } else {\r\n            yield lastX\r\n            yield lastY\r\n        }\r\n        yield x\r\n        yield y\r\n        lastX = x\r\n        lastY = y\r\n    }\r\n}\r\n\r\n\r\nexport const batchGeometry = (layers: Layers, connections: Connections, idToWorldSpace: IdToWorldSpace): Batch[] => {\r\n    const samples = 20\r\n    const ts = linspace(0, 1, samples)\r\n    const batches: Batch[] = []\r\n    let batch = newBatch(0)\r\n    let batchTextureIndex = batch.triangles.textureIndex.toString()\r\n    layers.forEach((layer, z) => {\r\n        for (const [textureIndex, geometries] of Object.entries(layer)) {\r\n            if (batchTextureIndex !== textureIndex) {\r\n                if (batch.triangles.vertices.length !== 0) batches.push(batch)\r\n                batch = newBatch(parseInt(textureIndex))\r\n                batchTextureIndex = textureIndex\r\n            }\r\n            for (const geometry of geometries) {\r\n                const offset = batch.triangles.vertices.length / 2\r\n                batch.triangles.vertices.push(...geometry.vertices)\r\n                batch.triangles.colors.push(...geometry.colors)\r\n                for (const index of geometry.vertexIndices) {\r\n                    batch.triangles.vertexIndices.push(index + offset)\r\n                }\r\n                batch.triangles.textureCoordinates.push(...geometry.textureCoordinates)\r\n                batch.triangles.cameraIndex.push(...geometry.cameraIndex)\r\n            }\r\n        }\r\n        if (connections.length > z) {\r\n            for (const { connections: cs, scale } of connections[z]) {\r\n                const offset = 50 * scale\r\n                for (const { from, to, color } of cs) {\r\n                    for (const p of cubicBezier(ts, idToWorldSpace[from], idToWorldSpace[to], offset)) {\r\n                        batch.lines.vertices.push(p)\r\n                    }\r\n                    const { red, green, blue, alpha } = color\r\n                    for (let i = 0; i < samples * 2; ++i) batch.lines.colors.push(red, green, blue, alpha)\r\n                }\r\n            }\r\n            if (batch.lines.vertices.length !== 0) {\r\n                batches.push(batch)\r\n                batch = newBatch(0)\r\n            }\r\n        }\r\n    })\r\n    if (batch.triangles.vertices.length !== 0) batches.push(batch)\r\n    return batches\r\n}","import { WorldSpace } from \".\"\r\nimport { identity, inverse, Matrix3x3, multiplyMatrixVector } from \"../linear_algebra/matrix3x3\"\r\n\r\nexport interface CameraStack {\r\n    cameras: Matrix3x3[]\r\n    stack: number[]\r\n    transform: Matrix3x3\r\n}\r\n\r\nexport const initCameraStack = (): CameraStack => {\r\n    const camera = identity()\r\n    return {\r\n        cameras: [identity()],\r\n        stack: [0],\r\n        transform: inverse(camera)\r\n    }\r\n}\r\n\r\nexport const pushCamera = (cameraStack: CameraStack, camera: Matrix3x3): void => {\r\n    const index = cameraStack.cameras.length\r\n    cameraStack.cameras.push(camera)\r\n    cameraStack.stack.push(index)\r\n    cameraStack.transform = inverse(camera)\r\n}\r\n\r\nexport const activeCamera = (cameraStack: CameraStack): number => cameraStack.stack.slice(-1)[0]\r\n\r\nexport const popCamera = (cameraStack: CameraStack): void => {\r\n    cameraStack.stack.pop()\r\n    cameraStack.transform = inverse(cameraStack.cameras[activeCamera(cameraStack)])\r\n}\r\n\r\nexport const transformWorldSpace = (cameraStack: CameraStack, worldSpace: WorldSpace): WorldSpace => {\r\n    const [x0, y0, _0] = multiplyMatrixVector(cameraStack.transform, [worldSpace.x0, worldSpace.y0, 1])\r\n    const [x1, y1, _1] = multiplyMatrixVector(cameraStack.transform, [worldSpace.x1, worldSpace.y1, 1])\r\n    return { x0, y0, x1, y1 }\r\n}\r\n","import { Constraints, Entry, Geometry, geometry, layout, Layout, MeasureText, Offset, Size, UI, UIKind, WorldSpace, traverse } from \".\"\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface CenterLayout {\r\n    readonly size: Size\r\n    readonly child: Layout\r\n}\r\n\r\nexport interface CenterGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly child: Geometry\r\n}\r\n\r\nexport interface Center<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.CENTER\r\n    readonly child: UI<AppEvent>\r\n}\r\n\r\nexport const center = <AppEvent>(child: UI<AppEvent>): Center<AppEvent> => {\r\n    return {\r\n        kind: UIKind.CENTER,\r\n        child\r\n    }\r\n}\r\n\r\nexport const centerLayout = <AppEvent>(ui: Center<AppEvent>, constraints: Constraints, measureText: MeasureText): CenterLayout => {\r\n    const childLayout = layout(ui.child, constraints, measureText)\r\n    const width = constraints.maxWidth\r\n    const height = constraints.maxHeight\r\n    return { size: { width, height }, child: childLayout }\r\n}\r\n\r\nexport const centerGeometry = <AppEvent>(ui: Center<AppEvent>, layout: CenterLayout, offset: Offset, cameraStack: CameraStack): CenterGeometry => {\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height,\r\n    })\r\n    const childLayout = layout.child\r\n    const childOffset = {\r\n        x: offset.x + layout.size.width / 2 - childLayout.size.width / 2,\r\n        y: offset.y + layout.size.height / 2 - childLayout.size.height / 2\r\n    }\r\n    const childGeometry = geometry(ui.child, childLayout, childOffset, cameraStack)\r\n    return {\r\n        worldSpace,\r\n        child: childGeometry\r\n    }\r\n}\r\n\r\nexport function* centerTraverse<AppEvent>(ui: Center<AppEvent>, layout: CenterLayout, geometry: CenterGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield* traverse(ui.child, layout.child, geometry.child, z + 1)\r\n}","export enum MainAxisAlignment {\r\n    START,\r\n    CENTER,\r\n    END,\r\n    SPACE_EVENLY,\r\n    SPACE_BETWEEN\r\n}\r\n\r\nexport enum CrossAxisAlignment {\r\n    START,\r\n    CENTER,\r\n    END\r\n}","import { Constraints, Entry, geometry, Geometry, Layout, layout, MeasureText, Offset, Size, traverse, UI, UIKind, WorldSpace } from \".\"\r\nimport { MainAxisAlignment, CrossAxisAlignment } from \"./alignment\"\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface ColumnLayout {\r\n    readonly size: Size\r\n    readonly totalChildHeight: number\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface ColumnGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Column<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.COLUMN,\r\n    readonly mainAxisAlignment: MainAxisAlignment\r\n    readonly crossAxisAlignment: CrossAxisAlignment\r\n    readonly children: UI<AppEvent>[]\r\n}\r\n\r\ninterface Properties {\r\n    readonly mainAxisAlignment?: MainAxisAlignment\r\n    readonly crossAxisAlignment?: CrossAxisAlignment\r\n}\r\n\r\nexport function column<AppEvent>(children: UI<AppEvent>[]): Column<AppEvent>\r\nexport function column<AppEvent>(properties: Properties, children: UI<AppEvent>[]): Column<AppEvent>\r\nexport function column<AppEvent>(...args: any[]): Column<AppEvent> {\r\n    const [properties, children]: [Properties, UI<AppEvent>[]] = (() =>\r\n        args[0] instanceof Array ? [{}, args[0]] : [args[0], args[1]]\r\n    )()\r\n    return {\r\n        kind: UIKind.COLUMN,\r\n        mainAxisAlignment: properties.mainAxisAlignment ?? MainAxisAlignment.START,\r\n        crossAxisAlignment: properties.crossAxisAlignment ?? CrossAxisAlignment.START,\r\n        children\r\n    }\r\n}\r\n\r\nexport const columnLayout = <AppEvent>(ui: Column<AppEvent>, constraints: Constraints, measureText: MeasureText): ColumnLayout => {\r\n    const initialChildren: Layout[] = []\r\n    const initial = {\r\n        children: initialChildren,\r\n        width: 0,\r\n        totalChildHeight: 0\r\n    }\r\n    const result = ui.children.reduce((acc, child) => {\r\n        const childLayout = layout(child, constraints, measureText)\r\n        acc.children.push(childLayout)\r\n        acc.totalChildHeight += childLayout.size.height\r\n        acc.width = Math.max(acc.width, childLayout.size.width)\r\n        return acc\r\n    }, initial)\r\n    const { children, width, totalChildHeight } = result\r\n    const height = ui.mainAxisAlignment == MainAxisAlignment.START ? totalChildHeight : constraints.maxHeight\r\n    return {\r\n        size: { width, height },\r\n        totalChildHeight,\r\n        children\r\n    }\r\n}\r\n\r\nexport const columnGeometry = <AppEvent>(ui: Column<AppEvent>, layout: ColumnLayout, offset: Offset, cameraStack: CameraStack): ColumnGeometry => {\r\n    const initialChildren: Geometry[] = []\r\n    const freeSpaceY = layout.size.height - layout.totalChildHeight\r\n    const initial = {\r\n        children: initialChildren,\r\n        y: (() => {\r\n            switch (ui.mainAxisAlignment) {\r\n                case MainAxisAlignment.START: return offset.y\r\n                case MainAxisAlignment.CENTER: return offset.y + freeSpaceY / 2\r\n                case MainAxisAlignment.END: return offset.y + freeSpaceY\r\n                case MainAxisAlignment.SPACE_EVENLY: return offset.y + freeSpaceY / (ui.children.length + 1)\r\n                case MainAxisAlignment.SPACE_BETWEEN: return offset.y\r\n            }\r\n        })(),\r\n    }\r\n    const addYStart = (childLayout: Layout) => childLayout.size.height\r\n    const addYCenter = (childLayout: Layout) => childLayout.size.height\r\n    const addYEnd = (childLayout: Layout) => childLayout.size.height\r\n    const addYSpaceEvenly = (childLayout: Layout) => childLayout.size.height + freeSpaceY / (ui.children.length + 1)\r\n    const addYSpaceBetween = (childLayout: Layout) => childLayout.size.height + freeSpaceY / (ui.children.length - 1)\r\n    const addY = (() => {\r\n        switch (ui.mainAxisAlignment) {\r\n            case MainAxisAlignment.START: return addYStart\r\n            case MainAxisAlignment.CENTER: return addYCenter\r\n            case MainAxisAlignment.END: return addYEnd\r\n            case MainAxisAlignment.SPACE_EVENLY: return addYSpaceEvenly\r\n            case MainAxisAlignment.SPACE_BETWEEN: return addYSpaceBetween\r\n        }\r\n    })()\r\n    const offsetXStart = (_: Layout) => offset.x\r\n    const offsetXCenter = (childLayout: Layout) => offset.x + layout.size.width / 2 - childLayout.size.width / 2\r\n    const offsetXEnd = (childLayout: Layout) => offset.x + layout.size.width - childLayout.size.width\r\n    const offsetX = (() => {\r\n        switch (ui.crossAxisAlignment) {\r\n            case CrossAxisAlignment.START: return offsetXStart\r\n            case CrossAxisAlignment.CENTER: return offsetXCenter\r\n            case CrossAxisAlignment.END: return offsetXEnd\r\n        }\r\n    })()\r\n    const result = ui.children.reduce((acc, child, i) => {\r\n        const childLayout = layout.children[i]\r\n        const childOffset = { x: offsetX(childLayout), y: acc.y }\r\n        const childGeometry = geometry(child, childLayout, childOffset, cameraStack)\r\n        acc.children.push(childGeometry)\r\n        acc.y += addY(childLayout)\r\n        return acc\r\n    }, initial)\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height\r\n    })\r\n    return { worldSpace, children: result.children }\r\n}\r\n\r\nexport function* columnTraverse<AppEvent>(ui: Column<AppEvent>, layout: ColumnLayout, geometry: ColumnGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    const nextZ = z + 1\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        yield* traverse(child, layout.children[i], geometry.children[i], nextZ)\r\n        i += 1\r\n    }\r\n}","import { UI, Size, Layout, Constraints, MeasureText, UIKind, layout, Color, Offset, WorldSpace, Geometry, geometry, Entry, traverse, } from '.'\r\nimport { CameraStack, transformWorldSpace, activeCamera } from './camera_stack'\r\n\r\nexport interface ContainerLayout {\r\n    readonly size: Size\r\n    readonly child?: Layout\r\n}\r\n\r\nexport interface ContainerGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly vertices: number[]\r\n    readonly colors: number[]\r\n    readonly vertexIndices: number[]\r\n    readonly cameraIndex: number[]\r\n    readonly textureIndex: number\r\n    readonly textureCoordinates: number[]\r\n    readonly child?: Geometry\r\n}\r\n\r\nexport interface Padding {\r\n    readonly top: number\r\n    readonly right: number\r\n    readonly bottom: number\r\n    readonly left: number\r\n}\r\n\r\nexport interface Container<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.CONTAINER,\r\n    readonly padding: Padding\r\n    readonly width?: number\r\n    readonly height?: number\r\n    readonly x?: number\r\n    readonly y?: number\r\n    readonly color?: Color\r\n    readonly child?: UI<AppEvent>\r\n}\r\n\r\ninterface Properties<AppEvent> {\r\n    readonly padding?: number\r\n    readonly width?: number\r\n    readonly height?: number\r\n    readonly x?: number\r\n    readonly y?: number\r\n    readonly color?: Color\r\n    readonly onClick?: AppEvent\r\n    readonly id?: string\r\n}\r\n\r\nconst transformPadding = (padding?: number): Padding => {\r\n    if (padding) return { top: padding, right: padding, bottom: padding, left: padding }\r\n    return { top: 0, right: 0, bottom: 0, left: 0 }\r\n}\r\n\r\nexport const container = <AppEvent>({ padding, width, height, color, x, y, onClick, id }: Properties<AppEvent>, child?: UI<AppEvent>): Container<AppEvent> => {\r\n    return {\r\n        kind: UIKind.CONTAINER,\r\n        padding: transformPadding(padding),\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n        color,\r\n        onClick,\r\n        id,\r\n        child\r\n    }\r\n}\r\n\r\nexport const containerLayout = <AppEvent>(ui: Container<AppEvent>, constraints: Constraints, measureText: MeasureText): ContainerLayout => {\r\n    const { top, right, bottom, left } = ui.padding\r\n    if (ui.child) {\r\n        const childLayout = layout(ui.child, constraints, measureText)\r\n        const width = ui.width ?? childLayout.size.width + left + right\r\n        const height = ui.height ?? childLayout.size.height + top + bottom\r\n        return {\r\n            size: { width, height },\r\n            child: childLayout\r\n        }\r\n    }\r\n    const width = (() => {\r\n        if (ui.width) return ui.width + left + right\r\n        return constraints.maxWidth\r\n    })()\r\n    const height = (() => {\r\n        if (ui.height) return ui.height + top + bottom\r\n        return constraints.maxHeight\r\n    })()\r\n    return { size: { width, height } }\r\n}\r\n\r\nexport const containerGeometry = <AppEvent>(ui: Container<AppEvent>, layout: ContainerLayout, offset: Offset, cameraStack: CameraStack): ContainerGeometry => {\r\n    const x0 = offset.x + (ui.x ?? 0)\r\n    const x1 = x0 + layout.size.width\r\n    const y0 = offset.y + (ui.y ?? 0)\r\n    const y1 = y0 + layout.size.height\r\n    const worldSpace = transformWorldSpace(cameraStack, { x0, x1, y0, y1 })\r\n    const childGeometry = (() => {\r\n        if (ui.child) {\r\n            const childLayout = layout.child!\r\n            const childOffset = {\r\n                x: x0 + ui.padding.left,\r\n                y: y0 + ui.padding.top\r\n            }\r\n            return geometry(ui.child, childLayout, childOffset, cameraStack)\r\n        }\r\n        return undefined\r\n    })()\r\n    if (ui.color) {\r\n        const { red, green, blue, alpha } = ui.color\r\n        return {\r\n            worldSpace,\r\n            vertices: [\r\n                x0, y0,\r\n                x0, y1,\r\n                x1, y0,\r\n                x1, y1,\r\n            ],\r\n            colors: [\r\n                red, green, blue, alpha,\r\n                red, green, blue, alpha,\r\n                red, green, blue, alpha,\r\n                red, green, blue, alpha,\r\n            ],\r\n            vertexIndices: [\r\n                0, 1, 2,\r\n                1, 2, 3\r\n            ],\r\n            cameraIndex: Array(4).fill(activeCamera(cameraStack)),\r\n            textureIndex: 0,\r\n            textureCoordinates: Array(8).fill(0),\r\n            child: childGeometry\r\n        }\r\n    }\r\n    return {\r\n        worldSpace,\r\n        vertices: [],\r\n        colors: [],\r\n        vertexIndices: [],\r\n        cameraIndex: [],\r\n        textureIndex: 0,\r\n        textureCoordinates: [],\r\n        child: childGeometry\r\n    }\r\n}\r\n\r\nexport function* containerTraverse<AppEvent>(ui: Container<AppEvent>, layout: ContainerLayout, geometry: ContainerGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    if (ui.child) {\r\n        const childLayout = layout.child!\r\n        const childGeometry = geometry.child!\r\n        yield* traverse(ui.child, childLayout, childGeometry, z + 1)\r\n    }\r\n}","import { Constraints, Layout, MeasureText, Size, UI, UIKind, layout, Geometry, Offset, geometry, WorldSpace, Entry, traverse } from \".\"\r\nimport { CrossAxisAlignment, MainAxisAlignment } from \"./alignment\"\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface RowLayout {\r\n    readonly size: Size\r\n    readonly totalChildWidth: number\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface RowGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Row<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.ROW,\r\n    readonly mainAxisAlignment: MainAxisAlignment\r\n    readonly crossAxisAlignment: CrossAxisAlignment\r\n    readonly children: UI<AppEvent>[]\r\n}\r\n\r\n\r\ninterface Properties {\r\n    readonly mainAxisAlignment?: MainAxisAlignment\r\n    readonly crossAxisAlignment?: CrossAxisAlignment\r\n}\r\n\r\nexport function row<AppEvent>(children: UI<AppEvent>[]): Row<AppEvent>\r\nexport function row<AppEvent>(properties: Properties, children: UI<AppEvent>[]): Row<AppEvent>\r\nexport function row<AppEvent>(...args: any[]): Row<AppEvent> {\r\n    const [properties, children]: [Properties, UI<AppEvent>[]] = (() =>\r\n        args[0] instanceof Array ? [{}, args[0]] : [args[0], args[1]]\r\n    )()\r\n    return {\r\n        kind: UIKind.ROW,\r\n        mainAxisAlignment: properties.mainAxisAlignment ?? MainAxisAlignment.START,\r\n        crossAxisAlignment: properties.crossAxisAlignment ?? CrossAxisAlignment.START,\r\n        children\r\n    }\r\n}\r\n\r\nexport const rowLayout = <AppEvent>(ui: Row<AppEvent>, constraints: Constraints, measureText: MeasureText): RowLayout => {\r\n    const initialChildren: Layout[] = []\r\n    const initial = {\r\n        children: initialChildren,\r\n        totalChildWidth: 0,\r\n        height: 0\r\n    }\r\n    const result = ui.children.reduce((acc, child) => {\r\n        const childLayout = layout(child, constraints, measureText)\r\n        acc.children.push(childLayout)\r\n        acc.totalChildWidth += childLayout.size.width\r\n        acc.height = Math.max(acc.height, childLayout.size.height)\r\n        return acc\r\n    }, initial)\r\n    const { children, totalChildWidth, height } = result\r\n    const width = ui.mainAxisAlignment == MainAxisAlignment.START ? totalChildWidth : constraints.maxWidth\r\n    return { size: { width, height }, totalChildWidth, children }\r\n}\r\n\r\nexport const rowGeometry = <AppEvent>(ui: Row<AppEvent>, layout: RowLayout, offset: Offset, cameraStack: CameraStack): RowGeometry => {\r\n    const initialChildren: Geometry[] = []\r\n    const freeSpaceX = layout.size.width - layout.totalChildWidth\r\n    const initial = {\r\n        children: initialChildren,\r\n        x: (() => {\r\n            switch (ui.mainAxisAlignment) {\r\n                case MainAxisAlignment.START: return offset.x\r\n                case MainAxisAlignment.CENTER: return offset.x + freeSpaceX / 2\r\n                case MainAxisAlignment.END: return offset.x + freeSpaceX\r\n                case MainAxisAlignment.SPACE_EVENLY: return offset.x + freeSpaceX / (ui.children.length + 1)\r\n                case MainAxisAlignment.SPACE_BETWEEN: return offset.x\r\n            }\r\n        })(),\r\n    }\r\n    const addXStart = (childLayout: Layout) => childLayout.size.width\r\n    const addXCenter = (childLayout: Layout) => childLayout.size.width\r\n    const addXEnd = (childLayout: Layout) => childLayout.size.width\r\n    const addXSpaceEvenly = (childLayout: Layout) => childLayout.size.width + freeSpaceX / (ui.children.length + 1)\r\n    const addXSpaceBetween = (childLayout: Layout) => childLayout.size.width + freeSpaceX / (ui.children.length - 1)\r\n    const addX = (() => {\r\n        switch (ui.mainAxisAlignment) {\r\n            case MainAxisAlignment.START: return addXStart\r\n            case MainAxisAlignment.CENTER: return addXCenter\r\n            case MainAxisAlignment.END: return addXEnd\r\n            case MainAxisAlignment.SPACE_EVENLY: return addXSpaceEvenly\r\n            case MainAxisAlignment.SPACE_BETWEEN: return addXSpaceBetween\r\n        }\r\n    })()\r\n    const offsetYStart = (_: Layout) => offset.y\r\n    const offsetYCenter = (childLayout: Layout) => offset.y + layout.size.height / 2 - childLayout.size.height / 2\r\n    const offsetYEnd = (childLayout: Layout) => offset.y + layout.size.height - childLayout.size.height\r\n    const offsetY = (() => {\r\n        switch (ui.crossAxisAlignment) {\r\n            case CrossAxisAlignment.START: return offsetYStart\r\n            case CrossAxisAlignment.CENTER: return offsetYCenter\r\n            case CrossAxisAlignment.END: return offsetYEnd\r\n        }\r\n    })()\r\n    const result = ui.children.reduce((acc, child, i) => {\r\n        const childLayout = layout.children[i]\r\n        const childOffset = { x: acc.x, y: offsetY(childLayout) }\r\n        const childGeometry = geometry(child, childLayout, childOffset, cameraStack)\r\n        acc.children.push(childGeometry)\r\n        acc.x += addX(childLayout)\r\n        return acc\r\n    }, initial)\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height,\r\n    })\r\n    return { worldSpace, children: result.children }\r\n}\r\n\r\nexport function* rowTraverse<AppEvent>(ui: Row<AppEvent>, layout: RowLayout, geometry: RowGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    const nextZ = z + 1\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        yield* traverse(child, layout.children[i], geometry.children[i], nextZ)\r\n        i += 1\r\n    }\r\n}","import { Connection, Constraints, Entry, geometry, Geometry, layout, Layout, MeasureText, Offset, Size, traverse, UI, UIKind, WorldSpace } from \".\"\r\nimport { Matrix3x3 } from \"../linear_algebra/matrix3x3\"\r\nimport { CameraStack, popCamera, pushCamera, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface SceneLayout {\r\n    readonly size: Size\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface SceneGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Scene<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.SCENE\r\n    readonly camera: Matrix3x3\r\n    readonly children: UI<AppEvent>[]\r\n    readonly connections: Connection[]\r\n}\r\n\r\nexport interface Properties<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly camera: Matrix3x3\r\n    readonly children: UI<AppEvent>[]\r\n    readonly connections?: Connection[]\r\n}\r\n\r\nexport const scene = <AppEvent>({ id, onClick, camera, children, connections }: Properties<AppEvent>): Scene<AppEvent> => ({\r\n    id, onClick, kind: UIKind.SCENE, camera, children, connections: connections ?? []\r\n})\r\n\r\nexport const sceneLayout = <AppEvent>(ui: Scene<AppEvent>, constraints: Constraints, measureText: MeasureText): SceneLayout => {\r\n    const children = ui.children.map(c => layout(c, constraints, measureText))\r\n    const width = constraints.maxWidth\r\n    const height = constraints.maxHeight\r\n    return { size: { width, height }, children }\r\n}\r\n\r\nexport const sceneGeometry = <AppEvent>(ui: Scene<AppEvent>, layout: SceneLayout, offset: Offset, cameraStack: CameraStack): SceneGeometry => {\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height\r\n    })\r\n    pushCamera(cameraStack, ui.camera)\r\n    const children = ui.children.map((c, i) => geometry(c, layout.children[i], offset, cameraStack))\r\n    popCamera(cameraStack)\r\n    return { worldSpace, children }\r\n}\r\n\r\nexport function* sceneTraverse<AppEvent>(ui: Scene<AppEvent>, layout: SceneLayout, geometry: SceneGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        for (const entry of traverse(child, layout.children[i], geometry.children[i], z)) {\r\n            yield entry\r\n            z = Math.max(z, entry.z)\r\n        }\r\n        i++\r\n        z++\r\n    }\r\n}\r\n","import { Constraints, Geometry, layout, Layout, MeasureText, Offset, Size, UI, UIKind, WorldSpace, geometry, Entry, traverse } from \".\";\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\";\r\n\r\nexport interface StackLayout {\r\n    readonly size: Size\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface StackGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Stack<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    kind: UIKind.STACK\r\n    children: UI<AppEvent>[]\r\n}\r\n\r\nexport const stack = <AppEvent>(children: UI<AppEvent>[]): Stack<AppEvent> => ({\r\n    kind: UIKind.STACK,\r\n    children\r\n})\r\n\r\nexport const stackLayout = <AppEvent>(ui: Stack<AppEvent>, constraints: Constraints, measureText: MeasureText): StackLayout => {\r\n    const children = ui.children.map(c => layout(c, constraints, measureText))\r\n    const width = constraints.maxWidth\r\n    const height = constraints.maxHeight\r\n    return { size: { width, height }, children }\r\n}\r\n\r\nexport const stackGeometry = <AppEvent>(ui: Stack<AppEvent>, layout: StackLayout, offset: Offset, cameraStack: CameraStack): StackGeometry => {\r\n    const children = ui.children.map((c, i) => geometry(c, layout.children[i], offset, cameraStack))\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height,\r\n    })\r\n    return { worldSpace, children }\r\n}\r\n\r\nexport function* stackTraverse<AppEvent>(ui: Stack<AppEvent>, layout: StackLayout, geometry: StackGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        for (const entry of traverse(child, layout.children[i], geometry.children[i], z)) {\r\n            yield entry\r\n            z = Math.max(z, entry.z)\r\n        }\r\n        i += 1\r\n        z += 1\r\n    }\r\n}","import { Color, Constraints, Entry, Font, MeasureText, Offset, Size, TextMeasurements, UIKind, WorldSpace } from \".\";\r\nimport { activeCamera, CameraStack, transformWorldSpace } from \"./camera_stack\";\r\n\r\nexport interface TextLayout {\r\n    readonly measurements: TextMeasurements\r\n    readonly size: Size\r\n}\r\n\r\nexport interface TextGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly textureIndex: number\r\n    readonly textureCoordinates: number[]\r\n    readonly colors: number[]\r\n    readonly vertices: number[]\r\n    readonly vertexIndices: number[]\r\n    readonly cameraIndex: number[]\r\n}\r\n\r\nexport interface Text<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.TEXT\r\n    readonly font: Font\r\n    readonly color: Color\r\n    readonly str: string\r\n}\r\n\r\ninterface Properties {\r\n    readonly font?: string\r\n    readonly size?: number\r\n    readonly color?: Color\r\n}\r\n\r\nexport function text<AppEvent>(str: string): Text<AppEvent>\r\nexport function text<AppEvent>(properties: Properties, str: string): Text<AppEvent>\r\nexport function text<AppEvent>(...args: any[]): Text<AppEvent> {\r\n    const [properties, str]: [Properties, string] = (() =>\r\n        typeof args[0] == 'string' ? [{}, args[0]] : [args[0], args[1]]\r\n    )()\r\n    return {\r\n        kind: UIKind.TEXT,\r\n        font: {\r\n            family: properties.font ?? \"monospace\",\r\n            size: properties.size ?? 14\r\n        },\r\n        color: properties.color ?? { red: 255, green: 255, blue: 255, alpha: 255 },\r\n        str\r\n    }\r\n}\r\n\r\nexport const textLayout = <AppEvent>({ font, str }: Text<AppEvent>, _: Constraints, measureText: MeasureText): TextLayout => {\r\n    const measurements = measureText(font, str)\r\n    const width = measurements.widths.reduce((acc, width) => acc + width)\r\n    const size = { width, height: font.size }\r\n    return { measurements, size }\r\n}\r\n\r\nconst vertices = (widths: number[], height: number, offset: Offset) => {\r\n    const result = []\r\n    let offsetX = offset.x\r\n    const y0 = offset.y\r\n    const y1 = offset.y + height\r\n    for (const width of widths) {\r\n        const x0 = offsetX\r\n        const x1 = offsetX + width\r\n        result.push(\r\n            x0, y0,\r\n            x0, y1,\r\n            x1, y0,\r\n            x1, y1\r\n        )\r\n        offsetX += width\r\n    }\r\n    return result\r\n}\r\n\r\nconst colors = (n: number, { red, green, blue, alpha }: Color) => {\r\n    const result = []\r\n    for (let i = 0; i < n; ++i) {\r\n        result.push(\r\n            red, green, blue, alpha,\r\n            red, green, blue, alpha,\r\n            red, green, blue, alpha,\r\n            red, green, blue, alpha,\r\n        )\r\n    }\r\n    return result\r\n}\r\n\r\nconst vertexIndices = (n: number) => {\r\n    const result = []\r\n    let offset = 0\r\n    for (let i = 0; i < n; ++i) {\r\n        result.push(\r\n            offset, offset + 1, offset + 2,\r\n            offset + 1, offset + 2, offset + 3\r\n        )\r\n        offset += 4\r\n    }\r\n    return result\r\n}\r\n\r\nexport const textGeometry = <AppEvent>(ui: Text<AppEvent>, layout: TextLayout, offset: Offset, cameraStack: CameraStack): TextGeometry => {\r\n    const textLayout = layout as TextLayout\r\n    const { measurements } = textLayout\r\n    const { textureIndex, textureCoordinates, widths } = measurements\r\n    return {\r\n        worldSpace: transformWorldSpace(cameraStack, {\r\n            x0: offset.x,\r\n            y0: offset.y,\r\n            x1: offset.x + layout.size.width,\r\n            y1: offset.y + layout.size.height\r\n        }),\r\n        textureIndex,\r\n        textureCoordinates: textureCoordinates.flat(),\r\n        colors: colors(widths.length, ui.color),\r\n        vertices: vertices(widths, ui.font.size, offset),\r\n        vertexIndices: vertexIndices(widths.length),\r\n        cameraIndex: Array(widths.length * 4).fill(activeCamera(cameraStack))\r\n    }\r\n}\r\n\r\nexport function* textTraverse<AppEvent>(ui: Text<AppEvent>, layout: TextLayout, geometry: TextGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n}","import { Center, CenterLayout, centerLayout, CenterGeometry, centerGeometry, centerTraverse } from './center'\r\nimport { Column, ColumnLayout, columnLayout, ColumnGeometry, columnGeometry, columnTraverse } from './column'\r\nimport { Container, ContainerLayout, containerLayout, ContainerGeometry, containerGeometry, containerTraverse } from './container'\r\nimport { Row, RowLayout, rowLayout, RowGeometry, rowGeometry, rowTraverse } from './row'\r\nimport { Scene, SceneLayout, sceneLayout, SceneGeometry, sceneGeometry, sceneTraverse } from './scene'\r\nimport { Stack, StackLayout, stackLayout, StackGeometry, stackGeometry, stackTraverse } from './stack'\r\nimport { Text, TextLayout, textLayout, TextGeometry, textGeometry, textTraverse } from './text'\r\nimport { CameraStack } from './camera_stack'\r\nimport { Matrix3x3 } from '../linear_algebra/matrix3x3'\r\nimport { Batch } from './batch_geometry'\r\nimport { ClickHandlers } from './gather_on_click_handlers'\r\n\r\nexport { center } from './center'\r\nexport { column } from './column'\r\nexport { container } from './container'\r\nexport { row } from './row'\r\nexport { scene } from './scene'\r\nexport { stack } from './stack'\r\nexport { text } from './text'\r\n\r\nexport enum UIKind {\r\n    CENTER,\r\n    COLUMN,\r\n    CONTAINER,\r\n    ROW,\r\n    SCENE,\r\n    STACK,\r\n    TEXT,\r\n}\r\n\r\nexport type UI<AppEvent> =\r\n    | Center<AppEvent>\r\n    | Column<AppEvent>\r\n    | Container<AppEvent>\r\n    | Row<AppEvent>\r\n    | Scene<AppEvent>\r\n    | Stack<AppEvent>\r\n    | Text<AppEvent>\r\n\r\nexport interface Color {\r\n    red: number\r\n    green: number\r\n    blue: number\r\n    alpha: number\r\n}\r\n\r\nexport interface Size {\r\n    readonly width: number\r\n    readonly height: number\r\n}\r\n\r\nexport interface Constraints {\r\n    readonly minWidth: number\r\n    readonly maxWidth: number\r\n    readonly minHeight: number\r\n    readonly maxHeight: number\r\n}\r\n\r\nexport type Layout =\r\n    | CenterLayout\r\n    | ColumnLayout\r\n    | ContainerLayout\r\n    | RowLayout\r\n    | SceneLayout\r\n    | StackLayout\r\n    | TextLayout\r\n\r\nexport interface Font {\r\n    readonly family: string\r\n    readonly size: number\r\n}\r\n\r\nexport interface TextMeasurements {\r\n    readonly widths: number[]\r\n    readonly textureIndex: number\r\n    readonly textureCoordinates: number[][]\r\n}\r\n\r\nexport type MeasureText = (font: Font, str: string) => TextMeasurements\r\n\r\nexport const layout = <AppEvent>(ui: UI<AppEvent>, constraints: Constraints, measureText: MeasureText): Layout => {\r\n    switch (ui.kind) {\r\n        case UIKind.CENTER:\r\n            return centerLayout(ui, constraints, measureText)\r\n        case UIKind.COLUMN:\r\n            return columnLayout(ui, constraints, measureText)\r\n        case UIKind.CONTAINER:\r\n            return containerLayout(ui, constraints, measureText)\r\n        case UIKind.ROW:\r\n            return rowLayout(ui, constraints, measureText)\r\n        case UIKind.SCENE:\r\n            return sceneLayout(ui, constraints, measureText)\r\n        case UIKind.STACK:\r\n            return stackLayout(ui, constraints, measureText)\r\n        case UIKind.TEXT:\r\n            return textLayout(ui, constraints, measureText)\r\n    }\r\n}\r\n\r\nexport interface Offset {\r\n    readonly x: number\r\n    readonly y: number\r\n}\r\n\r\nexport interface WorldSpace {\r\n    readonly x0: number\r\n    readonly y0: number\r\n    readonly x1: number\r\n    readonly y1: number\r\n}\r\n\r\nexport type Geometry =\r\n    | CenterGeometry\r\n    | ColumnGeometry\r\n    | ContainerGeometry\r\n    | RowGeometry\r\n    | SceneGeometry\r\n    | StackGeometry\r\n    | TextGeometry\r\n\r\nexport const geometry = <AppEvent>(ui: UI<AppEvent>, layout: Layout, offset: Offset, cameraStack: CameraStack): Geometry => {\r\n    switch (ui.kind) {\r\n        case UIKind.CENTER:\r\n            return centerGeometry(ui, layout as CenterLayout, offset, cameraStack)\r\n        case UIKind.COLUMN:\r\n            return columnGeometry(ui, layout as ColumnLayout, offset, cameraStack)\r\n        case UIKind.CONTAINER:\r\n            return containerGeometry(ui, layout as ContainerLayout, offset, cameraStack)\r\n        case UIKind.ROW:\r\n            return rowGeometry(ui, layout as RowLayout, offset, cameraStack)\r\n        case UIKind.SCENE:\r\n            return sceneGeometry(ui, layout as SceneLayout, offset, cameraStack)\r\n        case UIKind.STACK:\r\n            return stackGeometry(ui, layout as StackLayout, offset, cameraStack)\r\n        case UIKind.TEXT:\r\n            return textGeometry(ui, layout as TextLayout, offset, cameraStack)\r\n    }\r\n}\r\n\r\nexport interface Entry<AppEvent> {\r\n    readonly ui: UI<AppEvent>\r\n    readonly layout: Layout\r\n    readonly geometry: Geometry\r\n    readonly z: number\r\n}\r\n\r\nexport function* traverse<AppEvent>(ui: UI<AppEvent>, layout: Layout, geometry: Geometry, z: number): Generator<Entry<AppEvent>> {\r\n    switch (ui.kind) {\r\n        case UIKind.CENTER:\r\n            yield* centerTraverse(ui, layout as CenterLayout, geometry as CenterGeometry, z)\r\n            break\r\n        case UIKind.COLUMN:\r\n            yield* columnTraverse(ui, layout as ColumnLayout, geometry as ColumnGeometry, z)\r\n            break\r\n        case UIKind.CONTAINER:\r\n            yield* containerTraverse(ui, layout as ContainerLayout, geometry as ContainerGeometry, z)\r\n            break\r\n        case UIKind.ROW:\r\n            yield* rowTraverse(ui, layout as RowLayout, geometry as RowGeometry, z)\r\n            break\r\n        case UIKind.SCENE:\r\n            yield* sceneTraverse(ui, layout as SceneLayout, geometry as SceneGeometry, z)\r\n            break\r\n        case UIKind.STACK:\r\n            yield* stackTraverse(ui, layout as StackLayout, geometry as StackGeometry, z)\r\n            break\r\n        case UIKind.TEXT:\r\n            yield* textTraverse(ui, layout as TextLayout, geometry as TextGeometry, z)\r\n            break\r\n    }\r\n}\r\n\r\nexport interface Connection {\r\n    from: string\r\n    to: string\r\n    color: Color\r\n}\r\n\r\nexport interface Renderer<AppEvent> {\r\n    size: Size\r\n    cameras: Matrix3x3[]\r\n    clickHandlers: ClickHandlers<AppEvent>\r\n    clear: () => void\r\n    draw: (batch: Batch) => void\r\n    measureText: MeasureText\r\n    dispatch: (event: AppEvent) => void\r\n}\r\n\r\nexport interface Pointer {\r\n    x: number\r\n    y: number\r\n    id: number\r\n}","import { UI, Geometry, Layout, Entry, traverse } from \".\";\r\n\r\nexport interface Reducer<AppEvent, T> {\r\n    initial: () => T\r\n    combine: (accumulator: T, entry: Entry<AppEvent>) => T\r\n}\r\n\r\nexport const reduce = <AppEvent, T>(ui: UI<AppEvent>, layout: Layout, geometry: Geometry, reducer: Reducer<AppEvent, T>): T => {\r\n    const accumulator = reducer.initial()\r\n    for (const entry of traverse(ui, layout, geometry, 0)) {\r\n        reducer.combine(accumulator, entry)\r\n    }\r\n    return accumulator\r\n}","import { Entry, WorldSpace } from \".\"\r\n\r\nexport interface ClickHandler<AppEvent> {\r\n    onClick: AppEvent\r\n    worldSpace: WorldSpace\r\n}\r\n\r\nexport type ClickHandlers<AppEvent> = ClickHandler<AppEvent>[][]\r\n\r\nexport const initial = <AppEvent>(): ClickHandlers<AppEvent> => []\r\n\r\nexport const combine = <AppEvent>(handlers: ClickHandlers<AppEvent>, entry: Entry<AppEvent>): ClickHandlers<AppEvent> => {\r\n    if (entry.ui.onClick === undefined) return handlers\r\n    const needed = entry.z - handlers.length + 1\r\n    for (let i = 0; i < needed; ++i) handlers.push([])\r\n    handlers[entry.z].push({\r\n        onClick: entry.ui.onClick,\r\n        worldSpace: entry.geometry.worldSpace\r\n    })\r\n    return handlers\r\n}\r\n","import { Entry, WorldSpace } from \".\"\r\n\r\nexport type IdToWorldSpace = { [id: string]: WorldSpace }\r\n\r\nexport const initial = (): IdToWorldSpace => ({})\r\n\r\nexport const combine = <AppEvent>(lookup: IdToWorldSpace, entry: Entry<AppEvent>): IdToWorldSpace => {\r\n    if (!entry.ui.id) return lookup\r\n    lookup[entry.ui.id] = entry.geometry.worldSpace\r\n    return lookup\r\n}","import { Entry, UIKind } from \".\"\r\nimport { ContainerGeometry } from \"./container\"\r\nimport { TextGeometry } from \"./text\"\r\n\r\ntype Geometry = ContainerGeometry | TextGeometry\r\nexport type Layer = { [textureIndex: number]: Geometry[] }\r\nexport type Layers = Layer[]\r\n\r\nexport const initial = (): Layers => []\r\n\r\nexport const combine = <AppEvent>(layers: Layers, entry: Entry<AppEvent>): Layers => {\r\n    switch (entry.ui.kind) {\r\n        case UIKind.CONTAINER:\r\n        case UIKind.TEXT:\r\n            const entryGeometry = entry.geometry as Geometry\r\n            if (entryGeometry.vertices.length == 0) return layers\r\n            const needed = entry.z - layers.length + 1\r\n            for (let i = 0; i < needed; ++i) layers.push({})\r\n            const layer = layers[entry.z]\r\n            const geometry = (() => {\r\n                const geometry = layer[entryGeometry.textureIndex]\r\n                if (geometry) return geometry\r\n                const newGeometry: Geometry[] = []\r\n                layer[entryGeometry.textureIndex] = newGeometry\r\n                return newGeometry\r\n            })()\r\n            geometry.push(entryGeometry)\r\n            return layers\r\n        default:\r\n            return layers\r\n    }\r\n}\r\n","import { Entry, Connection, UIKind } from \".\"\r\nimport { inverse, multiplyMatrixVector } from \"../linear_algebra/matrix3x3\"\r\nimport { length } from \"../linear_algebra/vector3\"\r\n\r\nexport interface ConnectionsAndScale {\r\n    connections: Connection[]\r\n    scale: number\r\n}\r\n\r\nexport type Connections = ConnectionsAndScale[][]\r\n\r\nexport const initial = (): Connections => []\r\n\r\nexport const combine = <AppEvent>(connections: Connections, entry: Entry<AppEvent>): Connections => {\r\n    if (entry.ui.kind == UIKind.SCENE) {\r\n        if (entry.ui.connections.length === 0) return connections\r\n        const needed = entry.z - connections.length + 1\r\n        for (let i = 0; i < needed; ++i) connections.push([])\r\n        const layer = connections[entry.z]\r\n        layer.push({\r\n            connections: entry.ui.connections,\r\n            scale: length(multiplyMatrixVector(inverse(entry.ui.camera), [0, 1, 0]))\r\n        })\r\n        return connections\r\n    }\r\n    return connections\r\n}\r\n","import { Entry } from \".\"\r\nimport { ClickHandlers } from \"./gather_on_click_handlers\"\r\nimport * as gatherOnClickHandlers from \"./gather_on_click_handlers\"\r\nimport { IdToWorldSpace } from \"./id_to_world_space\"\r\nimport * as buildIdToWorldSpace from \"./id_to_world_space\"\r\nimport { Layers } from \"./layer_geometry\"\r\nimport * as layerGeometry from \"./layer_geometry\"\r\nimport { Connections } from \"./gather_connections\"\r\nimport * as gatherConnections from \"./gather_connections\"\r\n\r\nexport interface Accumulator<AppEvent> {\r\n    layers: Layers,\r\n    clickHandlers: ClickHandlers<AppEvent>,\r\n    idToWorldSpace: IdToWorldSpace\r\n    connections: Connections\r\n}\r\n\r\nexport const initial = <AppEvent>(): Accumulator<AppEvent> => ({\r\n    layers: layerGeometry.initial(),\r\n    clickHandlers: gatherOnClickHandlers.initial(),\r\n    idToWorldSpace: buildIdToWorldSpace.initial(),\r\n    connections: gatherConnections.initial()\r\n})\r\n\r\nexport const combine = <AppEvent>(acc: Accumulator<AppEvent>, entry: Entry<AppEvent>): Accumulator<AppEvent> => ({\r\n    layers: layerGeometry.combine(acc.layers, entry),\r\n    clickHandlers: gatherOnClickHandlers.combine(acc.clickHandlers, entry),\r\n    idToWorldSpace: buildIdToWorldSpace.combine(acc.idToWorldSpace, entry),\r\n    connections: gatherConnections.combine(acc.connections, entry)\r\n})\r\n","import { batchGeometry } from \"./batch_geometry\"\r\nimport { initCameraStack } from \"./camera_stack\"\r\nimport { reduce } from \"./reduce\"\r\nimport { UI, layout, geometry, Renderer } from \".\"\r\nimport * as reducer from './reducer'\r\nimport { Accumulator } from './reducer'\r\n\r\nexport const render = <AppEvent, R extends Renderer<AppEvent>>(renderer: R, ui: UI<AppEvent>): R => {\r\n    const { width, height } = renderer.size\r\n    renderer.clear()\r\n    const constraints = {\r\n        minWidth: 0,\r\n        maxWidth: width,\r\n        minHeight: 0,\r\n        maxHeight: height\r\n    }\r\n    const uiLayout = layout(ui, constraints, renderer.measureText)\r\n    const offsets = { x: 0, y: 0 }\r\n    const cameraStack = initCameraStack()\r\n    const uiGeometry = geometry(ui, uiLayout, offsets, cameraStack)\r\n    const { layers, clickHandlers, connections, idToWorldSpace } = reduce<AppEvent, Accumulator<AppEvent>>(ui, uiLayout, uiGeometry, reducer)\r\n    const batches = batchGeometry(layers, connections, idToWorldSpace)\r\n    renderer.cameras = cameraStack.cameras\r\n    renderer.clickHandlers = clickHandlers\r\n    for (const batch of batches) renderer.draw(batch)\r\n    return renderer\r\n}\r\n","import { Batch } from \"./batch_geometry\";\r\nimport { Font, TextMeasurements, Size } from \".\";\r\nimport { Matrix3x3, projection } from \"../linear_algebra/matrix3x3\";\r\nimport { Document, WebGL2Context, Buffer, UniformLocation, Shader, Program, Canvas, Texture, Window } from \"./dom\";\r\nimport { ClickHandlers } from \"./gather_on_click_handlers\";\r\n\r\ninterface Attribute {\r\n    location: number\r\n    buffer: Buffer\r\n}\r\n\r\ninterface Attributes {\r\n    vertices: Attribute\r\n    vertexIndices: Buffer\r\n    colors: Attribute\r\n    textureCoordinates: Attribute\r\n    cameraIndex: Attribute\r\n}\r\n\r\ninterface Uniforms {\r\n    projection: UniformLocation\r\n    texture: UniformLocation\r\n    cameras: UniformLocation\r\n}\r\n\r\nexport enum ProgramKind { DATA, ERROR }\r\n\r\ninterface ProgramData {\r\n    kind: ProgramKind.DATA\r\n    vertexShader: Shader\r\n    fragmentShader: Shader\r\n    program: Program\r\n    attributes: Attributes\r\n    uniforms: Uniforms\r\n}\r\n\r\nexport interface ProgramError {\r\n    kind: ProgramKind.ERROR\r\n    vertexInfoLog: string | null\r\n    fragmentInfoLog: string | null\r\n}\r\n\r\n\r\ntype DevicePixelRatio = number\r\n\r\nconst nearestPowerOfTwo = (x: number): number => {\r\n    let current = 1\r\n    while (current < x) {\r\n        current <<= 1\r\n    }\r\n    return current\r\n}\r\n\r\nconst createTextMeasurements = (document: Document, gl: WebGL2Context, font: Font, dpr: DevicePixelRatio) => {\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')!\r\n    const totalCells = 256\r\n    const rows = Math.sqrt(totalCells)\r\n    const size = nearestPowerOfTwo(font.size * rows)\r\n    const cellSize = size / rows\r\n    canvas.width = size * dpr\r\n    canvas.height = size * dpr\r\n    canvas.style.width = `${size}px`\r\n    canvas.style.height = `${size}px`\r\n    ctx.scale(dpr, dpr)\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n    ctx.font = `${font.size}px ${font.family}`\r\n    ctx.fillStyle = 'white'\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    const height = font.size\r\n    const widths: number[] = []\r\n    const textureCoordinates: number[][] = []\r\n    for (let i = 0; i < totalCells; ++i) {\r\n        const c = String.fromCharCode(i)\r\n        const metric = ctx.measureText(c)\r\n        const width = Math.ceil(metric.width)\r\n        const x = i % rows * cellSize\r\n        const y = Math.floor(i / rows) * cellSize\r\n        ctx.fillText(c, x, y)\r\n        widths.push(width)\r\n        const x0 = x / size\r\n        const x1 = (x + width) / size\r\n        const y0 = y / size\r\n        const y1 = (y + height) / size\r\n        textureCoordinates.push([\r\n            x0, y0,\r\n            x0, y1,\r\n            x1, y0,\r\n            x1, y1\r\n        ])\r\n    }\r\n    const texture = gl.createTexture()!\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n      /*mipLevel*/0,\r\n      /*internalformat*/gl.RGBA,\r\n      /*srcFormat*/gl.RGBA,\r\n      /*srcType*/gl.UNSIGNED_BYTE,\r\n      /*source*/canvas\r\n    )\r\n    gl.generateMipmap(gl.TEXTURE_2D)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n    return { widths, textureCoordinates, texture }\r\n}\r\n\r\nconst mapString = <T>(str: string, f: (c: string, i: number) => T): Array<T> => {\r\n    let result = []\r\n    for (let i = 0; i < str.length; ++i) {\r\n        result.push(f(str[i], i))\r\n    }\r\n    return result\r\n}\r\n\r\nexport class WebGL2Renderer<AppEvent> {\r\n    _size: Size\r\n    _cameras: Matrix3x3[]\r\n\r\n    constructor(\r\n        public window: Window,\r\n        public document: Document,\r\n        public canvas: Canvas,\r\n        public gl: WebGL2Context,\r\n        public kind: ProgramKind,\r\n        public program: ProgramData,\r\n        public textures: Texture[],\r\n        public textMeasurementsCache: Map<string, TextMeasurements>,\r\n        public clickHandlers: ClickHandlers<AppEvent>,\r\n        public dispatch: (event: AppEvent) => void\r\n    ) { }\r\n\r\n    clear = () => {\r\n        const { gl } = this\r\n        gl.clear(gl.COLOR_BUFFER_BIT)\r\n    }\r\n\r\n    set size(size: Size) {\r\n        const { gl, program, window } = this\r\n        const { uniforms } = program\r\n        const { canvas } = gl\r\n        gl.uniformMatrix3fv(uniforms.projection, /*transpose*/true, projection(size))\r\n        canvas.width = size.width * window.devicePixelRatio\r\n        canvas.height = size.height * window.devicePixelRatio\r\n        canvas.style.width = `${size.width}px`\r\n        canvas.style.height = `${size.height}px`\r\n        gl.viewport(0, 0, canvas.width, canvas.height)\r\n        this._size = size\r\n    }\r\n\r\n    get size() { return this._size }\r\n\r\n    set cameras(cameras: Matrix3x3[]) {\r\n        const { gl, program } = this\r\n        const { uniforms } = program\r\n        const data: number[] = []\r\n        for (const camera of cameras) data.push(...camera)\r\n        gl.uniformMatrix3fv(uniforms.cameras, /*transpose*/true, data)\r\n        this._cameras = cameras\r\n    }\r\n\r\n    get cameras() { return this._cameras }\r\n\r\n    draw = ({ triangles, lines }: Batch) => {\r\n        const { gl, program, textures } = this\r\n        const { attributes } = program\r\n        {\r\n            const { vertices, colors, vertexIndices, textureCoordinates, textureIndex, cameraIndex } = triangles\r\n            if (vertices.length !== 0) {\r\n                const texture = textures[textureIndex]\r\n                gl.bindTexture(gl.TEXTURE_2D, texture)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.vertices.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.colors.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.textureCoordinates.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.cameraIndex.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Uint8Array(cameraIndex), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.vertexIndices)\r\n                gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW)\r\n                gl.drawElements(gl.TRIANGLES, /*count*/vertexIndices.length, /*type*/gl.UNSIGNED_SHORT, /*offset*/0)\r\n            }\r\n        }\r\n        {\r\n            const { vertices, colors } = lines\r\n            if (vertices.length !== 0) {\r\n                const texture = textures[0]\r\n                const count = vertices.length / 2\r\n                gl.bindTexture(gl.TEXTURE_2D, texture)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.vertices.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.colors.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.textureCoordinates.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(Array(count * 2).fill(0)), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.cameraIndex.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Uint8Array(Array(count).fill(0)), gl.STATIC_DRAW)\r\n                gl.drawArrays(gl.LINES, /*first*/0, count)\r\n            }\r\n        }\r\n    }\r\n\r\n    getTextureMeasurements = (font: Font, dpr: DevicePixelRatio) => {\r\n        const { document, gl } = this\r\n        const key = `${dpr} ${font.size} ${font.family}`\r\n        const measurements = this.textMeasurementsCache.get(key)\r\n        if (measurements) return measurements\r\n        const { texture, widths, textureCoordinates } = createTextMeasurements(document, gl, font, dpr)\r\n        const textureIndex = this.textures.length\r\n        this.textures.push(texture)\r\n        const newMeasurements = { widths, textureIndex, textureCoordinates }\r\n        this.textMeasurementsCache.set(key, newMeasurements)\r\n        return newMeasurements\r\n    }\r\n\r\n    measureText = (font: Font, str: string) => {\r\n        const { window } = this\r\n        const dpr = window.devicePixelRatio\r\n        const { widths, textureIndex, textureCoordinates } = this.getTextureMeasurements(font, dpr)\r\n        const indices = mapString(str, c => c.charCodeAt(0))\r\n        return {\r\n            widths: indices.map(i => widths[i]),\r\n            textureIndex,\r\n            textureCoordinates: indices.map(i => textureCoordinates[i]),\r\n        }\r\n    }\r\n}\r\n\r\nconst createVertexShader = (gl: WebGL2Context, attributes: Attributes): Shader => {\r\n    const { vertices, colors, textureCoordinates, cameraIndex } = attributes\r\n    const vertexShaderSource = `#version 300 es\r\n  uniform mat3 u_projection;\r\n  uniform mat3 u_cameras[8];\r\n\r\n  layout(location = ${vertices.location}) in vec2 a_vertex;\r\n  layout(location = ${colors.location}) in vec4 a_color;\r\n  layout(location = ${textureCoordinates.location}) in vec2 a_textureCoordinates;\r\n  layout(location = ${cameraIndex.location}) in uint a_cameraIndex;\r\n\r\n  out vec4 v_color;\r\n  out vec2 v_textureCoordinates;\r\n\r\n  void main() {\r\n    mat3 camera = u_cameras[a_cameraIndex];\r\n    mat3 transform = u_projection * inverse(camera);\r\n    gl_Position = vec4((transform * vec3(a_vertex, 1)).xy, 0, 1);\r\n    v_color = a_color / 255.0;\r\n    v_textureCoordinates = a_textureCoordinates;\r\n  }\r\n  `\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER)!\r\n    gl.shaderSource(vertexShader, vertexShaderSource)\r\n    gl.compileShader(vertexShader)\r\n    return vertexShader\r\n}\r\n\r\nconst createFragmentShader = (gl: WebGL2Context): Shader => {\r\n    const fragmentShaderSource = `#version 300 es\r\n  precision highp float;\r\n\r\n  uniform sampler2D u_texture;\r\n\r\n  in vec4 v_color;\r\n  in vec2 v_textureCoordinates;\r\n\r\n  out vec4 fragColor;\r\n  \r\n  void main() {\r\n    fragColor = texture(u_texture, v_textureCoordinates) * v_color;\r\n  }\r\n  `\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!\r\n    gl.shaderSource(fragmentShader, fragmentShaderSource)\r\n    gl.compileShader(fragmentShader)\r\n    return fragmentShader\r\n}\r\n\r\nconst bindVertices = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_vertex')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        /*size*/2,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst bindColors = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_color')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        /*size*/4,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst bindTextureCoordinates = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_textureCoordinates')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        /*size*/2,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst bindCameraIndex = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_cameraIndex')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribIPointer(\r\n        location,\r\n        /*size*/1,\r\n        /*type*/gl.UNSIGNED_BYTE,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst createProgram = (gl: WebGL2Context): ProgramData | ProgramError => {\r\n    const attributes: Attributes = {\r\n        vertices: {\r\n            location: 0,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        colors: {\r\n            location: 1,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        textureCoordinates: {\r\n            location: 2,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        cameraIndex: {\r\n            location: 3,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        vertexIndices: gl.createBuffer()!\r\n    }\r\n    const vertexShader = createVertexShader(gl, attributes)\r\n    const fragmentShader = createFragmentShader(gl)\r\n    const program = gl.createProgram()!\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n    gl.linkProgram(program)\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        return {\r\n            kind: ProgramKind.ERROR,\r\n            vertexInfoLog: gl.getShaderInfoLog(vertexShader),\r\n            fragmentInfoLog: gl.getShaderInfoLog(fragmentShader),\r\n        }\r\n    }\r\n    gl.useProgram(program)\r\n    const vertexArrayObject = gl.createVertexArray()!\r\n    gl.bindVertexArray(vertexArrayObject)\r\n    bindVertices(gl, program, attributes.vertices)\r\n    bindColors(gl, program, attributes.colors)\r\n    bindTextureCoordinates(gl, program, attributes.textureCoordinates)\r\n    bindCameraIndex(gl, program, attributes.cameraIndex)\r\n    const uniforms: Uniforms = {\r\n        projection: gl.getUniformLocation(program, 'u_projection')!,\r\n        texture: gl.getUniformLocation(program, 'u_texture')!,\r\n        cameras: gl.getUniformLocation(program, 'u_cameras')!\r\n    }\r\n    return {\r\n        kind: ProgramKind.DATA,\r\n        vertexShader,\r\n        fragmentShader,\r\n        program,\r\n        attributes,\r\n        uniforms\r\n    }\r\n}\r\n\r\ninterface Parameters<AppEvent> {\r\n    width: number\r\n    height: number\r\n    document: Document\r\n    window: Window\r\n    dispatch?: (event: AppEvent) => void\r\n}\r\n\r\nexport const webGL2Renderer = <AppEvent>({ width, height, document, window, dispatch }: Parameters<AppEvent>): WebGL2Renderer<AppEvent> | ProgramError => {\r\n    const canvas = document.createElement('canvas')\r\n    canvas.style.touchAction = 'none'\r\n    const gl = canvas.getContext('webgl2')!\r\n    gl.enable(gl.BLEND)\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n    gl.depthMask(false)\r\n    gl.activeTexture(gl.TEXTURE0)\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true)\r\n    gl.clearColor(0, 0, 0, 1)\r\n    const program = createProgram(gl)\r\n    if (program.kind == ProgramKind.ERROR) return program\r\n    const texture = gl.createTexture()!\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n      /*mipLevel*/0,\r\n      /*internalformat*/gl.RGBA,\r\n      /*width*/1,\r\n      /*height*/1,\r\n      /*border*/0,\r\n      /*srcFormat*/gl.RGBA,\r\n      /*srcType*/gl.UNSIGNED_BYTE,\r\n      /*data*/new Uint8Array([255, 255, 255, 255])\r\n    )\r\n    const renderer = new WebGL2Renderer<AppEvent>(\r\n        window,\r\n        document,\r\n        canvas,\r\n        gl,\r\n        program.kind,\r\n        program,\r\n        [texture],\r\n        new Map(),\r\n        [],\r\n        dispatch ?? (() => { })\r\n    )\r\n    renderer.size = { width, height }\r\n    return renderer\r\n}","import { pointerDown } from \"./pointer_down\"\r\nimport { render } from \"./render\"\r\nimport { ProgramError, ProgramKind, WebGL2Renderer, webGL2Renderer } from \"./webgl2\"\r\nimport { Pointer, UI } from \".\"\r\nimport { Document, Window, PointerEvent } from \"./dom\"\r\n\r\nexport const transformPointer = (p: PointerEvent): Pointer => ({\r\n    x: p.clientX,\r\n    y: p.clientY,\r\n    id: p.pointerId,\r\n})\r\n\r\nexport type Dispatch<AppEvent> = (event: AppEvent) => void\r\n\r\ntype View<State, AppEvent> = (state: State) => UI<AppEvent>\r\n\r\ninterface Milliseconds {\r\n    milliseconds: number\r\n}\r\n\r\ninterface Scheduled<AppEvent> {\r\n    after: Milliseconds\r\n    event: AppEvent\r\n}\r\n\r\nexport interface UpdateResult<State, AppEvent> {\r\n    state: State\r\n    render?: boolean\r\n    schedule?: Scheduled<AppEvent>[]\r\n    dispatch?: AppEvent[]\r\n}\r\n\r\ntype Update<State, AppEvent> = (state: State, event: AppEvent) => UpdateResult<State, AppEvent>\r\n\r\ninterface Properties<State, AppEvent> {\r\n    state: State\r\n    view: View<State, AppEvent>\r\n    update: Update<State, AppEvent>\r\n    window: Window\r\n    document: Document\r\n    requestAnimationFrame: (callback: () => void) => void\r\n    setTimeout: (callback: () => void, milliseconds: number) => void\r\n}\r\n\r\nexport const run = <State, AppEvent>(properties: Properties<State, AppEvent>): Dispatch<AppEvent> | ProgramError => {\r\n    let { state, view, update, window, document, requestAnimationFrame, setTimeout } = properties\r\n    const renderer_or_error = webGL2Renderer<AppEvent>({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        window,\r\n        document,\r\n    })\r\n    switch (renderer_or_error.kind) {\r\n        case ProgramKind.ERROR:\r\n            return renderer_or_error as ProgramError\r\n        case ProgramKind.DATA:\r\n            let renderer = renderer_or_error as WebGL2Renderer<AppEvent>\r\n            let renderQueued = false\r\n            const scheduleRender = () => {\r\n                if (!renderQueued) {\r\n                    renderQueued = true\r\n                    requestAnimationFrame(() => {\r\n                        renderer = render(renderer, view(state))\r\n                        renderQueued = false\r\n                    })\r\n                }\r\n            }\r\n            const dispatch = (event: AppEvent) => {\r\n                const { state: newState, render, schedule, dispatch: dispatchEvents } = update(state, event)\r\n                state = newState\r\n                if (render) scheduleRender()\r\n                for (const { after, event } of schedule ?? []) {\r\n                    const { milliseconds } = after\r\n                    setTimeout(() => dispatch(event), milliseconds)\r\n                }\r\n                for (const event of dispatchEvents ?? []) dispatch(event)\r\n            }\r\n            renderer.dispatch = dispatch\r\n            document.body.appendChild(renderer.canvas)\r\n            document.addEventListener(\"pointerdown\", p => {\r\n                renderer = pointerDown<AppEvent, WebGL2Renderer<AppEvent>>(renderer, transformPointer(p))\r\n            })\r\n            window.addEventListener(\"resize\", () => {\r\n                renderer.size = { width: window.innerWidth, height: window.innerHeight }\r\n                scheduleRender()\r\n            })\r\n            scheduleRender()\r\n            return dispatch\r\n    }\r\n}\r\n","import { CrossAxisAlignment, MainAxisAlignment } from \"../alignment\"\r\nimport { AppEvent, EventKind } from \"../../event\"\r\nimport { Body, Finder, Input, Node, Output, State, Theme, VirtualKeyboardKind } from \"../../state\"\r\nimport { text, stack, scene, row, container, column, Connection, UI } from '..'\r\n\r\n\r\nexport const spacer = (size: number): UI<AppEvent> =>\r\n    container({ width: size, height: size })\r\n\r\n\r\nexport const intersperse = <T>(array: T[], seperator: T): T[] => {\r\n    const result = [array[0]]\r\n    for (const element of array.slice(1)) {\r\n        result.push(seperator, element)\r\n    }\r\n    return result\r\n}\r\n\r\n\r\nexport const inputUi = (theme: Theme, { name, selected }: Input, nodeIndex: number, inputIndex: number): UI<AppEvent> =>\r\n    container({\r\n        onClick: {\r\n            kind: EventKind.CLICKED_INPUT,\r\n            inputPath: { nodeIndex: nodeIndex, inputIndex: inputIndex }\r\n        }\r\n    },\r\n        row({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n            container({\r\n                id: `input ${nodeIndex} ${inputIndex}`,\r\n                width: 14,\r\n                height: 14,\r\n                color: selected ? theme.selectedInput : theme.input,\r\n            }),\r\n            spacer(4),\r\n            text(name)\r\n        ])\r\n    )\r\n\r\n\r\nexport const inputsUi = (theme: Theme, inputs: Input[], nodeIndex: number) =>\r\n    column(\r\n        intersperse(\r\n            inputs.map((input, inputIndex) => inputUi(theme, input, nodeIndex, inputIndex)),\r\n            spacer(4)\r\n        )\r\n    )\r\n\r\n\r\nexport const outputUi = (theme: Theme, { name, selected }: Output, nodeIndex: number, outputIndex: number): UI<AppEvent> =>\r\n    container({\r\n        onClick: {\r\n            kind: EventKind.CLICKED_OUTPUT,\r\n            outputPath: { nodeIndex: nodeIndex, outputIndex: outputIndex }\r\n        }\r\n    },\r\n        row({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n            text(name),\r\n            spacer(4),\r\n            container({\r\n                id: `output ${nodeIndex} ${outputIndex}`,\r\n                width: 14,\r\n                height: 14,\r\n                color: selected ? theme.selectedInput : theme.input,\r\n            }),\r\n        ])\r\n    )\r\n\r\n\r\nexport const outputsUi = (theme: Theme, outputs: Output[], nodeIndex: number) =>\r\n    column(\r\n        intersperse(\r\n            outputs.map((output, outputIndex) => outputUi(theme, output, nodeIndex, outputIndex)),\r\n            spacer(4)\r\n        )\r\n    )\r\n\r\n\r\nexport const numberUi = (theme: Theme, body: Body, nodeIndex: number): UI<AppEvent> =>\r\n    container({\r\n        color: body.editing ? theme.selectedInput : theme.background,\r\n        padding: 5,\r\n        onClick: {\r\n            kind: EventKind.CLICKED_NUMBER,\r\n            nodeIndex\r\n        }\r\n    },\r\n        text(body.value.toString()))\r\n\r\n\r\nexport const nodeUi = (theme: Theme, { name, x, y, inputs, body, outputs }: Node, index: number): UI<AppEvent> => {\r\n    const rowEntries: UI<AppEvent>[] = []\r\n    if (inputs.length) rowEntries.push(inputsUi(theme, inputs, index))\r\n    if (inputs.length && outputs.length) rowEntries.push(spacer(15))\r\n    if (body !== undefined) rowEntries.push(numberUi(theme, body, index), spacer(15))\r\n    if (outputs.length) rowEntries.push(outputsUi(theme, outputs, index))\r\n    return container(\r\n        {\r\n            color: theme.node,\r\n            padding: 4,\r\n            x, y,\r\n            onClick: {\r\n                kind: EventKind.CLICKED_NODE,\r\n                index: index\r\n            }\r\n        },\r\n        column({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n            text(name),\r\n            spacer(4),\r\n            row(rowEntries)\r\n        ])\r\n    )\r\n}\r\n\r\n\r\nexport const finder = ({ search, options }: Finder, theme: Theme): UI<AppEvent> =>\r\n    column({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n        container({ height: 10 }),\r\n        container({ color: theme.node, padding: 4 },\r\n            column([\r\n                container({ color: theme.background, width: 300, padding: 4 },\r\n                    text({ color: theme.input, size: 24 }, search.length ? search : \"Search ...\")),\r\n                container({ width: 10, height: 10 }),\r\n                ...options.map((option, i) =>\r\n                    container<AppEvent>({\r\n                        padding: 4,\r\n                        onClick: {\r\n                            kind: EventKind.CLICKED_FINDER_OPTION,\r\n                            option\r\n                        }\r\n                    },\r\n                        text({\r\n                            size: 18,\r\n                            color: i == 0 ? theme.input : { red: 255, green: 255, blue: 255, alpha: 255 }\r\n                        }, option)\r\n                    )\r\n                )\r\n            ])\r\n        )\r\n    ])\r\n\r\n\r\nexport const virtualKey = (key: string): UI<AppEvent> =>\r\n    container({\r\n        padding: 10,\r\n        onClick: {\r\n            kind: EventKind.VIRTUAL_KEYDOWN,\r\n            key\r\n        }\r\n    }, text({ size: 24 }, key))\r\n\r\n\r\nexport const virtualKeys = (keys: string[]) =>\r\n    row(keys.map(c => virtualKey(c)))\r\n\r\n\r\nexport const alphabeticVirtualKeyboard = (theme: Theme) =>\r\n    column({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n        row({ mainAxisAlignment: MainAxisAlignment.SPACE_BETWEEN }, [\r\n            container({ padding: 4, color: theme.node },\r\n                column([\r\n                    virtualKeys(['1', '2', '3', '4', '5']),\r\n                    virtualKeys(['q', 'w', 'e', 'r', 't']),\r\n                    virtualKeys(['a', 's', 'd', 'f', 'g']),\r\n                    virtualKeys(['z', 'x', 'c', 'v']),\r\n                    virtualKeys(['sft', 'space']),\r\n                ])\r\n            ),\r\n            container({ padding: 4, color: theme.node },\r\n                column({ crossAxisAlignment: CrossAxisAlignment.END }, [\r\n                    virtualKeys(['6', '7', '8', '9', '0']),\r\n                    virtualKeys(['y', 'u', 'i', 'o', 'p']),\r\n                    virtualKeys(['h', 'j', 'k', 'l']),\r\n                    virtualKeys(['b', 'n', 'm', 'del']),\r\n                    virtualKeys(['space', 'ret']),\r\n                ])\r\n            ),\r\n        ]),\r\n    ])\r\n\r\n\r\nexport const numericVirtualKeyboard = (theme: Theme) =>\r\n    column({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n        row({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n            container({ padding: 4, color: theme.node },\r\n                column({ crossAxisAlignment: CrossAxisAlignment.END }, [\r\n                    virtualKeys(['1', '2', '3', '4']),\r\n                    virtualKeys(['5', '6', '7', '8']),\r\n                    virtualKeys(['9', '0', 'del']),\r\n                    virtualKeys(['.', 'ret']),\r\n                ])\r\n            ),\r\n        ]),\r\n    ])\r\n\r\n\r\nexport const virtualKeyboard = (theme: Theme, kind: VirtualKeyboardKind) => {\r\n    switch (kind) {\r\n        case VirtualKeyboardKind.ALPHABETIC: return alphabeticVirtualKeyboard(theme)\r\n        case VirtualKeyboardKind.NUMERIC: return numericVirtualKeyboard(theme)\r\n    }\r\n}\r\n\r\n\r\nexport const view = (state: State): UI<AppEvent> => {\r\n    const nodes: UI<AppEvent>[] = []\r\n    state.graph.nodes.forEach((node, i) => {\r\n        if (i !== state.draggedNode) nodes.push(nodeUi(state.theme, node, i))\r\n    })\r\n    if (state.draggedNode !== null) {\r\n        const i = state.draggedNode\r\n        nodes.push(nodeUi(state.theme, state.graph.nodes[i], i))\r\n    }\r\n    const connections: Connection[] = state.graph.edges.map(({ input, output }) => ({\r\n        from: `output ${output.nodeIndex} ${output.outputIndex}`,\r\n        to: `input ${input.nodeIndex} ${input.inputIndex}`,\r\n        color: state.theme.connection\r\n    }))\r\n    const stacked: UI<AppEvent>[] = [\r\n        container({ color: state.theme.background, onClick: { kind: EventKind.CLICKED_BACKGROUND } }),\r\n        scene({ camera: state.camera, children: nodes, connections }),\r\n    ]\r\n    if (state.finder.show) stacked.push(finder(state.finder, state.theme))\r\n    if (state.virtualKeyboard.show) stacked.push(virtualKeyboard(state.theme, state.virtualKeyboard.kind))\r\n    return stack(stacked)\r\n}","import { AppEvent, EventKind, update } from \"./event\"\r\nimport { identity } from \"./linear_algebra/matrix3x3\"\r\nimport { Dispatch, run, transformPointer } from \"./ui/run\"\r\nimport { view } from './ui/view'\r\nimport { InputTargetKind, State, VirtualKeyboardKind } from \"./state\"\r\nimport { Document } from './ui/dom'\r\n\r\n\r\nconst initialState: State = {\r\n    graph: {\r\n        nodes: [\r\n            {\r\n                name: \"Number\",\r\n                inputs: [],\r\n                body: { value: 5, editing: false },\r\n                outputs: [\r\n                    { name: \"out\", selected: false, edgeIndices: [0] },\r\n                ],\r\n                x: 25,\r\n                y: 25\r\n            },\r\n            {\r\n                name: \"Number\",\r\n                inputs: [],\r\n                body: { value: 10, editing: false },\r\n                outputs: [\r\n                    { name: \"out\", selected: false, edgeIndices: [1] },\r\n                ],\r\n                x: 25,\r\n                y: 100\r\n            },\r\n            {\r\n                name: \"Add\",\r\n                inputs: [\r\n                    { name: \"x\", selected: false, edgeIndices: [0] },\r\n                    { name: \"y\", selected: false, edgeIndices: [1] }\r\n                ],\r\n                outputs: [\r\n                    { name: \"out\", selected: false, edgeIndices: [2] },\r\n                ],\r\n                x: 150,\r\n                y: 50\r\n            },\r\n            {\r\n                name: \"Number\",\r\n                inputs: [],\r\n                body: { value: 15, editing: false },\r\n                outputs: [\r\n                    { name: \"out\", selected: false, edgeIndices: [3] },\r\n                ],\r\n                x: 175,\r\n                y: 150\r\n            },\r\n            {\r\n                name: \"Divide\",\r\n                inputs: [\r\n                    { name: \"x\", selected: false, edgeIndices: [2] },\r\n                    { name: \"y\", selected: false, edgeIndices: [3] }\r\n                ],\r\n                outputs: [\r\n                    { name: \"out\", selected: false, edgeIndices: [4] },\r\n                ],\r\n                x: 350,\r\n                y: 50\r\n            },\r\n            {\r\n                name: \"Log\",\r\n                inputs: [\r\n                    { name: \"value\", selected: false, edgeIndices: [4] },\r\n                ],\r\n                outputs: [],\r\n                x: 550,\r\n                y: 50\r\n            },\r\n        ],\r\n        edges: [\r\n            {\r\n                output: { nodeIndex: 0, outputIndex: 0 },\r\n                input: { nodeIndex: 2, inputIndex: 0 },\r\n            },\r\n            {\r\n                output: { nodeIndex: 1, outputIndex: 0 },\r\n                input: { nodeIndex: 2, inputIndex: 1 },\r\n            },\r\n            {\r\n                output: { nodeIndex: 2, outputIndex: 0 },\r\n                input: { nodeIndex: 4, inputIndex: 0 },\r\n            },\r\n            {\r\n                output: { nodeIndex: 3, outputIndex: 0 },\r\n                input: { nodeIndex: 4, inputIndex: 1 },\r\n            },\r\n            {\r\n                output: { nodeIndex: 4, outputIndex: 0 },\r\n                input: { nodeIndex: 5, inputIndex: 0 },\r\n            }\r\n        ]\r\n    },\r\n    zooming: false,\r\n    dragging: false,\r\n    draggedNode: null,\r\n    pointers: [],\r\n    pointerDistance: 0,\r\n    pointerCenter: [0, 0],\r\n    camera: identity(),\r\n    selectedOutput: null,\r\n    selectedInput: null,\r\n    theme: {\r\n        background: { red: 2, green: 22, blue: 39, alpha: 255 },\r\n        node: { red: 41, green: 95, blue: 120, alpha: 255 },\r\n        input: { red: 188, green: 240, blue: 192, alpha: 255 },\r\n        selectedInput: { red: 175, green: 122, blue: 208, alpha: 255 },\r\n        connection: { red: 255, green: 255, blue: 255, alpha: 255 },\r\n    },\r\n    potentialDoubleClick: false,\r\n    nodePlacementLocation: { x: 0, y: 0 },\r\n    finder: {\r\n        search: '',\r\n        options: [],\r\n        show: false\r\n    },\r\n    virtualKeyboard: {\r\n        show: false,\r\n        kind: VirtualKeyboardKind.ALPHABETIC\r\n    },\r\n    inputTarget: { kind: InputTargetKind.NONE },\r\n    operations: {\r\n        \"Number\": {\r\n            name: \"Number\",\r\n            inputs: [],\r\n            body: 0,\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Add\": {\r\n            name: \"Add\",\r\n            inputs: [\"x\", \"y\"],\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Subtract\": {\r\n            name: \"Subtract\",\r\n            inputs: [\"x\", \"y\"],\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Multiply\": {\r\n            name: \"Multiply\",\r\n            inputs: [\"x\", \"y\"],\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Divide\": {\r\n            name: \"Divide\",\r\n            inputs: [\"x\", \"y\"],\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Equal\": {\r\n            name: \"Equal\",\r\n            inputs: [\"x\", \"y\"],\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Less Than\": {\r\n            name: \"Less Than\",\r\n            inputs: [\"x\", \"y\"],\r\n            outputs: [\"out\"]\r\n        },\r\n        \"Log\": {\r\n            name: \"Log\",\r\n            inputs: [\"value\"],\r\n            outputs: []\r\n        }\r\n    }\r\n}\r\n\r\nconst dispatch = run({\r\n    state: initialState,\r\n    view,\r\n    update,\r\n    window,\r\n    document: document as Document,\r\n    requestAnimationFrame,\r\n    setTimeout\r\n}) as Dispatch<AppEvent>\r\n\r\nif (typeof PointerEvent.prototype.getCoalescedEvents === 'function') {\r\n    document.addEventListener('pointermove', (e) => {\r\n        e.getCoalescedEvents().forEach(p => {\r\n            dispatch({\r\n                kind: EventKind.POINTER_MOVE,\r\n                pointer: transformPointer(p)\r\n            })\r\n        })\r\n    })\r\n} else {\r\n    document.addEventListener('pointermove', p =>\r\n        dispatch({\r\n            kind: EventKind.POINTER_MOVE,\r\n            pointer: transformPointer(p)\r\n        })\r\n    )\r\n}\r\n\r\ndocument.addEventListener(\"pointerdown\", p => {\r\n    dispatch({\r\n        kind: EventKind.POINTER_DOWN,\r\n        pointer: transformPointer(p)\r\n    })\r\n})\r\n\r\ndocument.addEventListener(\"pointerup\", p => {\r\n    dispatch({\r\n        kind: EventKind.POINTER_UP,\r\n        pointer: transformPointer(p)\r\n    })\r\n})\r\n\r\ndocument.addEventListener('wheel', e => {\r\n    e.preventDefault()\r\n    dispatch({\r\n        kind: EventKind.WHEEL,\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n        deltaY: e.deltaY,\r\n    })\r\n}, { passive: false })\r\n\r\ndocument.addEventListener('contextmenu', e => {\r\n    e.preventDefault()\r\n})\r\n\r\ndocument.addEventListener('touchend', () => {\r\n    document.body.requestFullscreen()\r\n})\r\n\r\ndocument.addEventListener('keydown', e => {\r\n    e.preventDefault()\r\n    dispatch({\r\n        kind: EventKind.KEYDOWN,\r\n        key: e.key\r\n    })\r\n})"],"names":["$f4c0df53f29f413e$export$fad298d038a96a64","haystack","needle","haystackIndex","needleIndex","length","n","toLowerCase","$2a9d6d4b688c9d90$export$b74061472fe7c07","width","height","$2a9d6d4b688c9d90$export$d73ee8ef04f5226a","x","y","$2a9d6d4b688c9d90$export$dcdf75081b88279d","$2a9d6d4b688c9d90$export$84b43e5e8429f175","matrices","head","tail","reduce","a","b","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","$2a9d6d4b688c9d90$export$dbb85424dca880d0","b1","b2","b3","$2a9d6d4b688c9d90$export$70ae2c07e401031b","idet","$9a57707492d0f60d$export$f24224f1c91d8156","c","Math","sqrt","pow","$0b89d474933103bc$export$52710c6013234220","VirtualKeyboardKind1","$0b89d474933103bc$export$c59a831e29c6eb0","InputTargetKind1","$d7336fab2a6e7c56$export$50508d7849040d51","EventKind1","$d7336fab2a6e7c56$var$updateFinderOptions","state","finder","options","Object","keys","operations","filter","item","search","$d7336fab2a6e7c56$export$a72e97d68c48a4a","show","virtualKeyboard","kind","ALPHABETIC","inputTarget","FINDER","potentialDoubleClick","$d7336fab2a6e7c56$var$closeFinder","NONE","$d7336fab2a6e7c56$var$insertOperationFromFinder","name","operation","_","camera","nodePlacementLocation","graph","nodes","push","inputs","map","input","selected","edgeIndices","outputs","output","body","undefined","value","editing","$d7336fab2a6e7c56$var$clickedNumber","nodeIndex","NUMBER","NUMERIC","$d7336fab2a6e7c56$export$c1b5afa9b8c6f143","render","$3aa357479a49b085$var$inWorldSpace","x0","y0","x1","y1","pointer","$3aa357479a49b085$export$e6e29dfeb5ef19c1","renderer","i","clickHandlers","onClick","worldSpace","dispatch","$b6ca04fcd3e6f123$var$newBatch","textureIndex","triangles","vertices","colors","vertexIndices","textureCoordinates","cameraIndex","lines","$b6ca04fcd3e6f123$export$2c575fa1d20488bd","ts","from","to","offset","p0x","p0y","p1x","p1y","p3x","p3y","p2x","p2y","lastX","lastY","first","t","tSquared","tCubed","oneMinusT","oneMinusTSquared","oneMinusTCubed","$b6ca04fcd3e6f123$export$1e96939139b396da","layers","connections","idToWorldSpace","start","stop","num","step","Array","$b6ca04fcd3e6f123$var$linspace","batches","batch","batchTextureIndex","toString","forEach","layer","z","geometries","entries","parseInt","geometry","index","cs","scale","color","p","red","green","blue","alpha","samples","$f82cd7e5241fa075$export$eea5d8c438131c40","cameraStack","cameras","stack","transform","$f82cd7e5241fa075$export$3c901611250dc02c","slice","$f82cd7e5241fa075$export$d14f39ee728c5da5","pop","$f82cd7e5241fa075$export$86ad693455315c84","_0","_1","$fd89ce3675dee463$export$83d5419fac007c8c","ui","constraints","measureText","childLayout","$1e3ba84e9ce044db$export$b3219800bda33a1f","child","size","maxWidth","maxHeight","$fd89ce3675dee463$export$efb2657d225c129a","layout1","childOffset","$1e3ba84e9ce044db$export$42a7622cbf932bb","$fd89ce3675dee463$export$edc8554b50279bf4","layout2","geometry1","$1e3ba84e9ce044db$export$df3f009e3d155b20","$9b5b1345df3acfe9$export$6595504a60e1f77c","MainAxisAlignment1","$9b5b1345df3acfe9$export$66a3248d846611ce","CrossAxisAlignment1","$518015a6e3cc694d$export$4e0c71f277ca26b3","args","properties","children","$1e3ba84e9ce044db$export$8984f19c96d30531","COLUMN","mainAxisAlignment","START","crossAxisAlignment","$518015a6e3cc694d$export$f8ce731bdfd45dc7","initial","totalChildHeight","result","acc","max","$518015a6e3cc694d$export$5a1548308f4d4391","freeSpaceY","CENTER","END","SPACE_EVENLY","SPACE_BETWEEN","addYStart","addYCenter","addYEnd","addYSpaceEvenly","addYSpaceBetween","addY","offsetXStart","offsetXCenter","offsetXEnd","offsetX","childGeometry","$518015a6e3cc694d$export$9f45e883ef2b80c0","layout","nextZ","$8a99d960732a172f$var$transformPadding","padding","top","right","bottom","left","$8a99d960732a172f$export$34e0f9847d4c02dd","id","CONTAINER","$8a99d960732a172f$export$a4e80cd8d85917bb","$8a99d960732a172f$export$7c88ce694bad6320","fill","$8a99d960732a172f$export$6f2a7b3ebfc2cfa0","$9e4edab979495f0d$export$120ff0929b202a6d","ROW","$9e4edab979495f0d$export$4076779b9674714b","totalChildWidth","$9e4edab979495f0d$export$90e65e88c1393562","freeSpaceX","addXStart","addXCenter","addXEnd","addXSpaceEvenly","addXSpaceBetween","addX","offsetYStart","offsetYCenter","offsetYEnd","offsetY","$9e4edab979495f0d$export$1152b7e6303a2c68","$864b15efd9f5e1a7$export$33aff30b8aa0934e","SCENE","$864b15efd9f5e1a7$export$9e03d30774b30061","$864b15efd9f5e1a7$export$7a4266c2aa024d65","$864b15efd9f5e1a7$export$7b2ec4d82804e47f","entry","$d380360335f9e6c0$export$b008c3d2ea57ca56","$d380360335f9e6c0$export$218db93a2e8965d","$d380360335f9e6c0$export$13c8b19be38670b3","$2d5075f154be1094$export$6f093cfa640b7166","str","TEXT","font","family","$2d5075f154be1094$export$801f12fcd9ba2788","measurements","width1","widths","$2d5075f154be1094$var$vertices","$2d5075f154be1094$var$colors","$2d5075f154be1094$var$vertexIndices","$2d5075f154be1094$export$f543e72c4af89828","textLayout1","flat","$2d5075f154be1094$export$3d02b268fb89b14d","UIKind1","STACK","$e364cd7af35feef1$export$533b26079ad0b4b","reducer","accumulator","combine","$cce0295d6d688136$export$1be1fc439b849fdf","handlers","needed","$3d1ad3352b3daee3$export$1be1fc439b849fdf","lookup","$0c1fb5dcb73854b4$export$1be1fc439b849fdf","entryGeometry","newGeometry","$d33a6e3c77e8a82f$export$1be1fc439b849fdf","$8fb27619ef3752ba$export$59ff82fc918bd7e3","$8fb27619ef3752ba$export$1be1fc439b849fdf","$cbb8ce85e6a0780d$export$b3890eb0ae9dca99","clear","uiLayout","minWidth","minHeight","uiGeometry","$8fb27619ef3752ba$exports","draw","$2561bfce8bbd3fa5$export$128884f9a44a0f0c","ProgramKind1","$2561bfce8bbd3fa5$export$ce2766bf4a8721d3","constructor","window1","document1","canvas","gl1","program1","textures1","textMeasurementsCache","window","document","gl","program","textures","this","COLOR_BUFFER_BIT","attributes","texture","bindTexture","TEXTURE_2D","bindBuffer","ARRAY_BUFFER","buffer","bufferData","Float32Array","STATIC_DRAW","Uint8Array","ELEMENT_ARRAY_BUFFER","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","count","drawArrays","LINES","getTextureMeasurements","dpr","key","get","createElement","ctx","getContext","rows","current","$2561bfce8bbd3fa5$var$nearestPowerOfTwo","cellSize","style","textAlign","textBaseline","fillStyle","clearRect","String","fromCharCode","metric","ceil","floor","fillText","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","$2561bfce8bbd3fa5$var$createTextMeasurements","newMeasurements","set","devicePixelRatio","indices","f","$2561bfce8bbd3fa5$var$mapString","charCodeAt","uniforms","uniformMatrix3fv","projection","viewport","_size","data","_cameras","location","createBuffer","vertexShader","vertexShaderSource","createShader","VERTEX_SHADER","shaderSource","compileShader","$2561bfce8bbd3fa5$var$createVertexShader","fragmentShader","FRAGMENT_SHADER","$2561bfce8bbd3fa5$var$createFragmentShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","ERROR","vertexInfoLog","getShaderInfoLog","fragmentInfoLog","useProgram","vertexArrayObject","createVertexArray","bindVertexArray","FLOAT","$2561bfce8bbd3fa5$var$bindVertices","$2561bfce8bbd3fa5$var$bindColors","bindAttribLocation","enableVertexAttribArray","vertexAttribPointer","$2561bfce8bbd3fa5$var$bindTextureCoordinates","vertexAttribIPointer","$2561bfce8bbd3fa5$var$bindCameraIndex","getUniformLocation","DATA","$13904534c2e00d0c$export$479aac53993fd71","clientX","clientY","pointerId","$863f011722aa81d7$export$8cc075c801fd6817","$863f011722aa81d7$export$af200dcf8b7cb5de","array","seperator","element","$863f011722aa81d7$export$f0aff9ee68de27f8","theme","inputIndex","CLICKED_INPUT","inputPath","selectedInput","$863f011722aa81d7$export$60c2cea27aefb32b","$863f011722aa81d7$export$3cbc1f9e6e82ea7","outputIndex","CLICKED_OUTPUT","outputPath","$863f011722aa81d7$export$bb70de462253a3c9","$863f011722aa81d7$export$5b0a3b587d4840d2","rowEntries","background","CLICKED_NUMBER","$863f011722aa81d7$export$26fbed5ffd120939","node","CLICKED_NODE","$863f011722aa81d7$export$a0bbe14c4282928","$863f011722aa81d7$export$b5eb6b87d37ec205","VIRTUAL_KEYDOWN","$863f011722aa81d7$export$d93574fa032128c2","$863f011722aa81d7$export$97dbacc68eebd98a","$863f011722aa81d7$export$67e5e8cc6531f853","$b4e14b6b8da86996$var$dispatch","view","update","requestAnimationFrame","setTimeout","renderer_or_error","$2561bfce8bbd3fa5$export$94781114c991ae1c","innerWidth","innerHeight","renderQueued","scheduleRender","event","newState","render1","schedule","dispatchEvents","after","event1","milliseconds","event2","appendChild","addEventListener","edges","zooming","dragging","draggedNode","pointers","pointerDistance","pointerCenter","selectedOutput","connection","Number","Add","Subtract","Multiply","Divide","Equal","Log","stacked","CLICKED_BACKGROUND","option","CLICKED_FINDER_OPTION","$863f011722aa81d7$export$ae58c3420da023e7","POINTER_DOWN","DOUBLE_CLICK","DOUBLE_CLICK_TIMEOUT","$d7336fab2a6e7c56$var$pointerDown","POINTER_UP","findIndex","splice","$d7336fab2a6e7c56$var$pointerUp","POINTER_MOVE","rerender","dx","dy","scaling","p0","p1","x2","y2","distance","previousDistance","previousCenter","move","zoom","moveBack","$d7336fab2a6e7c56$var$pointerMove","$d7336fab2a6e7c56$var$clickedNode","WHEEL","deltaY","$d7336fab2a6e7c56$var$wheel","edgeIndex","$d7336fab2a6e7c56$var$clickedInput","$d7336fab2a6e7c56$var$clickedOutput","$d7336fab2a6e7c56$var$doubleClickTimeout","$d7336fab2a6e7c56$var$doubleClick","KEYDOWN","newValue","parseFloat","$d7336fab2a6e7c56$var$keyDown","$d7336fab2a6e7c56$var$virtualKeyDown","$d7336fab2a6e7c56$var$clickedFinderOption","$d7336fab2a6e7c56$var$clickedBackground","PointerEvent","prototype","getCoalescedEvents","e","preventDefault","passive","requestFullscreen"],"version":3,"file":"index.996c7a69.js.map"}
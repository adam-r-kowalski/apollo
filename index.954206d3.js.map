{"mappings":"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","sources":["src/linear_algebra.ts","src/components.ts","src/renderer/webgl2.ts","src/ecs.ts","src/index.ts"],"sourcesContent":["export class Mat4x4 {\n  data: number[]\n\n  constructor(data: number[]) {\n    this.data = data\n  }\n\n  mul = (other: Mat4x4): Mat4x4 => {\n    const a = this.data\n    const b = other.data\n    return new Mat4x4([\n      b[0] * a[0] + b[1] * a[4] + b[2] * a[8] + b[3] * a[12],\n      b[0] * a[1] + b[1] * a[5] + b[2] * a[9] + b[3] * a[13],\n      b[0] * a[2] + b[1] * a[6] + b[2] * a[10] + b[3] * a[14],\n      b[0] * a[3] + b[1] * a[7] + b[2] * a[11] + b[3] * a[15],\n      b[4] * a[0] + b[5] * a[4] + b[6] * a[8] + b[7] * a[12],\n      b[4] * a[1] + b[5] * a[5] + b[6] * a[9] + b[7] * a[13],\n      b[4] * a[2] + b[5] * a[6] + b[6] * a[10] + b[7] * a[14],\n      b[4] * a[3] + b[5] * a[7] + b[6] * a[11] + b[7] * a[15],\n      b[8] * a[0] + b[9] * a[4] + b[10] * a[8] + b[11] * a[12],\n      b[8] * a[1] + b[9] * a[5] + b[10] * a[9] + b[11] * a[13],\n      b[8] * a[2] + b[9] * a[6] + b[10] * a[10] + b[11] * a[14],\n      b[8] * a[3] + b[9] * a[7] + b[10] * a[11] + b[11] * a[15],\n      b[12] * a[0] + b[13] * a[4] + b[14] * a[8] + b[15] * a[12],\n      b[12] * a[1] + b[13] * a[5] + b[14] * a[9] + b[15] * a[13],\n      b[12] * a[2] + b[13] * a[6] + b[14] * a[10] + b[15] * a[14],\n      b[12] * a[3] + b[13] * a[7] + b[14] * a[11] + b[15] * a[15],\n    ])\n  }\n}\n","import { Mat4x4 } from './linear_algebra'\nimport { Entity } from './ecs'\n\nexport class Projection {\n  matrix: Mat4x4\n\n  constructor(matrix: Mat4x4) {\n    this.matrix = matrix\n  }\n}\n\ninterface Orthographic {\n  x: number\n  y: number\n  width: number\n  height: number\n  near: number\n  far: number\n}\n\nexport const orthographicProjection = ({ x, y, width, height, near, far }: Orthographic): Projection => {\n  const left = x\n  const right = x + width\n  const top = y\n  const bottom = y + height\n  return new Projection(\n    new Mat4x4([\n      2 / (right - left), 0, 0, 0,\n      0, 2 / (top - bottom), 0, 0,\n      0, 0, 2 / (near - far), 0,\n      (left + right) / (left - right),\n      (bottom + top) / (bottom - top),\n      (near + far) / (near - far),\n      1\n    ])\n  )\n}\n\nexport class ActiveCamera {\n  entity: Entity\n\n  constructor(camera: Entity) {\n    this.entity = camera\n  }\n}\n\nexport class Geometry {\n  vertices: number[]\n  indices: number[]\n\n  constructor(vertices: number[], indices: number[]) {\n    this.vertices = vertices\n    this.indices = indices\n  }\n}\n\ninterface Vec3 {\n  x: number\n  y: number\n  z: number\n}\n\nexport class Translate {\n  x: number\n  y: number\n  z: number\n\n  constructor(vec: Vec3) {\n    this.x = vec.x\n    this.y = vec.y\n    this.z = vec.z\n  }\n\n  matrix = (): Mat4x4 =>\n    new Mat4x4([\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      this.x, this.y, this.z, 1,\n    ])\n}\n\nexport class Scale {\n  x: number\n  y: number\n  z: number\n\n  constructor(vec: Vec3) {\n    this.x = vec.x\n    this.y = vec.y\n    this.z = vec.z\n  }\n\n  matrix = (): Mat4x4 =>\n    new Mat4x4([\n      this.x, 0, 0, 0,\n      0, this.y, 0, 0,\n      0, 0, this.z, 0,\n      0, 0, 0, 1,\n    ])\n}\n\nexport class Rotate {\n  x: number\n  y: number\n  z: number\n\n  constructor(vec: Vec3) {\n    this.x = vec.x\n    this.y = vec.y\n    this.z = vec.z\n  }\n\n  xMatrix = (): Mat4x4 => {\n    const radians = this.x\n    const c = Math.cos(radians)\n    const s = Math.sin(radians)\n    return new Mat4x4([\n      1, 0, 0, 0,\n      0, c, s, 0,\n      0, -s, c, 0,\n      0, 0, 0, 1,\n    ])\n  }\n\n  yMatrix = (): Mat4x4 => {\n    const radians = this.y\n    const c = Math.cos(radians)\n    const s = Math.sin(radians)\n    return new Mat4x4([\n      c, 0, -s, 0,\n      0, 1, 0, 0,\n      s, 0, c, 0,\n      0, 0, 0, 1,\n    ])\n  }\n\n  zMatrix = (): Mat4x4 => {\n    const radians = this.z\n    const c = Math.cos(radians)\n    const s = Math.sin(radians)\n    return new Mat4x4([\n      c, s, 0, 0,\n      -s, c, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1,\n    ])\n  }\n\n  matrix = (): Mat4x4 =>\n    this.xMatrix().mul(this.yMatrix()).mul(this.zMatrix())\n}\n\nexport const planeGeometry = (): Geometry =>\n  new Geometry(\n    [\n      -0.5, -0.5, 0,\n      -0.5, 0.5, 0,\n      0.5, 0.5, 0,\n      0.5, -0.5, 0,\n    ],\n    [\n      0, 1, 2,\n      3, 0, 2,\n      2, 1, 0,\n      2, 0, 3,\n    ]\n  )\n\ninterface Hsla {\n  h: number\n  s: number\n  l: number\n  a: number\n}\n\nexport class Fill {\n  h: number\n  s: number\n  l: number\n  a: number\n\n  constructor(hsla: Hsla) {\n    this.h = hsla.h\n    this.s = hsla.s\n    this.l = hsla.l\n    this.a = hsla.a\n  }\n}\n\nexport class Children {\n  entities: Entity[]\n\n  constructor(entities: Entity[]) {\n    this.entities = entities\n  }\n}\n\nexport class Root { }\n","import { Mat4x4 } from '../linear_algebra'\nimport { ECS, Entity } from '../ecs'\nimport { Root, Children, Geometry, Translate, Scale, Rotate, Fill, ActiveCamera, Projection } from '../components'\n\ninterface Attribute {\n  buffer: WebGLBuffer\n  location: number\n}\n\ninterface Viewport {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\ntype OnResize = (viewport: Viewport) => void\n\ninterface RenderData {\n  entity: Entity\n  transform: Mat4x4\n}\n\nexport class Renderer {\n  element: HTMLCanvasElement\n  gl: WebGL2RenderingContext\n  uMatrix: WebGLUniformLocation\n  uColor: WebGLUniformLocation\n  aPosition: Attribute\n  aIndex: Attribute\n  vertexIndexBuffer: WebGLBuffer\n  maxBatchSize: number\n\n  constructor(viewport: Viewport) {\n    const canvas = document.createElement('canvas')\n    canvas.style.width = viewport.width.toString()\n    canvas.style.height = viewport.height.toString()\n    canvas.style.display = 'block'\n    const gl = canvas.getContext('webgl2')!\n    gl.clearColor(0.0, 0.0, 0.0, 1.0)\n    this.element = canvas\n    this.gl = gl\n\n    this.maxBatchSize = Math.floor(gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS) / 5)\n\n    const vertexShaderSource = `#version 300 es\nuniform mat4[${this.maxBatchSize}] u_matrix;\nuniform vec4[${this.maxBatchSize}] u_color;\n\nin vec4 a_position;\nin uint a_index;\n\nout vec4 v_color;\n\nvoid main() {\n  gl_Position = u_matrix[a_index] * a_position;\n  v_color = u_color[a_index];\n}\n`\n\n    const fragmentShaderSource = `#version 300 es\nprecision mediump float;\n\nin vec4 v_color;\nout vec4 fragColor;\n\nvec4 hslToRgb(in vec4 hsl) {\n float h = hsl.x / 360.0;\n vec3 rgb = clamp(abs(mod(h * 6.0 + vec3(0.0,4.0,2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n return vec4(hsl.z + hsl.y * (rgb - 0.5) * (1.0 - abs(2.0 * hsl.z - 1.0)), hsl.w);\n}\n\nvoid main() {\n  fragColor = hslToRgb(v_color);\n}\n`\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER)!\n    gl.shaderSource(vertexShader, vertexShaderSource)\n    gl.compileShader(vertexShader)\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!\n    gl.shaderSource(fragmentShader, fragmentShaderSource)\n    gl.compileShader(fragmentShader)\n\n    const program = gl.createProgram()!\n    gl.attachShader(program, vertexShader)\n    gl.attachShader(program, fragmentShader)\n    gl.linkProgram(program)\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      console.log(gl.getShaderInfoLog(vertexShader))\n      console.log(gl.getShaderInfoLog(fragmentShader))\n    }\n    gl.useProgram(program)\n\n    gl.enable(gl.CULL_FACE)\n    gl.enable(gl.DEPTH_TEST)\n\n    this.aPosition = {\n      buffer: gl.createBuffer()!,\n      location: gl.getAttribLocation(program, 'a_position')\n    }\n    gl.enableVertexAttribArray(this.aPosition.location)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.aPosition.buffer)\n    gl.vertexAttribPointer(this.aPosition.location, /*size*/3, /*type*/gl.FLOAT, /*normalize*/false, /*stride*/0, /*offset*/0)\n\n    this.vertexIndexBuffer = gl.createBuffer()!\n\n    this.aIndex = {\n      buffer: gl.createBuffer()!,\n      location: gl.getAttribLocation(program, 'a_index')\n    }\n    gl.enableVertexAttribArray(this.aIndex.location)\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.aIndex.buffer)\n    gl.vertexAttribIPointer(this.aIndex.location, /*size*/1, /*type*/gl.UNSIGNED_SHORT, /*stride*/0, /*offset*/0)\n\n    this.uMatrix = gl.getUniformLocation(program, 'u_matrix')!\n    this.uColor = gl.getUniformLocation(program, 'u_color')!\n    this.viewport(viewport)\n  }\n\n  viewport = ({ x, y, width, height }: Viewport): void => {\n    this.element.width = width\n    this.element.height = height\n    this.gl.viewport(x, y, width, height)\n  }\n\n  renderEntities = function*(ecs: ECS): Generator<RenderData> {\n    const renderChildren = function*(renderData: RenderData): Generator<RenderData> {\n      const children = renderData.entity.get(Children)\n      if (children) for (const child of children.entities) {\n        const localTransform = child.get(Translate)!.matrix()\n          .mul(child.get(Rotate)!.matrix())\n          .mul(child.get(Scale)!.matrix())\n        const transform = renderData.transform.mul(localTransform)\n        const childRenderData = {\n          entity: child,\n          transform\n        }\n        yield childRenderData\n        yield* renderChildren(childRenderData)\n      }\n    }\n    const camera = ecs.get(ActiveCamera)!.entity\n    const view = camera.get(Projection)!.matrix\n    for (const root of ecs.query(Root)) {\n      const localTransform = root.get(Translate)!.matrix()\n        .mul(root.get(Rotate)!.matrix())\n        .mul(root.get(Scale)!.matrix())\n      const transform = view.mul(localTransform)\n      const renderData = { transform, entity: root }\n      yield renderData\n      yield* renderChildren(renderData)\n    }\n  }\n\n  render = (ecs: ECS): void => {\n    const start = performance.now()\n    const gl = this.gl\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n    const camera = ecs.get(ActiveCamera)!.entity\n    const view = camera.get(Projection)!.matrix\n    let positions: number[] = []\n    let vertexIndices: number[] = []\n    let indices: number[] = []\n    let matrices: number[] = []\n    let fills: number[] = []\n    let index = 0\n    let offset = 0\n    const drawBatch = () => {\n      gl.uniformMatrix4fv(this.uMatrix, /*transpose*/false, matrices)\n      gl.uniform4fv(this.uColor, fills)\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.aPosition.buffer)\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW)\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.vertexIndexBuffer)\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW)\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.aIndex.buffer)\n      gl.bufferData(gl.ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW)\n      gl.drawElements(gl.TRIANGLES, /*count*/vertexIndices.length, /*index type*/gl.UNSIGNED_SHORT, /*offset*/0)\n    }\n    for (const { entity, transform } of this.renderEntities(ecs)) {\n      const geometry = entity.get(Geometry)\n      if (!geometry) continue\n      positions.push(...geometry.vertices)\n      for (const i of geometry.indices) vertexIndices.push(i + offset)\n      const vertexCount = geometry.vertices.length / 3\n      offset += vertexCount\n      matrices.push(...transform.data)\n      const fill = entity.get(Fill)!\n      fills.push(fill.h, fill.s, fill.l, fill.a)\n      for (let i = 0; i < vertexCount; ++i) indices.push(index)\n      if (++index == this.maxBatchSize) {\n        drawBatch()\n        positions = []\n        vertexIndices = []\n        indices = []\n        matrices = []\n        fills = []\n        index = 0\n        offset = 0\n      }\n    }\n    if (index != 0) drawBatch()\n    const stop = performance.now()\n    //console.log(stop - start)\n  }\n}\n","type Component<T> = { new(...args: any[]): T }\n\nclass Storage<T> {\n  lookup: Map<number, number>\n  data: T[]\n  inverses: number[]\n\n  constructor() {\n    this.lookup = new Map()\n    this.data = []\n    this.inverses = []\n  }\n\n  get = (entity: Entity): T | undefined => {\n    const index = this.lookup.get(entity.id)\n    return index != undefined ? this.data[index] : undefined\n  }\n\n  hasId = (id: number): boolean => {\n    return this.lookup.has(id)\n  }\n\n  set = (entity: Entity, component: T): void => {\n    const index = this.lookup.get(entity.id)\n    if (index) {\n      this.data[index] = component\n      this.inverses[index] = entity.id\n      return\n    }\n    this.lookup.set(entity.id, this.data.length)\n    this.data.push(component)\n    this.inverses.push(entity.id)\n  }\n}\n\nexport class Entity {\n  id: number\n  ecs: ECS\n\n  constructor(id: number, ecs: ECS) {\n    this.id = id\n    this.ecs = ecs\n  }\n\n  set = (...components: any): void => {\n    for (const component of components) {\n      const Type = component.constructor\n      let storage = this.ecs.storages.get(Type)\n      if (!storage) {\n        storage = new Storage()\n        this.ecs.storages.set(Type, storage)\n      }\n      storage.set(this, component)\n    }\n  }\n\n  get = <T>(Type: Component<T>): T | undefined => {\n    const storage = this.ecs.storages.get(Type)\n    return storage ? storage.get(this) : undefined\n  }\n}\n\nexport class ECS {\n  nextEntityId: number\n  storages: Map<Component<any>, Storage<any>>\n  resources: Map<Component<any>, any>\n\n  constructor() {\n    this.nextEntityId = 0\n    this.storages = new Map()\n    this.resources = new Map()\n  }\n\n  entity = (...components: any): Entity => {\n    const entity = new Entity(this.nextEntityId, this)\n    entity.set(...components)\n    ++this.nextEntityId\n    return entity\n  }\n\n  query = function*(...components: any): Generator<Entity> {\n    const primary = this.storages.get(components[0])!\n    const secondary = components.slice(1).map(s => this.storages.get(s))\n    for (const id of primary.inverses) {\n      if (secondary.every(storage => storage.hasId(id))) {\n        yield new Entity(id, this)\n      }\n    }\n  }\n\n  set = <T>(...components: any): void => {\n    for (const component of components) {\n      const Type = component.constructor\n      this.resources.set(Type, component)\n    }\n  }\n\n  get = <T>(Type: Component<T>): T | undefined => {\n    return this.resources.get(Type)\n  }\n}\n","import * as Studio from './studio'\n\nconst ecs = new Studio.ECS()\n\nlet viewport = { x: 0, y: 0, width: 500, height: 500 }\n\n\nconst renderer = new Studio.renderer.WebGL2(viewport)\nrenderer.element.style.width = '100%'\nrenderer.element.style.height = '100%'\ndocument.body.appendChild(renderer.element)\n\nconst camera = ecs.entity()\necs.set(new Studio.ActiveCamera(camera))\n\nconst [near, far] = [500, -500]\n\nconst onResize = () => {\n  viewport.width = renderer.element.clientWidth\n  viewport.height = renderer.element.clientHeight\n  camera.set(Studio.orthographicProjection({ ...viewport, near, far }))\n  renderer.viewport(viewport)\n}\nonResize()\nwindow.addEventListener('resize', onResize)\n\nconst addPlane = (x, y, h) =>\n  ecs.entity(\n    Studio.planeGeometry(),\n    new Studio.Translate({ x, y, z: 0 }),\n    new Studio.Rotate({ x: 0, y: 0, z: 0 }),\n    new Studio.Scale({ x: 10, y: 10, z: 1 }),\n    new Studio.Fill({ h, s: 1, l: 0.7, a: 1 }),\n    new Studio.Root(),\n  )\nconst plane = addPlane(viewport.width / 2, viewport.height / 2, 279)\n\nlet mouseHeld = false\n\ndocument.addEventListener('mousedown', e => {\n  mouseHeld = true\n  addPlane(e.x, e.y, Math.floor(Math.random() * 360))\n  renderer.render(ecs)\n})\n\ndocument.addEventListener('mouseup', () => mouseHeld = false)\nlet lastTime = 0\nconst update = (currentTime: number) => {\n  requestAnimationFrame(update)\n  for (const entity of ecs.query(Studio.Rotate)) {\n    entity.get(Studio.Rotate)!.x += (currentTime - lastTime) / 1000\n  }\n  lastTime = currentTime\n  renderer.render(ecs)\n}\n\ndocument.addEventListener('pointermove', e => {\n  plane.set(new Studio.Translate({ x: e.x, y: e.y, z: 0 }))\n  if (mouseHeld) {\n    for (const c of e.getCoalescedEvents()) {\n      addPlane(c.x, c.y, Math.floor(Math.random() * 360))\n    }\n  }\n  renderer.render(ecs)\n})\n\nrequestAnimationFrame(update)\n"],"names":["$a26733d1baff63db$export$62c86df9e6fe4463","constructor","data","this","mul","other","a","b","$b28c6149dbdf1c74$export$dfa3a012bb2ef2e1","matrix","$b28c6149dbdf1c74$export$827b1d417b63203f","camera","entity","$b28c6149dbdf1c74$export$2db6c17465f94a2","vertices","indices","$b28c6149dbdf1c74$export$9db2ba50894db2b9","vec","x","y","z","$b28c6149dbdf1c74$export$d60cfc58d3c358b6","$b28c6149dbdf1c74$export$152db69a76b6b79e","xMatrix","radians","c","Math","cos","s","sin","yMatrix","zMatrix","$b28c6149dbdf1c74$export$ffffe40bfa0649a3","hsla","h","l","$b28c6149dbdf1c74$export$dca3b0875bd9a954","entities","$b28c6149dbdf1c74$export$be92b6f5f03c0fe9","$30cee85f95a8e397$export$88530751e3977073","viewport","canvas","document","createElement","style","width","toString","height","display","gl","getContext","clearColor","element","maxBatchSize","floor","getParameter","MAX_VERTEX_UNIFORM_VECTORS","vertexShaderSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","log","getShaderInfoLog","useProgram","enable","CULL_FACE","DEPTH_TEST","aPosition","buffer","createBuffer","location","getAttribLocation","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","vertexIndexBuffer","aIndex","vertexAttribIPointer","UNSIGNED_SHORT","uMatrix","getUniformLocation","uColor","renderEntities","ecs","renderChildren","renderData","children","get","child","localTransform","childRenderData","transform","view","root","query","render","performance","now","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","positions","vertexIndices","matrices","fills","index","offset","drawBatch","uniformMatrix4fv","uniform4fv","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","drawElements","TRIANGLES","length","geometry","push","i","vertexCount","fill","i1","$556f46b6ec271235$var$Storage","lookup","Map","inverses","id","undefined","hasId","has","set","component","$556f46b6ec271235$export$bc644a473284d944","components","Type","storage","storages","$b4e14b6b8da86996$var$ecs","nextEntityId","resources","primary","secondary","slice","map","every","$b4e14b6b8da86996$var$viewport","$b4e14b6b8da86996$var$renderer","$5e8f6b609e017d05$exports","WebGL2","body","appendChild","$b4e14b6b8da86996$var$camera","$b4e14b6b8da86996$var$near","$b4e14b6b8da86996$var$far","$b4e14b6b8da86996$var$onResize","clientWidth","clientHeight","near","far","right","bottom","$b28c6149dbdf1c74$export$f8871aa8298a9119","window","addEventListener","$b4e14b6b8da86996$var$addPlane","$b4e14b6b8da86996$var$plane","$b4e14b6b8da86996$var$mouseHeld","e","random","$b4e14b6b8da86996$var$lastTime","$b4e14b6b8da86996$var$update","currentTime","requestAnimationFrame","getCoalescedEvents"],"version":3,"file":"index.954206d3.js.map"}
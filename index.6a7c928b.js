function e(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function n(e,t){return Object.keys(t).forEach((function(n){"default"===n||"__esModule"===n||e.hasOwnProperty(n)||Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[n]}})})),e}var r={},s={},o=t.parcelRequire045c;null==o&&((o=function(e){if(e in r)return r[e].exports;if(e in s){var t=s[e];delete s[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){s[e]=t},t.parcelRequire045c=o),o.register("27Lyk",(function(t,n){var r,s;e(t.exports,"register",(()=>r),(e=>r=e)),e(t.exports,"resolve",(()=>s),(e=>s=e));var o={};r=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)o[t[n]]=e[t[n]]},s=function(e){var t=o[e];if(null==t)throw new Error("Could not resolve bundle with id "+e);return t}})),o.register("kjyEk",(function(e,t){})),o.register("cmoHh",(function(e,t){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new r(e),o=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.alea=o}(0,e,"function"==typeof define&&define)})),o.register("euRi5",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor128=o}(0,e,"function"==typeof define&&define)})),o.register("hDsEw",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorwow=o}(0,e,"function"==typeof define&&define)})),o.register("3J2Zm",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.x&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xorshift7=o}(0,e,"function"==typeof define&&define)})),o.register("6Px8M",(function(e,t){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,o=t.i;return t.w=r=r+1640531527|0,n=s[o+34&127],e=s[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[o]=n^e,t.i=o,n+(r^r>>>16)|0},function(e,t){var n,r,s,o,a,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,o=-32;o<u;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(a=a+1640531527|0,s=0==(n=i[127&o]^=r+a)?s+1:0);for(s>=128&&(i[127&(t&&t.length||0)]=-1),s=127,o=512;o>0;--o)r=i[s+34&127],n=i[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[s]=r^n;e.w=a,e.X=i,e.i=s}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&(o.X&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.xor4096=o}(0,e,"function"==typeof define&&define)})),o.register("lDm0S",(function(e,t){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new r(e),o=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/2097152}while(0===e);return e},a.int32=n.next,a.quick=a,o&&("object"==typeof o&&s(o,n),a.state=function(){return s(n,{})}),a}t&&t.exports?t.exports=o:n&&n.amd?n((function(){return o})):this.tychei=o}(0,e,"function"==typeof define&&define)})),o("27Lyk").register(JSON.parse('{"1LzKV":"index.6a7c928b.js","g0Phv":"service_worker.js"}'));class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class i{refCount(e){return u("refCount")}incRef(e){return u("incRef")}timerAvailable(){return!0}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}readToGPU(e,t){return u("readToGPU")}numDataIds(){return u("numDataIds")}disposeData(e,t){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,r,s){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}var c={};function l(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,f(e,t,n)}function d(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,f(e,n,r),f(t,n,r)}function h(e,t,n){return Math.max(e,Math.min(t,n))}function p(e){return e%2==0?e:e+1}function f(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function m(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function g(e,t){const n=Math.random();return t*n+(1-n)*e}function y(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function k(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function b(e,t,n=""){k(S(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function w(e){k(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function E(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||P(e)&&!n)for(let r=0;r<e.length;++r)E(e[r],t,n);else t.push(e);return t}function I(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function x(e){return 0===e.length}function S(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function v(e){return e%1==0}function T(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function N(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function A(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return l(t),t}function R(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function M(e,t=(e=>0),n){return new Promise(((r,s)=>{let o=0;const a=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?s():setTimeout(a,i)};a()}))}function _(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function F(e,t){const n=t.length;return k((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),k(e.every((e=>v(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function O(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||s?null:F(t,e).sort();let a=0;for(let t=0;t<e.length;++t){if(null!=o){if(o[a]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==o[a]||o[a]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),o[a]<=t&&a++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function D(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function B(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function U(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function $(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function P(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function L(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function z(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function W(e){return"string"==typeof e||e instanceof String}function H(e){return"boolean"==typeof e}function q(e){return"number"==typeof e}function K(e){return Array.isArray(e)?K(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":q(e)?"float32":W(e)?"string":H(e)?"bool":"float32"}function G(e){return!!(e&&e.constructor&&e.call&&e.apply)}function j(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Y(e,t,n,r=!1){const s=new Array;if(1===t.length){const o=t[0]*(r?2:1);for(let t=0;t<o;t++)s[t]=n[e+t]}else{const o=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<o;t++)s[t]=Y(e+t*i,a,n,r)}return s}function Z(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Y(0,e,t,n)}function X(e,t){const n=J(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function J(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Z(e,new Float32Array(n));if("int32"===t)return Z(e,new Int32Array(n));if("bool"===t)return Z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ee(e){e.forEach((t=>{k(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function te(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ne(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function re(e){return e&&e.then&&"function"==typeof e.then}e(c,"shuffle",(()=>l)),e(c,"swap",(()=>f)),e(c,"shuffleCombo",(()=>d)),e(c,"clamp",(()=>h)),e(c,"nearestLargerEven",(()=>p)),e(c,"sum",(()=>m)),e(c,"randUniform",(()=>g)),e(c,"distSquared",(()=>y)),e(c,"assert",(()=>k)),e(c,"assertShapesMatch",(()=>b)),e(c,"arraysEqual",(()=>S)),e(c,"assertNonNull",(()=>w)),e(c,"flatten",(()=>E)),e(c,"isTypedArray",(()=>P)),e(c,"sizeFromShape",(()=>I)),e(c,"isScalarShape",(()=>x)),e(c,"isInt",(()=>v)),e(c,"tanh",(()=>T)),e(c,"sizeToSquarishShape",(()=>N)),e(c,"createShuffledIndices",(()=>A)),e(c,"rightPad",(()=>R)),e(c,"repeatedTry",(()=>M)),e(c,"inferFromImplicitShape",(()=>_)),e(c,"parseAxisParam",(()=>F)),e(c,"squeezeShape",(()=>O)),e(c,"getTypedArrayFromDType",(()=>D)),e(c,"getArrayFromDType",(()=>C)),e(c,"checkConversionForErrors",(()=>B)),e(c,"isValidDtype",(()=>U)),e(c,"hasEncodingLoss",(()=>$)),e(c,"bytesPerElement",(()=>L)),e(c,"bytesFromStringArray",(()=>z)),e(c,"isString",(()=>W)),e(c,"isBoolean",(()=>H)),e(c,"isNumber",(()=>q)),e(c,"inferDtype",(()=>K)),e(c,"isFunction",(()=>G)),e(c,"nearestDivisor",(()=>j)),e(c,"computeStrides",(()=>V)),e(c,"toNestedArray",(()=>Z)),e(c,"makeOnesTypedArray",(()=>X)),e(c,"makeZerosTypedArray",(()=>J)),e(c,"makeZerosNestedTypedArray",(()=>Q)),e(c,"assertNonNegativeIntegerDimensions",(()=>ee)),e(c,"locToIndex",(()=>te)),e(c,"indexToLoc",(()=>ne)),e(c,"isPromise",(()=>re));class se{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=oe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ae().getBool("IS_TEST")||ae().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ae().getBool("IS_TEST")||ae().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(re(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function oe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function ae(){return ie}let ie=null;var ue,ce,le={},de=le={};function he(){throw new Error("setTimeout has not been defined")}function pe(){throw new Error("clearTimeout has not been defined")}function fe(e){if(ue===setTimeout)return setTimeout(e,0);if((ue===he||!ue)&&setTimeout)return ue=setTimeout,setTimeout(e,0);try{return ue(e,0)}catch(t){try{return ue.call(null,e,0)}catch(t){return ue.call(this,e,0)}}}!function(){try{ue="function"==typeof setTimeout?setTimeout:he}catch(e){ue=he}try{ce="function"==typeof clearTimeout?clearTimeout:pe}catch(e){ce=pe}}();var me,ge=[],ye=!1,ke=-1;function be(){ye&&me&&(ye=!1,me.length?ge=me.concat(ge):ke=-1,ge.length&&we())}function we(){if(!ye){var e=fe(be);ye=!0;for(var t=ge.length;t;){for(me=ge,ge=[];++ke<t;)me&&me[ke].run();ke=-1,t=ge.length}me=null,ye=!1,function(e){if(ce===clearTimeout)return clearTimeout(e);if((ce===pe||!ce)&&clearTimeout)return ce=clearTimeout,clearTimeout(e);try{ce(e)}catch(t){try{return ce.call(null,e)}catch(t){return ce.call(this,e)}}}(e)}}function Ee(e,t){this.fun=e,this.array=t}function Ie(){}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let xe;function Se(){if(null==xe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==le)e=le;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}xe=e}return xe}function ve(e,t){const n=function(){const e=Se();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}de.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];ge.push(new Ee(e,t)),1!==ge.length||ye||fe(we)},Ee.prototype.run=function(){this.fun.apply(null,this.array)},de.title="browser",de.browser=!0,de.env={},de.argv=[],de.version="",de.versions={},de.on=Ie,de.addListener=Ie,de.once=Ie,de.off=Ie,de.removeListener=Ie,de.removeAllListeners=Ie,de.emit=Ie,de.prependListener=Ie,de.prependOnceListener=Ie,de.listeners=function(e){return[]},de.binding=function(e){throw new Error("process.binding is not supported")},de.cwd=function(){return"/"},de.chdir=function(e){throw new Error("process.chdir is not supported")},de.umask=function(){return 0};var Te={};function Ne(...e){ae().getBool("IS_TEST")||ae().getBool("PROD")||console.warn(...e)}function Ae(...e){ae().getBool("IS_TEST")||ae().getBool("PROD")||console.log(...e)}e(Te,"warn",(()=>Ne)),e(Te,"log",(()=>Ae));const Re=ve("kernelRegistry",(()=>new Map)),Me=ve("gradRegistry",(()=>new Map));function _e(e,t){const n=Ce(e,t);return Re.get(n)}function Fe(e){return Me.get(e)}function Oe(e){const t=Re.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===e&&n.push(a)}return n}function De(e){const{kernelName:t,backendName:n}=e,r=Ce(t,n);Re.has(r)&&Ne(`The kernel '${t}' for backend '${n}' is already registered`),Re.set(r,e)}function Ce(e,t){return`${t}_${e}`}var Be={};e(Be,"createScalarValue",(()=>It)),e(Be,"encodeString",(()=>Tt)),e(Be,"toTypedArray",(()=>xt)),e(Be,"now",(()=>St)),e(Be,"fetch",(()=>vt)),e(Be,"decodeString",(()=>Nt));var Ue={};e(Ue,"hexToLong",(()=>lt)),e(Ue,"fingerPrint64",(()=>Et));var $e;$e=Le;var Pe=null;try{Pe=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Le(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function ze(e){return!0===(e&&e.__isLong__)}Le.prototype.__isLong__,Object.defineProperty(Le.prototype,"__isLong__",{value:!0}),Le.isLong=ze;var We={},He={};function qe(e,t){var n,r,s;return t?(s=0<=(e>>>=0)&&e<256)&&(r=He[e])?r:(n=Ge(e,(0|e)<0?-1:0,!0),s&&(He[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(r=We[e])?r:(n=Ge(e,e<0?-1:0,!1),s&&(We[e]=n),n)}function Ke(e,t){if(isNaN(e))return t?tt:et;if(t){if(e<0)return tt;if(e>=Xe)return at}else{if(e<=-Je)return it;if(e+1>=Je)return ot}return e<0?Ke(-e,t).neg():Ge(e%Ze|0,e/Ze|0,t)}function Ge(e,t,n){return new Le(e,t,n)}Le.fromInt=qe,Le.fromNumber=Ke,Le.fromBits=Ge;var je=Math.pow;function Ve(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return et;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return Ve(e.substring(1),t,n).neg();for(var s=Ke(je(n,8)),o=et,a=0;a<e.length;a+=8){var i=Math.min(8,e.length-a),u=parseInt(e.substring(a,a+i),n);if(i<8){var c=Ke(je(n,i));o=o.mul(c).add(Ke(u))}else o=(o=o.mul(s)).add(Ke(u))}return o.unsigned=t,o}function Ye(e,t){return"number"==typeof e?Ke(e,t):"string"==typeof e?Ve(e,t):Ge(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}Le.fromString=Ve,Le.fromValue=Ye;var Ze=4294967296,Xe=Ze*Ze,Je=Xe/2,Qe=qe(16777216),et=qe(0);Le.ZERO=et;var tt=qe(0,!0);Le.UZERO=tt;var nt=qe(1);Le.ONE=nt;var rt=qe(1,!0);Le.UONE=rt;var st=qe(-1);Le.NEG_ONE=st;var ot=Ge(-1,2147483647,!1);Le.MAX_VALUE=ot;var at=Ge(-1,-1,!0);Le.MAX_UNSIGNED_VALUE=at;var it=Ge(0,-2147483648,!1);Le.MIN_VALUE=it;var ut=Le.prototype;ut.toInt=function(){return this.unsigned?this.low>>>0:this.low},ut.toNumber=function(){return this.unsigned?(this.high>>>0)*Ze+(this.low>>>0):this.high*Ze+(this.low>>>0)},ut.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(it)){var t=Ke(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=Ke(je(e,6),this.unsigned),o=this,a="";;){var i=o.div(s),u=(o.sub(i.mul(s)).toInt()>>>0).toString(e);if((o=i).isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}},ut.getHighBits=function(){return this.high},ut.getHighBitsUnsigned=function(){return this.high>>>0},ut.getLowBits=function(){return this.low},ut.getLowBitsUnsigned=function(){return this.low>>>0},ut.getNumBitsAbs=function(){if(this.isNegative())return this.eq(it)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},ut.isZero=function(){return 0===this.high&&0===this.low},ut.eqz=ut.isZero,ut.isNegative=function(){return!this.unsigned&&this.high<0},ut.isPositive=function(){return this.unsigned||this.high>=0},ut.isOdd=function(){return 1==(1&this.low)},ut.isEven=function(){return 0==(1&this.low)},ut.equals=function(e){return ze(e)||(e=Ye(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},ut.eq=ut.equals,ut.notEquals=function(e){return!this.eq(e)},ut.neq=ut.notEquals,ut.ne=ut.notEquals,ut.lessThan=function(e){return this.comp(e)<0},ut.lt=ut.lessThan,ut.lessThanOrEqual=function(e){return this.comp(e)<=0},ut.lte=ut.lessThanOrEqual,ut.le=ut.lessThanOrEqual,ut.greaterThan=function(e){return this.comp(e)>0},ut.gt=ut.greaterThan,ut.greaterThanOrEqual=function(e){return this.comp(e)>=0},ut.gte=ut.greaterThanOrEqual,ut.ge=ut.greaterThanOrEqual,ut.compare=function(e){if(ze(e)||(e=Ye(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},ut.comp=ut.compare,ut.negate=function(){return!this.unsigned&&this.eq(it)?it:this.not().add(nt)},ut.neg=ut.negate,ut.add=function(e){ze(e)||(e=Ye(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,u=0,c=0,l=0,d=0;return l+=(d+=s+(65535&e.low))>>>16,c+=(l+=r+i)>>>16,u+=(c+=n+a)>>>16,u+=t+o,Ge((l&=65535)<<16|(d&=65535),(u&=65535)<<16|(c&=65535),this.unsigned)},ut.subtract=function(e){return ze(e)||(e=Ye(e)),this.add(e.neg())},ut.sub=ut.subtract,ut.multiply=function(e){if(this.isZero())return et;if(ze(e)||(e=Ye(e)),Pe)return Ge(Pe.mul(this.low,this.high,e.low,e.high),Pe.get_high(),this.unsigned);if(e.isZero())return et;if(this.eq(it))return e.isOdd()?it:et;if(e.eq(it))return this.isOdd()?it:et;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Qe)&&e.lt(Qe))return Ke(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,a=65535&e.high,i=e.low>>>16,u=65535&e.low,c=0,l=0,d=0,h=0;return d+=(h+=s*u)>>>16,l+=(d+=r*u)>>>16,d&=65535,l+=(d+=s*i)>>>16,c+=(l+=n*u)>>>16,l&=65535,c+=(l+=r*i)>>>16,l&=65535,c+=(l+=s*a)>>>16,c+=t*u+n*i+r*a+s*o,Ge((d&=65535)<<16|(h&=65535),(c&=65535)<<16|(l&=65535),this.unsigned)},ut.mul=ut.multiply,ut.divide=function(e){if(ze(e)||(e=Ye(e)),e.isZero())throw Error("division by zero");var t,n,r;if(Pe)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?Ge((this.unsigned?Pe.div_u:Pe.div_s)(this.low,this.high,e.low,e.high),Pe.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?tt:et;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return tt;if(e.gt(this.shru(1)))return rt;r=tt}else{if(this.eq(it))return e.eq(nt)||e.eq(st)?it:e.eq(it)?nt:(t=this.shr(1).div(e).shl(1)).eq(et)?e.isNegative()?nt:st:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(it))return this.unsigned?tt:et;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=et}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),o=s<=48?1:je(2,s-48),a=Ke(t),i=a.mul(e);i.isNegative()||i.gt(n);)i=(a=Ke(t-=o,this.unsigned)).mul(e);a.isZero()&&(a=nt),r=r.add(a),n=n.sub(i)}return r},ut.div=ut.divide,ut.modulo=function(e){return ze(e)||(e=Ye(e)),Pe?Ge((this.unsigned?Pe.rem_u:Pe.rem_s)(this.low,this.high,e.low,e.high),Pe.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},ut.mod=ut.modulo,ut.rem=ut.modulo,ut.not=function(){return Ge(~this.low,~this.high,this.unsigned)},ut.and=function(e){return ze(e)||(e=Ye(e)),Ge(this.low&e.low,this.high&e.high,this.unsigned)},ut.or=function(e){return ze(e)||(e=Ye(e)),Ge(this.low|e.low,this.high|e.high,this.unsigned)},ut.xor=function(e){return ze(e)||(e=Ye(e)),Ge(this.low^e.low,this.high^e.high,this.unsigned)},ut.shiftLeft=function(e){return ze(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Ge(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ge(0,this.low<<e-32,this.unsigned)},ut.shl=ut.shiftLeft,ut.shiftRight=function(e){return ze(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ge(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},ut.shr=ut.shiftRight,ut.shiftRightUnsigned=function(e){if(ze(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?Ge(this.low>>>e|t<<32-e,t>>>e,this.unsigned):Ge(32===e?t:t>>>e-32,0,this.unsigned)},ut.shru=ut.shiftRightUnsigned,ut.shr_u=ut.shiftRightUnsigned,ut.toSigned=function(){return this.unsigned?Ge(this.low,this.high,!1):this},ut.toUnsigned=function(){return this.unsigned?this:Ge(this.low,this.high,!0)},ut.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},ut.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},ut.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},Le.fromBytes=function(e,t,n){return n?Le.fromBytesLE(e,t):Le.fromBytesBE(e,t)},Le.fromBytesLE=function(e,t){return new Le(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Le.fromBytesBE=function(e,t){return new Le(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const ct=$e.default||$e;function lt(e){return ct.fromString(e,!0,16)}const dt=lt("c3a5c85c97cb3127"),ht=lt("b492b66fbe98f273"),pt=lt("9ae16a3b2f90404f");function ft(e){return e.xor(e.shru(47))}function mt(e,t,n){const r=e.slice(t,t+n);return ct.fromBytes(Array.from(r),!0,!0)}function gt(e,t){return mt(e,t,8)}function yt(e,t){return mt(e,t,4)}function kt(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function bt(e,t,n=lt("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function wt(e,t,n,r){return function(e,t,n,r,s,o){s=s.add(e),o=kt(o.add(s).add(r),21);const a=s;return s=(s=s.add(t)).add(n),o=o.add(kt(s,44)),[s.add(r),o.add(a)]}(gt(e,t),gt(e,t+8),gt(e,t+16),gt(e,t+24),n,r)}function Et(e,t=e.length){const n=ct.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=pt.add(2*t),r=gt(e,0).add(pt),s=gt(e,t-8);return bt(kt(s,37).mul(n).add(r),kt(r,25).add(s).mul(n),n)}if(t>=4){const n=pt.add(2*t);return bt(yt(e,0).shl(3).add(t),yt(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ft(pt.mul(n).xor(dt.mul(r))).mul(pt)}return pt}(e,t):function(e,t=e.length){const n=pt.add(2*t),r=gt(e,0).mul(ht),s=gt(e,8),o=gt(e,t-8).mul(n),a=gt(e,t-16).mul(pt);return bt(kt(r.add(s),43).add(kt(o,30)).add(a),r.add(kt(s.add(pt),18)).add(o),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=pt.add(2*t),r=gt(e,0).mul(pt),s=gt(e,8),o=gt(e,t-8).mul(n),a=gt(e,t-16).mul(pt),i=kt(r.add(s),43).add(kt(o,30)).add(a),u=bt(i,r.add(kt(s.add(pt),18)).add(o),n),c=gt(e,16).mul(n),l=gt(e,24),d=i.add(gt(e,t-32)).mul(n),h=u.add(gt(e,t-24)).mul(n);return bt(kt(c.add(l),43).add(kt(d,30)).add(h),c.add(kt(l.add(r),18)).add(d),n)}(e,t);let r=n,s=n.mul(ht).add(113),o=ft(s.mul(pt).add(113)).mul(pt),a=[ct.UZERO,ct.UZERO],i=[ct.UZERO,ct.UZERO];r=r.mul(pt).add(gt(e,0));let u=0;const c=64*(t-1>>6),l=c+(t-1&63)-63;do{r=kt(r.add(s).add(a[0]).add(gt(e,u+8)),37).mul(ht),s=kt(s.add(a[1]).add(gt(e,u+48)),42).mul(ht),r=r.xor(i[1]),s=s.add(a[0]).add(gt(e,u+40)),o=kt(o.add(i[0]),33).mul(ht),a=wt(e,u,a[1].mul(ht),r.add(i[0])),i=wt(e,u+32,o.add(i[1]),s.add(gt(e,u+16))),[o,r]=[r,o],u+=64}while(u!==c);const d=ht.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(t-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=kt(r.add(s).add(a[0]).add(gt(e,u+8)),37).mul(d),s=kt(s.add(a[1]).add(gt(e,u+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(gt(e,u+40))),o=kt(o.add(i[0]),33).mul(d),a=wt(e,u,a[1].mul(d),r.add(i[0])),i=wt(e,u+32,o.add(i[1]),s.add(gt(e,u+16))),[o,r]=[r,o],bt(bt(a[0],i[0],d).add(ft(s).mul(dt)).add(o),bt(a[1],i[1],d).add(r),d)}function It(e,t){return"string"===t?Tt(e):xt([e],t)}function xt(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=E(e)),ae().getBool("DEBUG")&&B(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function St(){return ae().platform.now()}function vt(e,t){return ae().platform.fetch(e,t)}function Tt(e,t="utf-8"){return t=t||"utf-8",ae().platform.encode(e,t)}function Nt(e,t="utf-8"){return t=t||"utf-8",ae().platform.decode(e,t)}n(Be,c),n(Be,Ue);class At{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Mt)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const a=St();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:St()-a})}if(ae().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Rt(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:o}=e;n.forEach((e=>{Promise.all([e.data(),r,o]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Rt(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Mt{logKernelProfile(e,t,n,r,s,o){const a="number"==typeof r?R(`${r}ms`,9):r.error,i=R(e,25),u=t.rank,c=t.size,l=R(t.shape.toString(),14);let d="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;d+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${i}\t%c${a}\t%c${u}D ${l}\t%c${c}\t%c${d}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function _t(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const o=e[n],a=o.inputs;for(const e in a){const n=a[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){o.outputs.forEach((e=>r[e.id]=!0)),i=!0,s[o.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const a={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(o[n.outputs[e].id]){for(const e in r)o[r[e].id]=!0,a[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&a[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}function Ft(e,t,n,r){for(let s=t.length-1;s>=0;s--){const o=t[s],a=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const s=n((()=>i[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=o.inputs[t];if(!S(s.shape,a.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}function Ot(e,t,n,r){const s=V(t),o=function(e,t,n,r){const s=I(t),o=r[r.length-1],a=new Array(o).fill(0),i=t.length,u="complex64"===n?Ut(e):e;if(i>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)a[e]=Math.max(a[e],Dt(u[t+e],0,n).length)}return a}(e,t,n,s),a=t.length,i=Bt(e,t,n,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${a}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function Dt(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:W(e)?`'${e}'`:"bool"===n?Ct(e):parseFloat(e.toFixed(7)).toString(),R(r,t)}function Ct(e){return 0===e?"false":"true"}function Bt(e,t,n,r,s,o=!0){const a="complex64"===n?2:1,i=t[0],u=t.length;if(0===u){if("complex64"===n){return[Dt(Ut(e)[0],0,n)]}return"bool"===n?[Ct(e[0])]:[e[0].toString()]}if(1===u){if(i>20){const t=3*a;let r=Array.from(e.slice(0,t)),o=Array.from(e.slice((i-3)*a,i*a));return"complex64"===n&&(r=Ut(r),o=Ut(o)),["["+r.map(((e,t)=>Dt(e,s[t],n))).join(", ")+", ..., "+o.map(((e,t)=>Dt(e,s[i-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ut(e):Array.from(e)).map(((e,t)=>Dt(e,s[t],n))).join(", ")+"]"]}const c=t.slice(1),l=r.slice(1),d=r[0]*a,h=[];if(i>20){for(let t=0;t<3;t++){const r=t*d,o=r+d;h.push(...Bt(e.slice(r,o),c,n,l,s,!1))}h.push("...");for(let t=i-3;t<i;t++){const r=t*d,o=r+d;h.push(...Bt(e.slice(r,o),c,n,l,s,t===i-1))}}else for(let t=0;t<i;t++){const r=t*d,o=r+d;h.push(...Bt(e.slice(r,o),c,n,l,s,t===i-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function Ut(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class $t{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=I(e),null!=n){const e=n.length;k(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||C(t,this.size),this.strides=V(e)}set(e,...t){0===t.length&&(t=[0]),k(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Pt().makeTensor(this.values,this.shape,this.dtype)}}let Pt=null,Lt=null,zt=null;class Wt{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=I(e),this.strides=V(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Lt.buffer(this.shape,this.dtype,e)}bufferSync(){return Lt.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Z(this.shape,e,"complex64"===this.dtype)}arraySync(){return Z(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Pt().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Nt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Pt().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Pt().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Nt(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Pt().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Pt().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Lt.print(this,e)}clone(){return this.throwIfDisposed(),Lt.clone(this)}toString(e=!1){return Ot(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Lt.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Pt().makeVariable(this,e,t,n)}}Object.defineProperty(Wt,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ve("Tensor",(()=>Wt));class Ht extends Wt{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!S(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Pt().disposeTensor(this),this.dataId=e.dataId,Pt().incRef(this,null)}dispose(){Pt().disposeVariable(this),this.isDisposedInternal=!0}}var qt,Kt,Gt,jt,Vt,Yt,Zt,Xt,Jt,Qt;Object.defineProperty(Ht,Symbol.hasInstance,{value:e=>e instanceof Wt&&null!=e.assign&&e.assign instanceof Function}),(Kt=qt||(qt={})).R0="R0",Kt.R1="R1",Kt.R2="R2",Kt.R3="R3",Kt.R4="R4",Kt.R5="R5",Kt.R6="R6",(jt=Gt||(Gt={})).float32="float32",jt.int32="int32",jt.bool="int32",jt.complex64="complex64",(Yt=Vt||(Vt={})).float32="float32",Yt.int32="int32",Yt.bool="bool",Yt.complex64="complex64",(Xt=Zt||(Zt={})).float32="float32",Xt.int32="float32",Xt.bool="float32",Xt.complex64="complex64",(Qt=Jt||(Jt={})).float32="complex64",Qt.int32="complex64",Qt.bool="complex64",Qt.complex64="complex64";const en={float32:Zt,int32:Gt,bool:Vt,complex64:Jt};function tn(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return en[e][t]}function nn(e,t){if(e.dtype===t.dtype)return[e,t];const n=tn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function rn(e){const t=[];return sn(e,t,new Set),t}function sn(e,t,n){if(null==e)return;if(e instanceof Wt)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),sn(r,t,n))}}function on(e){return null!=e.kernelName}class an{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class un{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new an}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ne(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new At(this.backendInstance),!0}setupRegisteredKernels(){Oe(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Oe(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof i||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ne(`Initialization of backend ${e} failed`),Ne(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Ne(`Initialization of backend ${e} failed`),Ne(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return un.nextTensorId++}nextVariableId(){return un.nextVariableId++}clone(e){const t=ln.runKernel("Identity",{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ln.runKernel("Cast",t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=_e(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,o=this.state.numTensors;let a,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=on(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(on(e)){const{kernelName:t,inputs:s,attrs:o}=e;null==this.backendName&&this.backend;const u=_e(t,this.backendName);k(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:s,attrs:o,backend:this.backend});const a=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const c=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,c);n=this.saveTensorsForBackwardMode(e)}return c}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:l}=e,d=on(e)?null:e.backwardsFunc;let h;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,c,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=a()})),r&&this.addTapeNode(u,c,t,d,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Fe(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let o;r.saveAllInputs?(k(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(t).map((e=>t[e]))):o=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return o.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&W(e[0])&&(s=e.map((e=>Tt(e))));const o=r.write(s,t,n),a=new Wt(t,n,o,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(o),t=z(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,o=new Wt(r,s,n,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Ht(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*L(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ht||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*L(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},i=Fe(e);null!=i&&(r=i.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=J(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=rn(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(k(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));k(s instanceof Wt,(()=>"The result y returned by f() must be a tensor."));const o=_t(this.state.activeTape,t,s);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=X(I(e),"float32");return ln.makeTensor(t,e,"float32")}(s.shape):n,Ft(e,o,(e=>this.tidy(e)),dn);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return k(G(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;k(t.every((e=>e instanceof Wt)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),k(n.value instanceof Wt,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),k(G(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),o=Array.isArray(s)?s:[s];k(o.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),k(o.every((e=>e instanceof Wt)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return o.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=St(),n=await this.backend.time(e);return n.wallMs=St()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new an;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function cn(){const e=Se();if(null==e._tfengine){const t=new se(e);e._tfengine=new un(t)}var t;return t=e._tfengine.ENV,ie=t,Pt=()=>e._tfengine,e._tfengine}un.nextTensorId=0,un.nextVariableId=0;const ln=cn();function dn(e,t){const n={a:e,b:t};return ln.runKernel("Add",n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hn=ae();function pn(e,t){let n=e;if(P(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||P(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&ae().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&fn(e,r,[]),r}function fn(e,t,n){if(n=n||[],!Array.isArray(e)&&!P(e))return void k(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));k(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),k(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)fn(e[t],r,n.concat(t))}function mn(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function gn(e,t,n,r="numeric"){if(e instanceof Wt)return mn(r,e.dtype,t,n),e;let s=K(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),mn(r,s,t,n),null==e||!P(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const o=pn(e,s);P(e)||Array.isArray(e)||(e=[e]);const a="string"!==s?xt(e,s):E(e,[],!0);return ln.makeTensor(a,o,s)}function yn(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>gn(e,`${t}[${s}]`,n,r)))}hn.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),hn.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),hn.registerFlag("IS_NODE",(()=>void 0!==le&&void 0!==le.versions&&void 0!==le.versions.node)),hn.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),hn.registerFlag("PROD",(()=>!1)),hn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>hn.getBool("DEBUG"))),hn.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),hn.registerFlag("IS_TEST",(()=>!1)),hn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),hn.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),hn.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));function kn(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ln.startScope(n);try{const t=r(...e);return re(t)&&console.error("Cannot return a Promise inside of tidy."),ln.endScope(t),t}catch(e){throw ln.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const bn=kn({complex_:function(e,t){const n=gn(e,"real","complex"),r=gn(t,"imag","complex");b(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ln.runKernel("Complex",s)}});function wn(e,t,n,r){if(null==r&&(r=K(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!P(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ee(t);const e=I(t),r=I(n);k(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==I(t.slice(e));k(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return P(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?xt(e,r):E(e,[],!0),ln.makeTensor(e,t,r)}function En(e,t,n){return wn(e,t,pn(e,n),n)}var In,xn,Sn;xn=function(e){var t,n,r=On(e),s=r[0],o=r[1],a=new Rn(function(e,t,n){return 3*(t+n)/4-n}(0,s,o)),i=0,u=o>0?s-4:s;for(n=0;n<u;n+=4)t=An[e.charCodeAt(n)]<<18|An[e.charCodeAt(n+1)]<<12|An[e.charCodeAt(n+2)]<<6|An[e.charCodeAt(n+3)],a[i++]=t>>16&255,a[i++]=t>>8&255,a[i++]=255&t;2===o&&(t=An[e.charCodeAt(n)]<<2|An[e.charCodeAt(n+1)]>>4,a[i++]=255&t);1===o&&(t=An[e.charCodeAt(n)]<<10|An[e.charCodeAt(n+1)]<<4|An[e.charCodeAt(n+2)]>>2,a[i++]=t>>8&255,a[i++]=255&t);return a},Sn=function(e){for(var t,n=e.length,r=n%3,s=[],o=16383,a=0,i=n-r;a<i;a+=o)s.push(Dn(e,a,a+o>i?i:a+o));1===r?(t=e[n-1],s.push(Nn[t>>2]+Nn[t<<4&63]+"==")):2===r&&(t=(e[n-2]<<8)+e[n-1],s.push(Nn[t>>10]+Nn[t>>4&63]+Nn[t<<2&63]+"="));return s.join("")}
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */;for(var vn,Tn,Nn=[],An=[],Rn="undefined"!=typeof Uint8Array?Uint8Array:Array,Mn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",_n=0,Fn=Mn.length;_n<Fn;++_n)Nn[_n]=Mn[_n],An[Mn.charCodeAt(_n)]=_n;function On(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function Dn(e,t,n){for(var r,s,o=[],a=t;a<n;a+=3)r=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),o.push(Nn[(s=r)>>18&63]+Nn[s>>12&63]+Nn[s>>6&63]+Nn[63&s]);return o.join("")}An["-".charCodeAt(0)]=62,An["_".charCodeAt(0)]=63,vn=function(e,t,n,r,s){var o,a,i=8*s-r-1,u=(1<<i)-1,c=u>>1,l=-7,d=n?s-1:0,h=n?-1:1,p=e[t+d];for(d+=h,o=p&(1<<-l)-1,p>>=-l,l+=i;l>0;o=256*o+e[t+d],d+=h,l-=8);for(a=o&(1<<-l)-1,o>>=-l,l+=r;l>0;a=256*a+e[t+d],d+=h,l-=8);if(0===o)o=1-c;else{if(o===u)return a?NaN:1/0*(p?-1:1);a+=Math.pow(2,r),o-=c}return(p?-1:1)*a*Math.pow(2,o-r)},Tn=function(e,t,n,r,s,o){var a,i,u,c=8*o-s-1,l=(1<<c)-1,d=l>>1,h=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:o-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(a++,u/=2),a+d>=l?(i=0,a=l):a+d>=1?(i=(t*u-1)*Math.pow(2,s),a+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,s),a=0));s>=8;e[n+p]=255&i,p+=f,i/=256,s-=8);for(a=a<<s|i,c+=s;c>0;e[n+p]=255&a,p+=f,a/=256,c-=8);e[n+p-f]|=128*m};const Cn="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;In=Un;function Bn(e){if(e>2147483647)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,Un.prototype),t}function Un(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return Ln(e)}return $n(e,t,n)}function $n(e,t,n){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!Un.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|qn(e,t);let r=Bn(n);const s=r.write(e,t);s!==n&&(r=r.slice(0,s));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(xr(e,Uint8Array)){const t=new Uint8Array(e);return Wn(t.buffer,t.byteOffset,t.byteLength)}return zn(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(xr(e,ArrayBuffer)||e&&xr(e.buffer,ArrayBuffer))return Wn(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(xr(e,SharedArrayBuffer)||e&&xr(e.buffer,SharedArrayBuffer)))return Wn(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return Un.from(r,t,n);const s=function(e){if(Un.isBuffer(e)){const t=0|Hn(e.length),n=Bn(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!=typeof e.length||Sr(e.length)?Bn(0):zn(e);if("Buffer"===e.type&&Array.isArray(e.data))return zn(e.data)}(e);if(s)return s;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return Un.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function Pn(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function Ln(e){return Pn(e),Bn(e<0?0:0|Hn(e))}function zn(e){const t=e.length<0?0:0|Hn(e.length),n=Bn(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function Wn(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,Un.prototype),r}function Hn(e){if(e>=2147483647)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+2147483647..toString(16)+" bytes");return 0|e}function qn(e,t){if(Un.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||xr(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return wr(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return Er(e).length;default:if(s)return r?-1:wr(e).length;t=(""+t).toLowerCase(),s=!0}}function Kn(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return sr(this,t,n);case"utf8":case"utf-8":return tr(this,t,n);case"ascii":return nr(this,t,n);case"latin1":case"binary":return rr(this,t,n);case"base64":return er(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return or(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function Gn(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function jn(e,t,n,r,s){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),Sr(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"==typeof t&&(t=Un.from(t,r)),Un.isBuffer(t))return 0===t.length?-1:Vn(e,t,n,r,s);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):Vn(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function Vn(e,t,n,r,s){let o,a=1,i=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;a=2,i/=2,u/=2,n/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(s){let r=-1;for(o=n;o<i;o++)if(c(e,o)===c(t,-1===r?0:o-r)){if(-1===r&&(r=o),o-r+1===u)return r*a}else-1!==r&&(o-=o-r),r=-1}else for(n+u>i&&(n=i-u),o=n;o>=0;o--){let n=!0;for(let r=0;r<u;r++)if(c(e,o+r)!==c(t,r)){n=!1;break}if(n)return o}return-1}function Yn(e,t,n,r){n=Number(n)||0;const s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;const o=t.length;let a;for(r>o/2&&(r=o/2),a=0;a<r;++a){const r=parseInt(t.substr(2*a,2),16);if(Sr(r))return a;e[n+a]=r}return a}function Zn(e,t,n,r){return Ir(wr(t,e.length-n),e,n,r)}function Xn(e,t,n,r){return Ir(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function Jn(e,t,n,r){return Ir(Er(t),e,n,r)}function Qn(e,t,n,r){return Ir(function(e,t){let n,r,s;const o=[];for(let a=0;a<e.length&&!((t-=2)<0);++a)n=e.charCodeAt(a),r=n>>8,s=n%256,o.push(s),o.push(r);return o}(t,e.length-n),e,n,r)}function er(e,t,n){return 0===t&&n===e.length?Sn(e):Sn(e.slice(t,n))}function tr(e,t,n){n=Math.min(e.length,n);const r=[];let s=t;for(;s<n;){const t=e[s];let o=null,a=t>239?4:t>223?3:t>191?2:1;if(s+a<=n){let n,r,i,u;switch(a){case 1:t<128&&(o=t);break;case 2:n=e[s+1],128==(192&n)&&(u=(31&t)<<6|63&n,u>127&&(o=u));break;case 3:n=e[s+1],r=e[s+2],128==(192&n)&&128==(192&r)&&(u=(15&t)<<12|(63&n)<<6|63&r,u>2047&&(u<55296||u>57343)&&(o=u));break;case 4:n=e[s+1],r=e[s+2],i=e[s+3],128==(192&n)&&128==(192&r)&&128==(192&i)&&(u=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&i,u>65535&&u<1114112&&(o=u))}}null===o?(o=65533,a=1):o>65535&&(o-=65536,r.push(o>>>10&1023|55296),o=56320|1023&o),r.push(o),s+=a}return function(e){const t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}Un.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),Un.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(Un.prototype,"parent",{enumerable:!0,get:function(){if(Un.isBuffer(this))return this.buffer}}),Object.defineProperty(Un.prototype,"offset",{enumerable:!0,get:function(){if(Un.isBuffer(this))return this.byteOffset}}),Un.poolSize=8192,Un.from=function(e,t,n){return $n(e,t,n)},Object.setPrototypeOf(Un.prototype,Uint8Array.prototype),Object.setPrototypeOf(Un,Uint8Array),Un.alloc=function(e,t,n){return function(e,t,n){return Pn(e),e<=0?Bn(e):void 0!==t?"string"==typeof n?Bn(e).fill(t,n):Bn(e).fill(t):Bn(e)}(e,t,n)},Un.allocUnsafe=function(e){return Ln(e)},Un.allocUnsafeSlow=function(e){return Ln(e)},Un.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==Un.prototype},Un.compare=function(e,t){if(xr(e,Uint8Array)&&(e=Un.from(e,e.offset,e.byteLength)),xr(t,Uint8Array)&&(t=Un.from(t,t.offset,t.byteLength)),!Un.isBuffer(e)||!Un.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let s=0,o=Math.min(n,r);s<o;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},Un.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},Un.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return Un.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=Un.allocUnsafe(t);let s=0;for(n=0;n<e.length;++n){let t=e[n];if(xr(t,Uint8Array))s+t.length>r.length?(Un.isBuffer(t)||(t=Un.from(t)),t.copy(r,s)):Uint8Array.prototype.set.call(r,t,s);else{if(!Un.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,s)}s+=t.length}return r},Un.byteLength=qn,Un.prototype._isBuffer=!0,Un.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)Gn(this,t,t+1);return this},Un.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)Gn(this,t,t+3),Gn(this,t+1,t+2);return this},Un.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)Gn(this,t,t+7),Gn(this,t+1,t+6),Gn(this,t+2,t+5),Gn(this,t+3,t+4);return this},Un.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?tr(this,0,e):Kn.apply(this,arguments)},Un.prototype.toLocaleString=Un.prototype.toString,Un.prototype.equals=function(e){if(!Un.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===Un.compare(this,e)},Un.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},Cn&&(Un.prototype[Cn]=Un.prototype.inspect),Un.prototype.compare=function(e,t,n,r,s){if(xr(e,Uint8Array)&&(e=Un.from(e,e.offset,e.byteLength)),!Un.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;let o=(s>>>=0)-(r>>>=0),a=(n>>>=0)-(t>>>=0);const i=Math.min(o,a),u=this.slice(r,s),c=e.slice(t,n);for(let e=0;e<i;++e)if(u[e]!==c[e]){o=u[e],a=c[e];break}return o<a?-1:a<o?1:0},Un.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},Un.prototype.indexOf=function(e,t,n){return jn(this,e,t,n,!0)},Un.prototype.lastIndexOf=function(e,t,n){return jn(this,e,t,n,!1)},Un.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let o=!1;for(;;)switch(r){case"hex":return Yn(this,e,t,n);case"utf8":case"utf-8":return Zn(this,e,t,n);case"ascii":case"latin1":case"binary":return Xn(this,e,t,n);case"base64":return Jn(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Qn(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},Un.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function nr(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function rr(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function sr(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let s="";for(let r=t;r<n;++r)s+=vr[e[r]];return s}function or(e,t,n){const r=e.slice(t,n);let s="";for(let e=0;e<r.length-1;e+=2)s+=String.fromCharCode(r[e]+256*r[e+1]);return s}function ar(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function ir(e,t,n,r,s,o){if(!Un.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function ur(e,t,n,r,s){gr(t,r,s,e,n,7);let o=Number(t&BigInt(4294967295));e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o,o>>=8,e[n++]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,n}function cr(e,t,n,r,s){gr(t,r,s,e,n,7);let o=Number(t&BigInt(4294967295));e[n+7]=o,o>>=8,e[n+6]=o,o>>=8,e[n+5]=o,o>>=8,e[n+4]=o;let a=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=a,a>>=8,e[n+2]=a,a>>=8,e[n+1]=a,a>>=8,e[n]=a,n+8}function lr(e,t,n,r,s,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function dr(e,t,n,r,s){return t=+t,n>>>=0,s||lr(e,0,n,4),Tn(e,t,n,r,23,4),n+4}function hr(e,t,n,r,s){return t=+t,n>>>=0,s||lr(e,0,n,8),Tn(e,t,n,r,52,8),n+8}Un.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,Un.prototype),r},Un.prototype.readUintLE=Un.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=this[e],s=1,o=0;for(;++o<t&&(s*=256);)r+=this[e+o]*s;return r},Un.prototype.readUintBE=Un.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=this[e+--t],s=1;for(;t>0&&(s*=256);)r+=this[e+--t]*s;return r},Un.prototype.readUint8=Un.prototype.readUInt8=function(e,t){return e>>>=0,t||ar(e,1,this.length),this[e]},Un.prototype.readUint16LE=Un.prototype.readUInt16LE=function(e,t){return e>>>=0,t||ar(e,2,this.length),this[e]|this[e+1]<<8},Un.prototype.readUint16BE=Un.prototype.readUInt16BE=function(e,t){return e>>>=0,t||ar(e,2,this.length),this[e]<<8|this[e+1]},Un.prototype.readUint32LE=Un.prototype.readUInt32LE=function(e,t){return e>>>=0,t||ar(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},Un.prototype.readUint32BE=Un.prototype.readUInt32BE=function(e,t){return e>>>=0,t||ar(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},Un.prototype.readBigUInt64LE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||kr(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,s=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(s)<<BigInt(32))})),Un.prototype.readBigUInt64BE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||kr(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],s=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(s)})),Un.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=this[e],s=1,o=0;for(;++o<t&&(s*=256);)r+=this[e+o]*s;return s*=128,r>=s&&(r-=Math.pow(2,8*t)),r},Un.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||ar(e,t,this.length);let r=t,s=1,o=this[e+--r];for(;r>0&&(s*=256);)o+=this[e+--r]*s;return s*=128,o>=s&&(o-=Math.pow(2,8*t)),o},Un.prototype.readInt8=function(e,t){return e>>>=0,t||ar(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},Un.prototype.readInt16LE=function(e,t){e>>>=0,t||ar(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},Un.prototype.readInt16BE=function(e,t){e>>>=0,t||ar(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},Un.prototype.readInt32LE=function(e,t){return e>>>=0,t||ar(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},Un.prototype.readInt32BE=function(e,t){return e>>>=0,t||ar(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},Un.prototype.readBigInt64LE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||kr(e,this.length-8);const r=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(r)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),Un.prototype.readBigInt64BE=Tr((function(e){yr(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||kr(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),Un.prototype.readFloatLE=function(e,t){return e>>>=0,t||ar(e,4,this.length),vn(this,e,!0,23,4)},Un.prototype.readFloatBE=function(e,t){return e>>>=0,t||ar(e,4,this.length),vn(this,e,!1,23,4)},Un.prototype.readDoubleLE=function(e,t){return e>>>=0,t||ar(e,8,this.length),vn(this,e,!0,52,8)},Un.prototype.readDoubleBE=function(e,t){return e>>>=0,t||ar(e,8,this.length),vn(this,e,!1,52,8)},Un.prototype.writeUintLE=Un.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){ir(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=1,o=0;for(this[t]=255&e;++o<n&&(s*=256);)this[t+o]=e/s&255;return t+n},Un.prototype.writeUintBE=Un.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){ir(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=n-1,o=1;for(this[t+s]=255&e;--s>=0&&(o*=256);)this[t+s]=e/o&255;return t+n},Un.prototype.writeUint8=Un.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,1,255,0),this[t]=255&e,t+1},Un.prototype.writeUint16LE=Un.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},Un.prototype.writeUint16BE=Un.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},Un.prototype.writeUint32LE=Un.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},Un.prototype.writeUint32BE=Un.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Un.prototype.writeBigUInt64LE=Tr((function(e,t=0){return ur(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),Un.prototype.writeBigUInt64BE=Tr((function(e,t=0){return cr(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),Un.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);ir(this,e,t,n,r-1,-r)}let s=0,o=1,a=0;for(this[t]=255&e;++s<n&&(o*=256);)e<0&&0===a&&0!==this[t+s-1]&&(a=1),this[t+s]=(e/o>>0)-a&255;return t+n},Un.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);ir(this,e,t,n,r-1,-r)}let s=n-1,o=1,a=0;for(this[t+s]=255&e;--s>=0&&(o*=256);)e<0&&0===a&&0!==this[t+s+1]&&(a=1),this[t+s]=(e/o>>0)-a&255;return t+n},Un.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},Un.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},Un.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},Un.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},Un.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||ir(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},Un.prototype.writeBigInt64LE=Tr((function(e,t=0){return ur(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),Un.prototype.writeBigInt64BE=Tr((function(e,t=0){return cr(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),Un.prototype.writeFloatLE=function(e,t,n){return dr(this,e,t,!0,n)},Un.prototype.writeFloatBE=function(e,t,n){return dr(this,e,t,!1,n)},Un.prototype.writeDoubleLE=function(e,t,n){return hr(this,e,t,!0,n)},Un.prototype.writeDoubleBE=function(e,t,n){return hr(this,e,t,!1,n)},Un.prototype.copy=function(e,t,n,r){if(!Un.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const s=r-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),s},Un.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!Un.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{const o=Un.isBuffer(e)?e:Un.from(e,r),a=o.length;if(0===a)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<n-t;++s)this[s+t]=o[s%a]}return this};const pr={};function fr(e,t,n){pr[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function mr(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function gr(e,t,n,r,s,o){if(e>n||e<t){const r="bigint"==typeof t?"n":"";let s;throw s=o>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(o+1)}${r}`:`>= -(2${r} ** ${8*(o+1)-1}${r}) and < 2 ** ${8*(o+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new pr.ERR_OUT_OF_RANGE("value",s,e)}!function(e,t,n){yr(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||kr(t,e.length-(n+1))}(r,s,o)}function yr(e,t){if("number"!=typeof e)throw new pr.ERR_INVALID_ARG_TYPE(t,"number",e)}function kr(e,t,n){if(Math.floor(e)!==e)throw yr(e,n),new pr.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new pr.ERR_BUFFER_OUT_OF_BOUNDS;throw new pr.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}fr("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),fr("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),fr("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>2**32?s=mr(String(n)):"bigint"==typeof n&&(s=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(s=mr(s)),s+="n"),r+=` It must be ${t}. Received ${s}`,r}),RangeError);const br=/[^+/0-9A-Za-z-_]/g;function wr(e,t){let n;t=t||1/0;const r=e.length;let s=null;const o=[];for(let a=0;a<r;++a){if(n=e.charCodeAt(a),n>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(a+1===r){(t-=3)>-1&&o.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&o.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function Er(e){return xn(function(e){if((e=(e=e.split("=")[0]).trim().replace(br,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Ir(e,t,n,r){let s;for(s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function xr(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Sr(e){return e!=e}const vr=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let s=0;s<16;++s)t[r+s]=e[n]+e[s]}return t}();function Tr(e){return"undefined"==typeof BigInt?Nr:e}function Nr(){throw new Error("BigInt not supported")}var Ar=In;const Rr=void 0!==Ar&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Mr(e){return Rr?Ar.byteLength(e):new Blob([e]).size}function _r(e){if(Rr)return Ar.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function Fr(e){if(Rr){const t=Ar.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function Or(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Dr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Cr(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Br(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Mr(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Mr(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Ur{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ur.instance&&(Ur.instance=new Ur),Ur.instance}static registerSaveRouter(e){Ur.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ur.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ur.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ur.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ur.getInstance().loadRouters:Ur.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}function $r(){if(!ae().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Pr(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class Lr{constructor(e){if(this.indexedDB=$r(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Pr(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Br(t),o=s.transaction("model_info_store","readwrite");let a=o.objectStore("model_info_store");const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=s.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=o.objectStore("model_info_store");const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(i.error)),t.onerror=e=>(s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Lr.URL_SCHEME="indexeddb://";const zr=e=>{return ae().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Lr.URL_SCHEME)?(t=e.slice(Lr.URL_SCHEME.length),new Lr(t)):null;var t};Ur.registerSaveRouter(zr),Ur.registerLoadRouter(zr);class Wr{constructor(){this.indexedDB=$r()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>Pr(n),n.onsuccess=()=>{const r=n.result,s=r.transaction("model_info_store","readonly"),o=s.objectStore("model_info_store").getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Lr.URL_SCHEME)?t.slice(Lr.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>Pr(r),r.onsuccess=()=>{const s=r.result,o=s.transaction("model_info_store","readwrite"),a=o.objectStore("model_info_store"),i=a.get(e);let u;i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),o=()=>{u=s.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),s.close(),n(i.error))}},i.onerror=e=>(s.close(),n(i.error)),o.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Hr="tensorflowjs_models",qr="info",Kr="model_topology",Gr="weight_specs",jr="weight_data",Vr="model_metadata";function Yr(e){return{info:[Hr,e,qr].join("/"),topology:[Hr,e,Kr].join("/"),weightSpecs:[Hr,e,Gr].join("/"),weightData:[Hr,e,jr].join("/"),modelMetadata:[Hr,e,Vr].join("/")}}function Zr(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Xr(e){const t=e.split("/");if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}class Jr{constructor(e){if(!ae().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Yr(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Br(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,_r(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw Zr(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Fr(o),t}}Jr.URL_SCHEME="localstorage://";const Qr=e=>{return ae().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Jr.URL_SCHEME)?(t=e.slice(Jr.URL_SCHEME.length),new Jr(t)):null;var t};Ur.registerSaveRouter(Qr),Ur.registerLoadRouter(Qr);class es{constructor(){k(ae().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),k("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Hr+"/",n="/"+qr;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[Xr(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=Yr(e=(t=e).startsWith(Jr.URL_SCHEME)?t.slice(Jr.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Zr(n),r}}class ts{constructor(){this.managers={}}static getInstance(){return null==ts.instance&&(ts.instance=new ts),ts.instance}static registerManager(e,t){k(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),k(e.length>0,(()=>"scheme must not be an empty string."));const n=ts.getInstance();k(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ts.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ts.getInstance().managers)}}class ns{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(ae().get("IS_BROWSER")){ae().setPlatform("browser",new ns);try{ts.registerManager(Jr.URL_SCHEME,new es)}catch(e){}try{ts.registerManager(Lr.URL_SCHEME,new Wr)}catch(e){}}const rs=()=>o("kjyEk");let ss;function os(e,t="float32",n){return t=t||"float32",ee(e),new $t(e,t,n)}ae().get("IS_NODE")&&!ae().get("IS_BROWSER")&&ae().setPlatform("node",new class{constructor(){this.util=o("kjyEk"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ae().global.fetch?ae().global.fetch(e,t):(null==ss&&(ss=rs()),ss(e,t))}now(){const e=le.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const as=kn({cast_:function(e,t){const n=gn(e,"x","cast");if(!U(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ln.runKernel("Cast",r,s)}});const is=kn({clone_:function(e){const t={x:gn(e,"x","clone","string_or_numeric")};return ln.runKernel("Identity",t)}});cn();Lt={buffer:os,cast:as,clone:is,print:function(e,t=!1){console.log(e.toString(t))}};function us(e){return new Promise((e=>setTimeout(e))).then(e)}class cs{constructor(e){if(!ae().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(cs.URL_SCHEME)&&(e=e.slice(cs.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Dr(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await us((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await us((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Br(e)}}}}cs.URL_SCHEME="downloads://";function ls(e,t,n,r){!function(e){k(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){k(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),k(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),k(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((o=>(o.then((o=>{const a=n+ ++s/e.length*(r-n);return t(a),o})),o))))}async function ds(e,t){null==t&&(t={});const n=null==t.fetchFunc?ae().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await ls(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await ls(s,t.onProgress,.5,1)}Ur.registerSaveRouter((e=>ae().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(cs.URL_SCHEME)?function(e="model"){return new cs(e)}(e.slice(cs.URL_SCHEME.length)):null));class hs{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(k("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ae().platform.fetch,k(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&k(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Dr(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Br(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Cr(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,o=[];for(const t of e)o.push(...t.weights);const a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);this.weightUrlConverter&&a.push(...await Promise.all(i));return[o,Or(await ds(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ps(e){return null!=e.match(hs.URL_SCHEME_REGEX)}hs.URL_SCHEME_REGEX=/^https?:\/\//;const fs=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ps(e))):ps(e),n)return ms(e,t)}return null};function ms(e,t){return new hs(e,t)}Ur.registerSaveRouter(fs),Ur.registerLoadRouter(fs);var gs={};function ys(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=e[o]||1;(t[t.length-1-s]||1)>1&&1===a&&r.unshift(o)}return r}function ks(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],o=t.length-r-1,a=t[o];(null==s||1===s&&a>1)&&n.unshift(o)}return n}function bs(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let o=t[t.length-s-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}e(gs,"getBroadcastDims",(()=>ys)),e(gs,"getReductionAxes",(()=>ks)),e(gs,"assertAndGetBroadcastShape",(()=>bs));var ws={};e(ws,"assertParamsValid",(()=>Es)),e(ws,"maskToAxes",(()=>Is)),e(ws,"computeOutShape",(()=>xs)),e(ws,"stridesWithElidedDims",(()=>Ss)),e(ws,"getNormalizedAxes",(()=>Ns)),e(ws,"startIndicesWithElidedDims",(()=>As)),e(ws,"stopIndicesWithElidedDims",(()=>Rs)),e(ws,"startForAxis",(()=>_s)),e(ws,"stopForAxis",(()=>Fs)),e(ws,"stridesForAxis",(()=>Ms)),e(ws,"isSliceContinous",(()=>Os)),e(ws,"computeFlatOffset",(()=>Ds)),e(ws,"parseSliceParams",(()=>Cs)),e(ws,"sliceInfo",(()=>Bs));function Es(e,t,n){const r=e.shape.length;k(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),k(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)k(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Is(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function xs(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Ss(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function vs(e,t,n){return n<=e?n:n-(t-1)}function Ts(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ns(e,t,n,r,s,o,a,i,u){const c=e.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=As(a,u,c,r,e),d=Rs(i,u,c,s,e),h=Ss(o,u,c,e)}else for(let t=0;t<c;t++)l[t]=_s(a,r,o,e,t,u),d[t]=Fs(i,s,o,e,t,u),h[t]=Ms(o,t,u);return{begin:l,end:d,strides:h}}function As(e,t,n,r,s){const o=[...s],a=Ts(n,t);for(let s=0;s<o.length;s++)if(a.indexOf(s)>-1)o[s]=0;else{const a=vs(t,n,s);let i=r[a];e&1<<a&&(i=0),o[s]=i}return o}function Rs(e,t,n,r,s){const o=[...s],a=Ts(n,t);for(let s=0;s<o.length;s++)if(a.indexOf(s)>-1)o[s]=Number.MAX_SAFE_INTEGER;else{const a=vs(t,n,s);let i=r[a];e&1<<a&&(i=Number.MAX_SAFE_INTEGER),o[s]=i}for(let e=0;e<o.length;e++){const t=s[e];o[e]<0&&(o[e]+=t),o[e]=h(0,o[e],s[e])}return o}function Ms(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function _s(e,t,n,r,s,o){let a=t[s];const i=n[s]||1;(e&1<<s||o&1<<s||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=h(0,a,u-1),a}function Fs(e,t,n,r,s,o){let a=t[s];const i=n[s]||1;(e&1<<s||o&1<<s||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=i>0?h(0,a,u):h(-1,a,u-1),a}function Os(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Ds(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Cs(e,t,n){let r;const s=e.shape.length;let o;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{k(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(k(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,o]}function Bs(e,t,n,r,s,o,a,i,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=a&&0!=(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)l&&0!=(1<<e&i)&&d.numAddAxisAfterEllipsis++,1<<e&a&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[h.beginMask&1<<t,h.endMask&1<<t],o=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const a=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=Us(h.begin[t],0,h.strides[t],r,s,o),h.end[t]=Us(h.end[t],1,h.strides[t],r,s,o);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&a,f=f&&(0===t&&1===h.strides[t]||a);let i,u=!1;if(h.beginValid&&h.endValid?(i=h.end[t]-h.begin[t],u=!0):n?(i=1,u=!0):a&&r>=0&&(i=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===i||i<0!=h.strides[t]<0?0:Math.trunc(i/h.strides[t])+(i%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Us(e,t,n,r,s,o){if(s[t])return n>0?o[t]:o[t+1&1];{const t=e<0?r+e:e;return t<o[0]?o[0]:t>o[1]?o[1]:t}}var $s={};e($s,"fromUint8ToStringArray",(()=>Pa)),e($s,"fromStringArrayToUint8",(()=>La)),e($s,"slice_util",(()=>ws)),e($s,"upcastType",(()=>tn)),e($s,"segment_util",(()=>Ps));var Ps={};e(Ps,"segOpComputeOptimalWindowSize",(()=>Hs)),e(Ps,"computeOutShape",(()=>qs)),e(Ps,"collectGatherOpShapeInfo",(()=>Ks));var Ls={};e(Ls,"PARALLELIZE_THRESHOLD",(()=>zs)),e(Ls,"computeOptimalWindowSize",(()=>Ws));const zs=30;function Ws(e){return e<=zs?e:j(e,Math.floor(Math.sqrt(e)))}function Hs(e,t){let n,r=!1;for(e<=zs?(n=e,r=!0):n=j(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=j(e,n+1);return n}function qs(e,t,n){const r=[],s=e.length;for(let o=0;o<s;o++)o!==t?r.push(e[o]):r.push(n);return r}function Ks(e,t,n,r){const s=t.shape.length,o=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const a=e.shape[n],i=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<s;e++)i.push(t.shape[e]);for(let t=n+1;t<o;t++)i.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}var Gs={};function js(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Vs(e,t,n){const r=e.length+t.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?s.push(e[o++]):s.push(t[a++]);return s}function Ys(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Zs(e,t){return Vs(e,t.map((e=>1)),t)}function Xs(e,t,n){k(js(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Js(e,t){if(js(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Qs(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function eo(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}e(Gs,"axesAreInnerMostDims",(()=>js)),e(Gs,"combineLocations",(()=>Vs)),e(Gs,"computeOutAndReduceShapes",(()=>Ys)),e(Gs,"expandShapeToKeepDim",(()=>Zs)),e(Gs,"assertAxesAreInnerMostDims",(()=>Xs)),e(Gs,"getAxesPermutation",(()=>Js)),e(Gs,"getUndoAxesPermutation",(()=>Qs)),e(Gs,"getInnerMostAxes",(()=>eo));var to={};function no(e,t){const n=e[0].length;e.forEach(((e,t)=>{k(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),k(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let o=0;o<n;o++)k(o===t||e[o]===r[o],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function ro(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}e(to,"assertParamsConsistent",(()=>no)),e(to,"computeOutShape",(()=>ro));var so={};function oo(e,t,n,r,s="NHWC",o){return uo(e,[...t,e[3]],n,o,r,null,null,ko(s))}function ao(e,t,n,r,s,o,a="channelsLast"){const[i,u]=ho(t);let c;if("channelsLast"===a)c=[i,u,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);c=[i,u,e[1],e[1]]}return uo(e,c,n,r,s,o,!1,a)}function io(e,t,n,r,s,o,a="NDHWC"){const[i,u,c]=po(t);let l,d;if("NDHWC"===a)d="channelsLast",l=[i,u,c,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);d="channelsFirst",l=[i,u,c,e[1],e[1]]}return co(e,l,n,r,s,!1,d,o)}function uo(e,t,n,r,s,o,a=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,d,c,l]=e}const[h,p,,f]=t,[m,g]=ho(n),[y,k]=ho(r),b=fo(h,y),w=fo(p,k),{padInfo:E,outHeight:I,outWidth:x}=function(e,t,n,r,s,o,a,i,u){let c,l,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=lo(e,t,n));const o=e[0],a=e[1],i=mo((o-t+2*r)/n+1,s),u=mo((a-t+2*r)/n+1,s);return[i,u]}([t,n],o,r,e,i);l=s[0],d=s[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/s);const e=Math.max(0,(l-1)*r+o-t),i=Math.max(0,(d-1)*s+a-n),u=Math.floor(e/2),h=e-u,p=Math.floor(i/2);c={top:u,bottom:h,left:p,right:i-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/r),d=Math.ceil((n-a+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},l=mo((t-o+h+p)/r+1,i),d=mo((n-a+f+m)/s+1,i)}}return{padInfo:c,outHeight:l,outWidth:d}}(s,c,l,m,g,b,w,o,i),S=a?f*d:f;let v;return"channelsFirst"===i?v=[u,S,I,x]:"channelsLast"===i&&(v=[u,I,x,S]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:I,outWidth:x,outChannels:S,padInfo:E,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:k,inShape:e,outShape:v,filterShape:t}}function co(e,t,n,r,s,o=!1,a="channelsLast",i){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[u,c,l,d,h]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,h,c,l,d]=e}const[p,f,m,,g]=t,[y,k,b]=po(n),[w,E,I]=po(r),x=fo(p,w),S=fo(f,E),v=fo(m,I),{padInfo:T,outDepth:N,outHeight:A,outWidth:R}=function(e,t,n,r,s,o,a,i,u,c,l){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,s,o){null==s&&(s=lo(e,t,r));const a=e[0],i=e[1],u=e[2],c=mo((a-t+2*s)/r+1,o),l=mo((i-t+2*s)/r+1,o),d=mo((u-t+2*s)/r+1,o);return[c,l,d,n]}([t,n,r,1],i,1,s,e,l);h=o[0],p=o[1],f=o[2]}else if("same"===e){h=Math.ceil(t/s),p=Math.ceil(n/o),f=Math.ceil(r/a);const e=(h-1)*s+i-t,l=(p-1)*o+u-n,m=(f-1)*a+c-r,g=Math.floor(e/2),y=e-g,k=Math.floor(l/2),b=l-k,w=Math.floor(m/2);d={top:k,bottom:b,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/s),p=Math.ceil((n-u+1)/o),f=Math.ceil((r-c+1)/a)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(s,c,l,d,y,k,b,x,S,v,i),M=o?g*h:g;let _;return"channelsFirst"===a?_=[u,M,N,A,R]:"channelsLast"===a&&(_=[u,N,A,R,M]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:N,outHeight:A,outWidth:R,outChannels:M,padInfo:T,strideDepth:y,strideHeight:k,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:x,effectiveFilterHeight:S,effectiveFilterWidth:v,dilationDepth:w,dilationHeight:E,dilationWidth:I,inShape:e,outShape:_,filterShape:t}}function lo(e,t,n,r=1){const s=fo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function ho(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function po(e){return"number"==typeof e?[e,e,e]:e}function fo(e,t){return t<=1?e:e+(e-1)*(t-1)}function mo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function go(e){const[t,n,r]=ho(e);return 1===t&&1===n&&1===r}function yo(e,t){return go(e)||go(t)}function ko(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function bo(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)k(v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{k(v(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}e(so,"computeDilation2DInfo",(()=>oo)),e(so,"convertConv2DDataFormat",(()=>ko)),e(so,"computeConv2DInfo",(()=>uo)),e(so,"computePool2DInfo",(()=>ao)),e(so,"computePool3DInfo",(()=>io)),e(so,"computeConv3DInfo",(()=>co)),e(so,"computeDefaultPad",(()=>lo)),e(so,"tupleValuesAreOne",(()=>go)),e(so,"eitherStridesOrDilationsAreOne",(()=>yo)),e(so,"checkPadOnDimRoundingMode",(()=>bo));var wo={};e(wo,"getFusedDyActivation",(()=>_o)),e(wo,"getFusedBiasGradient",(()=>Fo)),e(wo,"applyActivation",(()=>Oo)),e(wo,"shouldFuse",(()=>Do));const Eo=kn({elu_:function(e){const t={x:gn(e,"x","elu","float32")};return ln.runKernel("Elu",t)}});const Io=kn({leakyRelu_:function(e,t=.2){const n={x:gn(e,"x","leakyRelu")},r={alpha:t};return ln.runKernel("LeakyRelu",n,r)}});const xo=kn({mul_:function(e,t){let n=gn(e,"a","mul"),r=gn(t,"b","mul");[n,r]=nn(n,r);const s={a:n,b:r};return ln.runKernel("Multiply",s)}});const So=kn({prelu_:function(e,t){const n={x:gn(e,"x","prelu"),alpha:gn(t,"alpha","prelu")};return ln.runKernel("Prelu",n)}});const vo=kn({relu_:function(e){const t={x:gn(e,"x","relu")};return ln.runKernel("Relu",t)}});const To=kn({relu6_:function(e){const t={x:gn(e,"x","relu6")};return ln.runKernel("Relu6",t)}});const No=kn({reshape_:function(e,t){const n={x:gn(e,"x","reshape","string_or_numeric")},r={shape:t};return ln.runKernel("Reshape",n,r)}});const Ao=kn({sigmoid_:function(e){const t={x:gn(e,"x","sigmoid","float32")};return ln.runKernel("Sigmoid",t)}});const Ro=kn({step_:function(e,t=0){const n={x:gn(e,"x","step")},r={alpha:t};return ln.runKernel("Step",n,r)}});const Mo=kn({sum_:function(e,t=null,n=!1){let r=gn(e,"x","sum");"bool"===r.dtype&&(r=as(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return ln.runKernel("Sum",s,o)}});function _o(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return xo(e,Ro(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Fo(e,t){let n=t;const r=ks(e.shape,t.shape);return r.length>0&&(n=Mo(n,r)),No(n,e.shape)}function Oo(e,t,n,r){if("linear"===t)return e;if("relu"===t)return vo(e);if("elu"===t)return Eo(e);if("relu6"===t)return To(e);if("prelu"===t)return So(e,n);if("leakyrelu"===t)return Io(e,r);if("sigmoid"===t)return Ao(e);throw new Error(`Unknown fused activation ${t}.`)}const Do=(e,t)=>!(e>0)||"linear"===t;var Co={};function Bo(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}e(Co,"getImageCenter",(()=>Bo));var Uo={};function $o(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Po(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Lo(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function zo(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Wo(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}e(Uo,"getReshaped",(()=>$o)),e(Uo,"getPermuted",(()=>Po)),e(Uo,"getReshapedPermuted",(()=>Lo)),e(Uo,"getSliceBeginCoords",(()=>zo)),e(Uo,"getSliceSize",(()=>Wo));var Ho={};function qo(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===I(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,o=s[s.length-1];let a=1;for(let e=0;e<s.length-1;++e)a*=s[e];const i=e.shape,u=s.slice();u.pop();let c=1;for(let e=o;e<n;++e)c*=i[e],u.push(i[e]);const l=[...V(e.shape).map((e=>e/c)),1].slice(0,o);return[u,a,c,l]}e(Ho,"prepareAndValidate",(()=>qo));var Ko={};function Go(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(o+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(o+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(o+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(o+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function jo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Go(n,t,e)}function Vo(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let a=1;for(let e=s;e<o;++e)a*=n[e];const i=s<1?1:s;return{sliceRank:s,numUpdates:I(t.shape)/i,sliceSize:a,strides:[...V(n.slice(0,s)),1],outputSize:I(n)}}e(Ko,"validateUpdateShape",(()=>Go)),e(Ko,"validateInput",(()=>jo)),e(Ko,"calculateShapes",(()=>Vo));var Yo={};e(Yo,"SELU_SCALEALPHA",(()=>Zo)),e(Yo,"SELU_SCALE",(()=>Xo));const Zo=1.7580993408473768,Xo=1.0507009873554805;var Jo={};e(Jo,"ERF_P",(()=>Qo)),e(Jo,"ERF_A1",(()=>ea)),e(Jo,"ERF_A2",(()=>ta)),e(Jo,"ERF_A3",(()=>na)),e(Jo,"ERF_A4",(()=>ra)),e(Jo,"ERF_A5",(()=>sa));const Qo=.3275911,ea=.254829592,ta=-.284496736,na=1.421413741,ra=-1.453152027,sa=1.061405429;var oa={};function aa(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function ia(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ua(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function ca(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function la(e,t){return{real:e[2*t],imag:e[2*t+1]}}function da(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function ha(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const o=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}}function pa(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}e(oa,"mergeRealAndImagArrays",(()=>aa)),e(oa,"splitRealAndImagArrays",(()=>ia)),e(oa,"complexWithEvenIndex",(()=>ua)),e(oa,"complexWithOddIndex",(()=>ca)),e(oa,"getComplexWithIndex",(()=>la)),e(oa,"assignToTypedArray",(()=>da)),e(oa,"exponents",(()=>ha)),e(oa,"exponent",(()=>pa));var fa={};e(fa,"decodeEinsumEquation",(()=>ga)),e(fa,"getEinsumPermutation",(()=>ya)),e(fa,"checkEinsumDimSizes",(()=>ka)),e(fa,"getEinsumComputePath",(()=>ba)),e(fa,"isIdentityPermutation",(()=>wa));const ma=/->/g;function ga(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(ma,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");k(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const o=r.split(","),a=o.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<s.length;++e){const t=s[e];if(!o.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&","!==t&&i.push(t)}const u=new Array(o.length);for(let e=0;e<a;++e){if(new Set(o[e].split("")).size!==o[e].length)throw new Error(`Found duplicate axes in input component ${o[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<o[e].length;++t)u[e].push(i.indexOf(o[e][t]))}const c=i.length,l=[];for(let e=s.length;e<c;++e)l.push(e);return{allDims:i,summedDims:l,idDims:u}}function ya(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function ka(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:k(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function ba(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const o=[];for(let e=0;e<n.length;++e){const s=Ea(t,n[e]);for(const t of s)-1===o.indexOf(t)&&(r[e].push(t),o.push(t))}return{path:n,steps:r}}function wa(e){return e.every(((e,t)=>e===t))}function Ea(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}var Ia={};function xa(e,t,n=0){let r=[];if("number"==typeof t)k(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{k(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}k(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}e(Ia,"prepareSplitSize",(()=>xa));var Sa={};function va(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Ta(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Na(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}e(Sa,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",(()=>va)),e(Sa,"getSparseFillEmptyRowsNegativeIndexErrorMessage",(()=>Ta)),e(Sa,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",(()=>Na));var Aa={};function Ra(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Ma(e,t){return`size ${e} must be non-negative, not ${t}`}function _a(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Fa(e,t){return`Input to reshape is a SparseTensor with ${I(e)}\n  dense values, but the requested shape requires a multiple of ${I(t)}. inputShape=${e} outputShape= ${t}`}function Oa(e,t){return`Input to reshape is a tensor with ${I(e)} dense values, but the requested shape has ${I(t)}. inputShape=${e} outputShape=${t}`}e(Aa,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",(()=>Ra)),e(Aa,"getSparseReshapeNegativeOutputDimErrorMessage",(()=>Ma)),e(Aa,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",(()=>_a)),e(Aa,"getSparseReshapeInputOutputMultipleErrorMessage",(()=>Fa)),e(Aa,"getSparseReshapeInputOutputMismatchErrorMessage",(()=>Oa));var Da={};function Ca(){return"segment ids must be >= 0"}function Ba(){return"segment ids are not increasing"}function Ua(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function $a(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Pa(e){try{return e.map((e=>Nt(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function La(e){return e.map((e=>Tt(e)))}e(Da,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",(()=>Ca)),e(Da,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",(()=>Ba)),e(Da,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",(()=>Ua)),e(Da,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",(()=>$a)),n($s,Gs),n($s,gs),n($s,to),n($s,so),n($s,wo),n($s,Ls),n($s,Co),n($s,Uo),n($s,Ho),n($s,Ko),n($s,Yo),n($s,Jo),n($s,Te),n($s,oa),n($s,fa),n($s,Ia),n($s,Sa),n($s,Aa),n($s,Da);var za={};function Wa(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}(e,t,n||Ha)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ha(e,t){return e>t?1:e<t?-1:0}function qa(e,t,n,r,s){return ja(e,t,n,r,s,0)}function Ka(e,t,n,r,s,o){return ja(e,t,n,r,s,0,!1,o,!0)}function Ga(e,t,n,r,s,o){return ja(e,t,n,r,s,o,!0)}function ja(e,t,n,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>s&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort(Za);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:o,suppressBeginIndex:a}=t;if(n<s)break;let i=!1;for(let n=d.length-1;n>=a;--n){const a=Va(e,o,d[n]);if(a>=r){i=!0;break}if(t.score=t.score*Ya(r,l,a),t.score<=s)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(o),h.push(t.score)):t.score>s&&Wa(c,t,Za))}const p=d.length,f=n-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function Va(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),h=Math.max(s[1],s[3]),p=(i-o)*(u-a),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,l),y=Math.min(i,d),k=Math.min(u,h),b=Math.max(y-m,0)*Math.max(k-g,0);return b/(p+f-b)}function Ya(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Za(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Xa(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=os(e,"int32"),s=os([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const o=r.indexToLoc(n[t]),a=t*e.length;s.values.set(o,a)}return s.toTensor()}e(za,"nonMaxSuppressionV3Impl",(()=>qa)),e(za,"nonMaxSuppressionV4Impl",(()=>Ka)),e(za,"nonMaxSuppressionV5Impl",(()=>Ga)),e(za,"whereImpl",(()=>Xa));const Ja=kn({concat_:function(e,t=0){k(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=yn(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return is(n[0]);const r=n,s={axis:t};return ln.runKernel("Concat",r,s)}});const Qa=kn({imag_:function(e){const t={input:gn(e,"input","imag")};return ln.runKernel("Imag",t)}});const ei=kn({real_:function(e){const t={input:gn(e,"input","real")};return ln.runKernel("Real",t)}});const ti=kn({slice_:function(e,t,n){const r=gn(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:t,size:n};return ln.runKernel("Slice",s,o)}});const ni=kn({split_:function(e,t,n=0){const r={x:gn(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ln.runKernel("SplitV",r,s)}});function ri(e,t="float32"){if("complex64"===t){const t=ri(e,"float32"),n=ri(e,"float32");return bn(t,n)}const n=J(I(e),t);return ln.makeTensor(n,e,t)}const si=kn({zerosLike_:function(e){const t={x:gn(e,"x","zerosLike")};return ln.runKernel("ZerosLike",t)}});const oi=kn({fft_:function(e){k("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ln.runKernel("FFT",t)}});const ai=kn({rfft_:function(e,t){k("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),o=e.shape.map((e=>e));o[e.shape.length-1]=t,s=ti(e,r,o),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ja([e,ri(r)],e.shape.length-1),n=t}else s=e;const o=si(s),a=No(bn(s,o),[r,n]),i=oi(a),u=Math.floor(n/2)+1,c=ei(i),l=Qa(i),d=ni(c,[u,n-u],c.shape.length-1),h=ni(l,[u,n-u],l.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,No(bn(d[0],h[0]),p)}});const ii=kn({ifft_:function(e){k("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ln.runKernel("IFFT",t)}});const ui=kn({reverse_:function(e,t){const n={x:gn(e,"x","reverse")},r={dims:t};return ln.runKernel("Reverse",n,r)}});function ci(e,t){if((P(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&P(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wn(e,[],[],t)}kn({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=No(e,[n,t]);r=ii(s)}else{const s=[n,2*(t-1)],o=No(ei(e),[n,t]),a=No(Qa(e),[n,t]),i=ui(ti(o,[0,1],[n,t-2]),1),u=xo(ui(ti(a,[0,1],[n,t-2]),1),ci(-1)),c=Ja([o,i],1),l=Ja([a,u],1),d=No(bn(c,l),[s[0],s[1]]);r=ii(d)}if(r=ei(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=No(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});function li(e,t){w(e);const n=pn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return wn(e,null,n,t)}function di(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let o=0;o<e;++o){const a=2*Math.PI*o/(e+r-1);s[o]=t-n*Math.cos(a)}return li(s,"float32")}kn({hammingWindow_:function(e){return di(e,.54,.46)}});const hi=kn({hannWindow_:function(e){return di(e,.5,.5)}});function pi(e,t,n){const r={shape:e,value:t,dtype:n};return ln.runKernel("Fill",{},r)}function fi(e,t,n){if(w(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=pn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wn(e,t,r,n)}const mi=kn({frame_:function(e,t,n,r=!1,s=0){let o=0;const a=[];for(;o+t<=e.size;)a.push(ti(e,o,t)),o+=n;if(r)for(;o<e.size;){const r=o+t-e.size,i=Ja([ti(e,o,t-r),pi([r],s)]);a.push(i),o+=n}return 0===a.length?fi([],[0,t]):No(Ja(a),[a.length,t])}});kn({stft_:function(e,t,n,r,s=hi){var o;null==r&&(o=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(o)/Math.log(2)))));const a=mi(e,t,n),i=xo(a,s(t));return ai(i,r)}});kn({cropAndResize_:function(e,t,n,r,s="bilinear",o=0){const a=gn(e,"image","cropAndResize"),i=gn(t,"boxes","cropAndResize","float32"),u=gn(n,"boxInd","cropAndResize","int32"),c=i.shape[0];k(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),k(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`)),k(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`)),k(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),k(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),k("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const l={image:a,boxes:i,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return ln.runKernel("CropAndResize",l,d)}});kn({flipLeftRight_:function(e){const t=gn(e,"image","flipLeftRight","float32");k(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ln.runKernel("FlipLeftRight",n,{})}});const gi=kn({tile_:function(e,t){const n=gn(e,"x","tile","string_or_numeric");k(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return ln.runKernel("Tile",r,s)}});kn({grayscaleToRGB_:function(e){const t=gn(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];k(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),k(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,gi(t,s)}});kn({rotateWithOffset_:function(e,t,n=0,r=.5){const s=gn(e,"image","rotateWithOffset","float32");k(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const o={image:s},a={radians:t,fillValue:n,center:r};return ln.runKernel("RotateWithOffset",o,a)}});function yi(e,t,n,r,s,o){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==o&&(o=0);const a=e.shape[0];return n=Math.min(n,a),k(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),k(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),k(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),k(1===t.rank,(()=>"scores must be a 1D tensor")),k(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),k(0<=o&&o<=1,(()=>`softNmsSigma must be in [0, 1], but was '${o}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}kn({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=gn(e,"boxes","nonMaxSuppression","float32"),a=gn(t,"scores","nonMaxSuppression","float32"),i=yi(o,a,n,r,s),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:s=i.scoreThreshold};return ln.runKernel("NonMaxSuppressionV3",{boxes:o,scores:a},u)}});kn({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=gn(e,"boxes","nonMaxSuppression"),i=gn(t,"scores","nonMaxSuppression"),u=yi(a,i,n,r,s,o),c={boxes:a,scores:i},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma},d=ln.runKernel("NonMaxSuppressionV5",c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});kn({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=gn(e,"boxes","nonMaxSuppression"),i=gn(t,"scores","nonMaxSuppression"),u=yi(a,i,n,r,s,null),c={boxes:a,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:o},d=ln.runKernel("NonMaxSuppressionV4",c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});kn({resizeBilinear_:function(e,t,n=!1,r=!1){const s=gn(e,"images","resizeBilinear");k(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),k(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),k(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let o=s,a=!1;3===s.rank&&(a=!0,o=No(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=ln.runKernel("ResizeBilinear",i,u);return a?No(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});kn({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=gn(e,"images","resizeNearestNeighbor");k(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),k(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),k("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),k(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let o=s,a=!1;3===s.rank&&(a=!0,o=No(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=ln.runKernel("ResizeNearestNeighbor",i,u);return a?No(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ki=kn({bincount_:function(e,t,n){const r=gn(e,"x","bincount"),s=gn(t,"weights","bincount");k("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),k(n>=0,(()=>`size must be non-negative, but got ${n}.`)),k(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const o={x:r,weights:s},a={size:n};return ln.runKernel("Bincount",o,a)}});const bi=kn({lessEqual_:function(e,t){let n=gn(e,"a","lessEqual","string_or_numeric"),r=gn(t,"b","lessEqual","string_or_numeric");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("LessEqual",s)}});const wi=kn({greater_:function(e,t){let n=gn(e,"a","greater","string_or_numeric"),r=gn(t,"b","greater","string_or_numeric");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("Greater",s)}});const Ei=kn({add_:function(e,t){let n=gn(e,"a","add"),r=gn(t,"b","add");[n,r]=nn(n,r);const s={a:n,b:r};return ln.runKernel("Add",s)}});const Ii=kn({floorDiv_:function(e,t){let n=gn(e,"a","floorDiv"),r=gn(t,"b","floorDiv");[n,r]=nn(n,r);const s={a:n,b:r};return ln.runKernel("FloorDiv",s)}});const xi=kn({div_:function(e,t){let n=gn(e,"a","div"),r=gn(t,"b","div");if([n,r]=nn(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ii(n,r);const s={a:n,b:r};return ln.runKernel("RealDiv",s,{})}});const Si=kn({sub_:function(e,t){let n=gn(e,"a","sub"),r=gn(t,"b","sub");[n,r]=nn(n,r);const s={a:n,b:r};return ln.runKernel("Sub",s)}});const vi=kn({round_:function(e){const t={x:gn(e,"x","round")};return ln.runKernel("Round",t)}});const Ti=kn({broadcastTo_:function(e,t){let n=gn(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=No(n,e)}const s=n.shape,o=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])o[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===o.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return is(n);const a={x:n},i={reps:o};return ln.runKernel("Tile",a,i)}});const Ni=kn({where_:function(e,t,n){const r=gn(t,"a","where"),s=gn(n,"b","where"),o=gn(e,"condition","where","bool"),a=bs(bs(o.shape,r.shape),s.shape),i={condition:Ti(o,a),t:Ti(r,a),e:Ti(s,a)};return ln.runKernel("Select",i)}});function Ai(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ln.runKernel("Range",{},s)}kn({threshold_:function(e,t="binary",n=!1,r=.5){const s=gn(e,"image","threshold"),o=s.shape[0]*s.shape[1];let a,i,u,c,l=xo(li([r]),255);if(k(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),k(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),k("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),k("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[a,i,u]=ni(s,[1,1,1],-1);const e=xo(a,.2989),t=xo(i,.587),n=xo(u,.114);c=Ei(Ei(e,t),n)}else c=e;if("otsu"===t){l=function(e,t){let n,r,s,o,a,i,u=li([-1]),c=li([0]),l=li([0]);for(let d=0;d<e.size-1;d++){n=ti(e,0,d+1),r=ti(e,d+1),a=xi(Mo(n),t),i=xi(Mo(r),t);const h=Mo(xo(n,Ai(0,n.size)));s=xi(h,Mo(n));const p=pi(r.shape,n.size),f=Ei(Ai(0,r.size),p),m=xo(r,f);o=xi(Mo(m),Mo(r));const g=Si(s,o),y=Si(s,o),k=xo(a,i);l=xo(xo(k,g),y);const b=wi(l,c);c=Ni(b,l,c),u=Ni(b,li([d]),u)}return u}(ki(as(vi(c),"int32"),En([]),256),o)}const d=n?bi(c,l):wi(c,l);return as(xo(d,255),"int32")}});kn({transform_:function(e,t,n="nearest",r="constant",s=0,o){const a=gn(e,"image","transform","float32"),i=gn(t,"transforms","transform","float32");k(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),k(2===i.rank&&(i.shape[0]===a.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),k(null==o||2===o.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`));const u={image:a,transforms:i},c={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return ln.runKernel("Transform",u,c)}});const Ri=kn({greaterEqual_:function(e,t){let n=gn(e,"a","greaterEqual","string_or_numeric"),r=gn(t,"b","greaterEqual","string_or_numeric");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("GreaterEqual",s)}});const Mi=kn({logicalAnd_:function(e,t){const n=gn(e,"a","logicalAnd","bool"),r=gn(t,"b","logicalAnd","bool");bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("LogicalAnd",s)}});const _i=kn({stack_:function(e,t=0){const n=yn(e,"tensors","stack","string_or_numeric");k(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&k(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return ln.runKernel("Pack",r,s)}});const Fi=kn({unstack_:function(e,t=0){const n=gn(e,"x","unstack","string_or_numeric");k(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return ln.runKernel("Unpack",r,s)}});kn({bandPart_:function(e,t,n){k(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),k(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=gn(e,"a","bandPart");k(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[o,a]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=o),n<0&&(n=a);const i=No(Ai(0,o,1,"int32"),[-1,1]),u=Ai(0,a,1,"int32"),c=Si(i,u),l=Mi(bi(c,ci(+t,"int32")),Ri(c,ci(-n,"int32"))),d=ri([o,a],r.dtype);return No(_i(Fi(No(r,[-1,o,a])).map((e=>Ni(l,e,d)))),s)}});const Oi=kn({abs_:function(e){const t=gn(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ln.runKernel("ComplexAbs",e)}{const e={x:t};return ln.runKernel("Abs",e)}}});const Di=kn({max_:function(e,t=null,n=!1){const r={x:gn(e,"x","max")},s={reductionIndices:t,keepDims:n};return ln.runKernel("Max",r,s)}});const Ci=kn({min_:function(e,t=null,n=!1){const r={x:gn(e,"x","min")},s={axis:t,keepDims:n};return ln.runKernel("Min",r,s)}});const Bi=kn({pow_:function(e,t){let n=gn(e,"base","pow"),r=gn(t,"exp","pow");[n,r]=nn(n,r);const s={a:n,b:r};return ln.runKernel("Pow",s)}});const Ui=kn({sqrt_:function(e){const t={x:gn(e,"x","sqrt","float32")};return ln.runKernel("Sqrt",t)}});const $i=kn({square_:function(e){const t=gn(e,"x","square");return ln.runKernel("Square",{x:t},{})}});function Pi(e,t,n=null){if(0===e.rank)return Oi(e);if(1!==e.rank&&null===n)return Pi(No(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Mo(Oi(e),n);if(t===1/0)return Di(Oi(e),n);if(t===-1/0)return Ci(Oi(e),n);if("euclidean"===t||2===t)return Ui(Mo(Bi(Oi(e),ci(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Di(Mo(Oi(e),n[0]),n[1]-1);if(t===1/0)return Di(Mo(Oi(e),n[1]),n[0]);if(t===-1/0)return Ci(Mo(Oi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ui(Mo($i(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Li=kn({norm_:function(e,t="euclidean",n=null,r=!1){const s=Pi(e=gn(e,"x","norm"),t,n);let o=s.shape;if(r){const t=F(n,e.shape);o=Zs(s.shape,t)}return No(s,o)}});const zi=kn({squeeze_:function(e,t){const n=gn(e,"x","squeeze","string_or_numeric");return No(n,O(n.shape,t).newShape)}});kn({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,k(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)k(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=ni(e,e.shape[0],0).map((e=>zi(e,[0])));k(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ln.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=xo(Mo(xo(n[r],e)),n[r]);e=Si(e,t)}return xi(e,Li(e,"euclidean"))})));return t?_i(n,0):n}});function Wi(){return ln}function Hi(e,t){return ln.tidy(e,t)}zt=function(e){ae().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const qi=kn({expandDims_:function(e,t=0){const n=gn(e,"x","expandDims","string_or_numeric");k(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return ln.runKernel("ExpandDims",r,s)}});const Ki=kn({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=os([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)s.set(1,e,e);const a=No(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return gi(qi(a,0),[n[0],1,1]);if(2===n.length)return gi(qi(qi(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return gi(qi(qi(qi(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Gi=kn({matMul_:function(e,t,n=!1,r=!1){let s=gn(e,"a","matMul"),o=gn(t,"b","matMul");[s,o]=nn(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return ln.runKernel("BatchMatMul",a,i)}});const ji=kn({neg_:function(e){const t={x:gn(e,"x","neg")};return ln.runKernel("Neg",t)}});const Vi=kn({transpose_:function(e,t,n){const r=gn(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),k(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{k(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},o={perm:t};return"complex64"===r.dtype?Hi((()=>{let e=ei(r),t=Qa(r);return e=ln.runKernel("Transpose",{x:e},o),t=ln.runKernel("Transpose",{x:t},o),n&&(t=ji(t)),bn(e,t)})):ln.runKernel("Transpose",s,o)}});function Yi(e,t=!1){return ln.tidy((()=>{k(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ki(n),o=is(e);const a=fi([[1]],[1,1]);let i=is(a);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=o,u=i,c=s;[i,o,s]=ln.tidy((()=>{const t=ti(o,[e,e],[n-e,1]),u=Li(t),c=ti(o,[e,e],[1,1]),l=Ni(wi(c,0),fi([[-1]]),fi([[1]])),d=Si(c,xo(l,u)),h=xi(t,d);i=1===h.shape[0]?is(a):Ja([a,ti(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=ji(xi(Gi(l,d),u)),f=ti(o,[e,0],[n-e,r]),m=xo(p,i),g=Vi(i);if(0===e)o=Si(f,Gi(m,Gi(g,f)));else{const t=Si(f,Gi(m,Gi(g,f)));o=Ja([ti(o,[0,0],[e,r]),t],0)}const y=Vi(m),k=ti(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Si(k,Gi(Gi(k,i),y));else{const t=Si(k,Gi(Gi(k,i),y));s=Ja([ti(s,[0,0],[n,e]),t],1)}return[i,o,s]})),rn([t,u,c]).forEach((e=>e.dispose()))}return!t&&n>r&&(s=ti(s,[0,0],[n,r]),o=ti(o,[0,0],[r,r])),[s,o]}))}kn({qr_:function(e,t=!1){if(k(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Yi(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Fi(No(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],o=[];r.forEach((e=>{const[n,r]=Yi(e,t);s.push(n),o.push(r)}));return[No(_i(s,0),e.shape),No(_i(o,0),e.shape)]}}});var Zi,Xi;(Xi=Zi||(Zi={}))[Xi.NONE=0]="NONE",Xi[Xi.MEAN=1]="MEAN",Xi[Xi.SUM=2]="SUM",Xi[Xi.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";const Ji=kn({mean_:function(e,t=null,n=!1){const r={x:gn(e,"x","mean")},s={axis:t,keepDims:n};return ln.runKernel("Mean",r,s)}});const Qi=kn({notEqual_:function(e,t){let n=gn(e,"a","notEqual","string_or_numeric"),r=gn(t,"b","notEqual","string_or_numeric");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("NotEqual",s)}});function eu(e,t="float32"){if("complex64"===t){const t=eu(e,"float32"),n=ri(e,"float32");return bn(t,n)}const n=X(I(e),t);return ln.makeTensor(n,e,t)}const tu=kn({computeWeightedLoss_:function(e,t,n=Zi.SUM_BY_NONZERO_WEIGHTS){const r=gn(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=gn(t,"weights","computeWeightedLoss"));const o=null==s?r:xo(r,s);if(n===Zi.NONE)return o;if(n===Zi.SUM)return Mo(o);if(n===Zi.MEAN){if(null==s)return Ji(o);{const e=r.size/s.size,t=xi(Mo(o),Mo(s));return e>1?xi(t,ci(e)):t}}if(n===Zi.SUM_BY_NONZERO_WEIGHTS){if(null==s)return xi(Mo(o),ci(r.size));{const e=xo(s,eu(r.shape)),t=as(Mo(Qi(e,ci(0))),"float32");return xi(Mo(o),t)}}throw Error(`Unknown reduction: ${n}`)}});kn({absoluteDifference_:function(e,t,n,r=Zi.SUM_BY_NONZERO_WEIGHTS){const s=gn(e,"labels","absoluteDifference"),o=gn(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=gn(n,"weights","absoluteDifference")),b(s.shape,o.shape,"Error in absoluteDifference: ");const i=Oi(Si(s,o));return tu(i,a,r)}});kn({cosineDistance_:function(e,t,n,r,s=Zi.SUM_BY_NONZERO_WEIGHTS){const o=gn(e,"labels","cosineDistance"),a=gn(t,"predictions","cosineDistance");let i=null;null!=r&&(i=gn(r,"weights","cosineDistance")),b(o.shape,a.shape,"Error in cosineDistance: ");const u=ci(1),c=Si(u,Mo(xo(o,a),n,!0));return tu(c,i,s)}});kn({hingeLoss_:function(e,t,n,r=Zi.SUM_BY_NONZERO_WEIGHTS){let s=gn(e,"labels","hingeLoss");const o=gn(t,"predictions","hingeLoss");let a=null;null!=n&&(a=gn(n,"weights","hingeLoss")),b(s.shape,o.shape,"Error in hingeLoss: ");const i=ci(1);s=Si(xo(ci(2),s),i);const u=vo(Si(i,xo(s,o)));return tu(u,a,r)}});const nu=kn({minimum_:function(e,t){let n=gn(e,"a","minimum"),r=gn(t,"b","minimum");[n,r]=nn(n,r),"bool"===n.dtype&&(n=as(n,"int32"),r=as(r,"int32")),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("Minimum",s)}});kn({huberLoss_:function(e,t,n,r=1,s=Zi.SUM_BY_NONZERO_WEIGHTS){const o=gn(e,"labels","huberLoss"),a=gn(t,"predictions","huberLoss");let i=null;null!=n&&(i=gn(n,"weights","huberLoss")),b(o.shape,a.shape,"Error in huberLoss: ");const u=ci(r),c=Oi(Si(a,o)),l=nu(c,u),d=Si(c,l),h=Ei(xo(ci(.5),$i(l)),xo(u,d));return tu(h,i,s)}});const ru=kn({log_:function(e){const t={x:gn(e,"x","log","float32")};return ln.runKernel("Log",t)}});kn({logLoss_:function(e,t,n,r=1e-7,s=Zi.SUM_BY_NONZERO_WEIGHTS){const o=gn(e,"labels","logLoss"),a=gn(t,"predictions","logLoss");let i=null;null!=n&&(i=gn(n,"weights","logLoss")),b(o.shape,a.shape,"Error in logLoss: ");const u=ci(1),c=ci(r),l=ji(xo(o,ru(Ei(a,c)))),d=xo(Si(u,o),ru(Ei(Si(u,a),c))),h=Si(l,d);return tu(h,i,s)}});const su=kn({squaredDifference_:function(e,t){let n=gn(e,"a","squaredDifference"),r=gn(t,"b","squaredDifference");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("SquaredDifference",s,{})}});kn({meanSquaredError_:function(e,t,n,r=Zi.SUM_BY_NONZERO_WEIGHTS){const s=gn(e,"labels","meanSquaredError"),o=gn(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=gn(n,"weights","meanSquaredError")),b(s.shape,o.shape,"Error in meanSquaredError: ");const i=su(s,o);return tu(i,a,r)}});const ou=kn({exp_:function(e){const t={x:gn(e,"x","exp")};return ln.runKernel("Exp",t)}});const au=kn({log1p_:function(e){const t={x:gn(e,"x","log1p")};return ln.runKernel("Log1p",t)}});kn({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Zi.SUM_BY_NONZERO_WEIGHTS){let o=gn(e,"multiClassLabels","sigmoidCrossEntropy");const a=gn(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=gn(n,"weights","sigmoidCrossEntropy")),b(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ci(r),t=ci(1),n=ci(.5);o=Ei(xo(o,Si(t,e)),xo(n,e))}const u=function(e,t){const n=gn(e,"labels","sigmoidCrossEntropyWithLogits"),r=gn(t,"logits","sigmoidCrossEntropyWithLogits");b(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=vo(r),o=xo(r,n),a=au(ou(ji(Oi(r))));return Ei(Si(s,o),a)}(o,a);return tu(u,i,s)}});function iu(e){return ln.customGrad(e)}const uu=kn({logSumExp_:function(e,t=null,n=!1){const r=gn(e,"x","logSumExp"),s=F(t,r.shape),o=Di(r,s,!0),a=Si(r,o),i=ou(a),u=Mo(i,s),c=ru(u),l=Ei(No(o,c.shape),c);if(n){const e=Zs(l.shape,s);return No(l,e)}return l}});kn({softmaxCrossEntropy_:function(e,t,n,r=0,s=Zi.SUM_BY_NONZERO_WEIGHTS){let o=gn(e,"onehotLabels","softmaxCrossEntropy");const a=gn(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=gn(n,"weights","softmaxCrossEntropy")),b(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ci(r),t=ci(1),n=ci(o.shape[1]);o=Ei(xo(o,Si(t,e)),xi(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=iu(((e,t,r)=>{const s=uu(t,[n],!0),o=Si(as(t,"float32"),s);r([e,o]);const a=ji(xo(o,e));return{value:Mo(a,[n]),gradFunc:(e,t)=>{const[r,s]=t,o=Zs(e.shape,[n]);return[xo(No(e,o),Si(as(r,"float32"),ou(s))),xo(No(e,o),Si(ou(s),as(r,"float32")))]}}}));return r(e,t)}(o,a);return tu(u,i,s)}});kn({sparseFillEmptyRows_:function(e,t,n,r){const s=gn(e,"indices","sparseFillEmptyRows","int32"),o=gn(t,"values","sparseFillEmptyRows"),a=gn(n,"denseShape","sparseFillEmptyRows","int32"),i=gn(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==o.rank)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},c=ln.runKernel("SparseFillEmptyRows",u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}});kn({sparseReshape_:function(e,t,n){const r=gn(e,"inputIndices","sparseReshape","int32"),s=gn(t,"inputShape","sparseReshape","int32"),o=gn(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=ln.runKernel("SparseReshape",a);return{outputIndices:i[0],outputShape:i[1]}}});kn({sparseSegmentMean_:function(e,t,n){const r=gn(e,"data","sparseSegmentMean"),s=gn(t,"indices","sparseSegmentMean","int32"),o=gn(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return ln.runKernel("SparseSegmentMean",a)}});kn({sparseSegmentSum_:function(e,t,n){const r=gn(e,"data","sparseSegmentSum"),s=gn(t,"indices","sparseSegmentSum","int32"),o=gn(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return ln.runKernel("SparseSegmentSum",a)}});kn({stringNGrams_:function(e,t,n,r,s,o,a,i){const u=gn(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=gn(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const l={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:u,dataSplits:c},h=ln.runKernel("StringNGrams",d,l);return{nGrams:h[0],nGramsSplits:h[1]}}});kn({stringSplit_:function(e,t,n=!0){const r=gn(e,"input","stringSplit","string"),s=gn(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:n},a={input:r,delimiter:s},i=ln.runKernel("StringSplit",a,o);return{indices:i[0],values:i[1],shape:i[2]}}});kn({stringToHashBucketFast_:function(e,t){const n=gn(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ln.runKernel("StringToHashBucketFast",s,r)}});const cu=kn({acos_:function(e){const t={x:gn(e,"x","acos")};return ln.runKernel("Acos",t)}});const lu=kn({acosh_:function(e){const t={x:gn(e,"x","acosh")};return ln.runKernel("Acosh",t)}});const du=kn({all_:function(e,t=null,n=!1){const r={x:gn(e,"x","all","bool")},s={axis:t,keepDims:n};return ln.runKernel("All",r,s)}});const hu=kn({any_:function(e,t=null,n=!1){const r={x:gn(e,"x","any","bool")},s={axis:t,keepDims:n};return ln.runKernel("Any",r,s)}});const pu=kn({argMax_:function(e,t=0){const n={x:gn(e,"x","argMax")},r={axis:t};return ln.runKernel("ArgMax",n,r)}});const fu=kn({argMin_:function(e,t=0){const n={x:gn(e,"x","argMin")},r={axis:t};return ln.runKernel("ArgMin",n,r)}});const mu=kn({asin_:function(e){const t={x:gn(e,"x","asin")};return ln.runKernel("Asin",t)}});const gu=kn({asinh_:function(e){const t={x:gn(e,"x","asinh")};return ln.runKernel("Asinh",t)}});const yu=kn({atan_:function(e){const t={x:gn(e,"x","atan")};return ln.runKernel("Atan",t)}});const ku=kn({atanh_:function(e){const t={x:gn(e,"x","atanh")};return ln.runKernel("Atanh",t)}});const bu=kn({ceil_:function(e){const t={x:gn(e,"x","ceil","float32")};return ln.runKernel("Ceil",t)}});const wu=kn({clipByValue_:function(e,t,n){const r=gn(e,"x","clipByValue");k(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},o={clipValueMin:t,clipValueMax:n};return ln.runKernel("ClipByValue",s,o)}});const Eu=kn({cos_:function(e){const t={x:gn(e,"x","cos","float32")};return ln.runKernel("Cos",t)}});const Iu=kn({cosh_:function(e){const t={x:gn(e,"x","cosh","float32")};return ln.runKernel("Cosh",t)}});const xu=kn({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:gn(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:r};return ln.runKernel("Cumprod",s,o)}});const Su=kn({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:gn(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return ln.runKernel("Cumsum",s,o)}});const vu=kn({diag_:function(e){const t={x:gn(e,"x","diag")};return ln.runKernel("Diag",t)}});const Tu=kn({equal_:function(e,t){let n=gn(e,"a","equal","string_or_numeric"),r=gn(t,"b","equal","string_or_numeric");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("Equal",s)}});const Nu=kn({divNoNan_:function(e,t){let n=gn(e,"a","div"),r=gn(t,"b","div");[n,r]=nn(n,r);const s=xi(n,r),o=si(s),a=Tu(r,o);return Ni(a,o,s)}});const Au=kn({dot_:function(e,t){const n=gn(e,"t1","dot"),r=gn(t,"t2","dot");k(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(k(s===o,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`)),1===n.rank&&1===r.rank){const e=No(n,[1,-1]),t=No(r,[-1,1]),s=Gi(e,t);return No(s,[])}if(1===n.rank&&2===r.rank){const e=No(n,[1,-1]),t=No(r,[r.shape[0],r.shape[1]]),s=Gi(e,t);return No(s,[s.size])}if(2===n.rank&&1===r.rank){const e=No(r,[-1,1]),t=Gi(n,e);return No(t,[t.size])}{const e=No(r,[r.shape[0],r.shape[1]]);return Gi(n,e)}}});const Ru=kn({erf_:function(e){let t=gn(e,"x","erf");k("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=as(t,"float32"));const n={x:t};return ln.runKernel("Erf",n)}});const Mu=kn({euclideanNorm_:function(e,t=null,n=!1){return Li(e,"euclidean",t,n)}});const _u=kn({expm1_:function(e){const t={x:gn(e,"x","expm1")};return ln.runKernel("Expm1",t)}});const Fu=kn({floor_:function(e){const t={x:gn(e,"x","floor","float32")};return ln.runKernel("Floor",t)}});const Ou=kn({gather_:function(e,t,n=0,r=0){const s={x:gn(e,"x","gather"),indices:gn(t,"indices","gather","int32")},o={axis:n,batchDims:r};return ln.runKernel("GatherV2",s,o)}});const Du=kn({isFinite_:function(e){const t={x:gn(e,"x","isFinite")};return ln.runKernel("IsFinite",t)}});const Cu=kn({isInf_:function(e){const t={x:gn(e,"x","isInf")};return ln.runKernel("IsInf",t)}});const Bu=kn({isNaN_:function(e){const t={x:gn(e,"x","isNaN")};return ln.runKernel("IsNan",t)}});const Uu=kn({less_:function(e,t){let n=gn(e,"a","less","string_or_numeric"),r=gn(t,"b","less","string_or_numeric");[n,r]=nn(n,r),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("Less",s)}});const $u=kn({softplus_:function(e){const t={x:gn(e,"x","softplus")};return ln.runKernel("Softplus",t)}});const Pu=kn({logSigmoid_:function(e){const t=gn(e,"x","logSigmoid"),n=iu((e=>({value:ji($u(ji(e))),gradFunc:t=>xo(t,Ao(ji(e)))})));return n(t)}});const Lu=kn({logSoftmax_:function(e,t=-1){const n=gn(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=iu(((e,n)=>{const r=Di(e,t,!0),s=Si(e,r),o=Si(as(s,"float32"),ru(Mo(ou(s),t,!0)));n([o]);return{value:o,gradFunc:(e,n)=>{const[r]=n,s=ou(r);return Si(e,xo(Mo(e,t,!0),s))}}}));return r(n)}});const zu=kn({logicalNot_:function(e){const t={x:gn(e,"x","logicalNot","bool")};return ln.runKernel("LogicalNot",t)}});const Wu=kn({logicalOr_:function(e,t){const n=gn(e,"a","logicalOr","bool"),r=gn(t,"b","logicalOr","bool");bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("LogicalOr",s)}});const Hu=kn({logicalXor_:function(e,t){const n=gn(e,"a","logicalXor","bool"),r=gn(t,"b","logicalXor","bool");return bs(n.shape,r.shape),Mi(Wu(e,t),zu(Mi(e,t)))}});const qu=kn({maximum_:function(e,t){let n=gn(e,"a","maximum"),r=gn(t,"b","maximum");[n,r]=nn(n,r),"bool"===n.dtype&&(n=as(n,"int32"),r=as(r,"int32")),bs(n.shape,r.shape);const s={a:n,b:r};return ln.runKernel("Maximum",s)}});const Ku=kn({mod_:function(e,t){let n=gn(e,"a","mod"),r=gn(t,"b","mod");[n,r]=nn(n,r);const s={a:n,b:r};return ln.runKernel("Mod",s)}});const Gu=kn({multinomial_:function(e,t,n,r=!1){const s=gn(e,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const i={logits:1===a?No(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},c=ln.runKernel("Multinomial",i,u);return 1===a?No(c,[c.size]):c}});const ju=kn({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:gn(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return ln.runKernel("OneHot",s,o)}});const Vu=kn({onesLike_:function(e){const t={x:gn(e,"x","onesLike")};return ln.runKernel("OnesLike",t)}});const Yu=kn({outerProduct_:function(e,t){const n=gn(e,"v1","outerProduct"),r=gn(t,"v2","outerProduct");k(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=No(n,[-1,1]),o=No(r,[1,-1]);return Gi(s,o)}});const Zu=kn({prod_:function(e,t=null,n=!1){let r=gn(e,"x","prod");"bool"===r.dtype&&(r=as(r,"int32"));const s={x:r},o={axis:t,keepDims:n};return ln.runKernel("Prod",s,o)}});const Xu=kn({reciprocal_:function(e){const t={x:gn(e,"x","reciprocal")};return ln.runKernel("Reciprocal",t)}});const Ju=kn({rsqrt_:function(e){const t={x:gn(e,"x","rsqrt","float32")};return ln.runKernel("Rsqrt",t)}});const Qu=kn({selu_:function(e){const t={x:gn(e,"x","selu")};return ln.runKernel("Selu",t)}});const ec=kn({sign_:function(e){const t={x:gn(e,"x","sign")};return ln.runKernel("Sign",t)}});const tc=kn({sin_:function(e){const t={x:gn(e,"x","sin","float32")};return ln.runKernel("Sin",t)}});const nc=kn({tan_:function(e){const t={x:gn(e,"x","tan","float32")};return ln.runKernel("Tan",t)}});const rc=kn({tanh_:function(e){const t={x:gn(e,"x","tanh","float32")};return ln.runKernel("Tanh",t)}});function sc(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Be.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function oc(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;if(sc(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(a.dataId).values,c=Be.sizeFromShape(a.shape),l=n||a.dtype,d=Be.getArrayFromDType(l,c);for(let e=0;e<c;++e)d[e]=t(u[e],s);return i.makeTensorInfo(a.shape,l,d)}}function ac(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;if(sc(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=o,u=i.data.get(a.dataId).values,c=n||a.dtype,l=t(u,c,s);return i.makeTensorInfo(a.shape,c,l)}}const ic=oc("Elu",(e=>e>=0?e:Math.exp(e)-1)),uc={kernelName:"Elu",backendName:"cpu",kernelFunc:ic};function cc(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const lc={kernelName:"Identity",backendName:"cpu",kernelFunc:cc};function dc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:o}=r;sc([s],"leakyRelu");const a=Be.sizeFromShape(s.shape),i=n.data.get(s.dataId).values,u=Be.getTypedArrayFromDType("float32",a);for(let e=0;e<i.length;e++)u[e]=i[e]<0?o*i[e]:i[e];return n.makeTensorInfo(s.shape,"float32",u)}const hc={kernelName:"LeakyRelu",backendName:"cpu",kernelFunc:dc};function pc(e){return(t,n,r,s,o)=>{const a=$s.assertAndGetBroadcastShape(t,n),i=a.length,u=Be.computeStrides(a),c=Be.sizeFromShape(a),l=Be.getTypedArrayFromDType(o,c),d=t.length,h=n.length,p=Be.computeStrides(t),f=Be.computeStrides(n),m=$s.getBroadcastDims(t,a),g=$s.getBroadcastDims(n,a);if(m.length+g.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=Be.indexToLoc(t,i,u),o=n.slice(-d);m.forEach((e=>o[e]=0));const a=Be.locToIndex(o,d,p),c=n.slice(-h);g.forEach((e=>c[e]=0));const y=Be.locToIndex(c,h,f);l[t]=e(r[a],s[y])}return[l,a]}}const fc=pc(((e,t)=>e<0?t*e:e));function mc(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;sc([r,s],"prelu");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[i,u]=fc(r.shape,s.shape,o,a,"float32");return n.makeTensorInfo(u,"float32",i)}const gc={kernelName:"Prelu",backendName:"cpu",kernelFunc:mc},yc=oc("Relu",(e=>Math.max(0,e))),kc={kernelName:"Relu",backendName:"cpu",kernelFunc:yc},bc=oc("Relu6",(e=>Math.min(Math.max(0,e),6))),wc={kernelName:"Relu6",backendName:"cpu",kernelFunc:bc};function Ec(e){return(t,n,r)=>{const s=Be.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}Ec((e=>1/(1+Math.exp(-e))));const Ic=oc("Sigmoid",(e=>1/(1+Math.exp(-e)))),xc={kernelName:"Sigmoid",backendName:"cpu",kernelFunc:Ic};function Sc(e,t,n,r,s){if("linear"===n)return cc({inputs:{x:t},backend:e});if("relu"===n)return yc({inputs:{x:t},backend:e});if("elu"===n)return ic({inputs:{x:t},backend:e});if("relu6"===n)return bc({inputs:{x:t},backend:e});if("prelu"===n)return mc({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return dc({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return Ic({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function vc(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(s.shape,"float32",a)},i}const Tc={kernelName:"Complex",backendName:"cpu",kernelFunc:vc};function Nc(e,t,n="float32"){if("complex64"===n){return vc({inputs:{real:Nc(e,t,"float32"),imag:Nc(e,t,"float32")},backend:e})}const r=Be.makeZerosTypedArray(Be.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Ac(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const Rc={kernelName:"Real",backendName:"cpu",kernelFunc:Ac};function Mc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return cc({inputs:{x:s},backend:n});const e=Nc(n,s.shape,s.dtype),t=Mc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=vc({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=Ac({inputs:{input:s},backend:n}),t=Mc({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!Be.hasEncodingLoss(s.dtype,o)){const e=cc({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===o){const e=n.data.get(s.dataId).values,t=Be.toTypedArray([0],s.dtype),[r,o]=pc(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const _c={kernelName:"Cast",backendName:"cpu",kernelFunc:Mc};function Fc(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:a}=n,i=s;sc([o,a],e);const u=i.data.get(o.dataId).values,c=i.data.get(a.dataId).values,l="string"===o.dtype?$s.fromUint8ToStringArray(u):u,d="string"===o.dtype?$s.fromUint8ToStringArray(c):c,h=r||o.dtype,[p,f]=t(o.shape,a.shape,l,d,h);return i.makeTensorInfo(f,h,p)}:({inputs:e,backend:s})=>{const{a:o,b:a}=e,i=s;if("complex64"===o.dtype||"complex64"===a.dtype){const e=Mc({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,c=i.data.get(s.dataId).values,l=Mc({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=i.data.get(h.dataId).values,m=i.data.get(p.dataId).values,[g,y,k]=n(o.shape,a.shape,u,c,f,m),b=i.makeTensorInfo(k,"float32",g),w=i.makeTensorInfo(k,"float32",y),E=vc({inputs:{real:b,imag:w},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(l),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(w),E}{const e=i.data.get(o.dataId).values,n=i.data.get(a.dataId).values,s=r||o.dtype,[u,c]=t(o.shape,a.shape,e,n,s);return i.makeTensorInfo(c,s,u)}}}function Oc(e){return(t,n,r,s,o,a)=>{const i=$s.assertAndGetBroadcastShape(t,n),u=Be.sizeFromShape(i),c=i.length,l=Be.computeStrides(i),d=Be.getTypedArrayFromDType("float32",u),h=Be.getTypedArrayFromDType("float32",u),p=$s.getBroadcastDims(t,i),f=$s.getBroadcastDims(n,i),m=$s.mergeRealAndImagArrays(r,s),g=$s.mergeRealAndImagArrays(o,a),y=t.length,k=Be.computeStrides(t),b=n.length,w=Be.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=s.real,h[t]=s.imag}else for(let t=0;t<d.length;t++){const n=Be.indexToLoc(t,c,l),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=Be.locToIndex(r,y,k),o=n.slice(-b);f.forEach((e=>o[e]=0));const a=Be.locToIndex(o,b,w),i=e(m[2*s],m[2*s+1],g[2*a],g[2*a+1]);d[t]=i.real,h[t]=i.imag}return[d,h,i]}}const Dc=Fc("Add",pc(((e,t)=>e+t)),Oc(((e,t,n,r)=>({real:e+n,imag:t+r})))),Cc={kernelName:"Add",backendName:"cpu",kernelFunc:Dc};function Bc(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:o}=r,a=Be.sizeFromShape(s.shape),i=Be.inferFromImplicitShape(o,a),u=Be.sizeFromShape(i);Be.assert(a===u,(()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const Uc={kernelName:"Reshape",backendName:"cpu",kernelFunc:Bc};function $c(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o}=t,{transposeA:a,transposeB:i}=r;sc([s,o],"matMul");const u=s.shape.length,c=o.shape.length,l=a?s.shape[u-2]:s.shape[u-1],d=i?o.shape[c-1]:o.shape[c-2],h=a?s.shape[u-1]:s.shape[u-2],p=i?o.shape[c-2]:o.shape[c-1],f=s.shape.slice(0,-2),m=o.shape.slice(0,-2),g=Be.sizeFromShape(f),y=Be.sizeFromShape(m),k=gs.assertAndGetBroadcastShape(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);Be.assert(l===d,(()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`));const b=i?[y,p,d]:[y,d,p],w=Bc({inputs:{x:s},backend:n,attrs:{shape:a?[g,l,h]:[g,h,l]}}),E=Bc({inputs:{x:o},backend:n,attrs:{shape:b}}),I=a?w.shape[1]:w.shape[2],x=a?w.shape[2]:w.shape[1],S=i?E.shape[1]:E.shape[2],v=Math.max(g,y),T=n.data.get(w.dataId).values,N=n.data.get(E.dataId).values,A=Be.computeStrides(w.shape),R=Be.computeStrides(E.shape),[M,_,F]=a?[A[0],1,A[1]]:[A[0],A[1],1],[O,D,C]=i?[1,R[1],R[0]]:[R[1],1,R[0]],B=x*S,U=os([v,x,S],w.dtype),$=U.values,P=n.blockSize;for(let e=0;e<v;e++)for(let t=0;t<x;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<I;r+=P){const s=Math.min(t+P,x),o=Math.min(n+P,S),a=Math.min(r+P,I);for(let i=t;i<s;i++)for(let t=n;t<o;t++){let n=0;for(let s=r;s<a;s++){const r=Math.min(e,g-1)*M,o=Math.min(e,y-1)*C;n+=T[r+i*_+s*F]*N[s*O+t*D+o]}$[e*B+(i*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(E),n.makeTensorInfo(k,U.dtype,U.values)}const Pc={kernelName:"BatchMatMul",backendName:"cpu",kernelFunc:$c};const Lc={kernelName:"_FusedMatMul",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=$c({inputs:{a:s,b:o},attrs:{transposeA:u,transposeB:c},backend:n}),a&&(p=Dc({inputs:{a:h,b:a},backend:n}),m.push(h),h=p),l&&(f=Sc(n,h,l,i,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};const zc={kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;sc(t,"abs");let r=new Float32Array(Be.sizeFromShape(t.shape));return r=function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Wc={kernelName:"Acos",backendName:"cpu",kernelFunc:oc("Acos",(e=>Math.acos(e)))},Hc={kernelName:"Acosh",backendName:"cpu",kernelFunc:oc("Acosh",(e=>Math.acosh(e)))};const qc={kernelName:"AddN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;sc(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),o=os(r[0].shape,r[0].dtype),a=o.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<a.length;e++)a[e]+=t[e]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function Kc(e,t,n,r,s){const o=t.length,a=Be.sizeFromShape(t),i=Be.computeStrides(t),u=Be.computeStrides(s),c=Be.getTypedArrayFromDType(n,Be.sizeFromShape(s));for(let t=0;t<a;++t){const n=Be.indexToLoc(t,o,i),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];c[Be.locToIndex(s,o,u)]=e[t]}return c}function Gc(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:o}=n;sc(s,"transpose");const a=s.shape.length,i=new Array(a);for(let e=0;e<i.length;e++)i[e]=s.shape[o[e]];const u=Kc(r.data.get(s.dataId).values,s.shape,s.dtype,o,i);return{dataId:r.write(u,i,s.dtype),shape:i,dtype:s.dtype}}const jc={kernelName:"Transpose",backendName:"cpu",kernelFunc:Gc};const Vc={kernelName:"All",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;sc(s,"all");const i=Be.parseAxisParam(o,s.shape);let u=i;const c=$s.getAxesPermutation(u,s.shape.length);let l=s;null!=c&&(l=Gc({inputs:{x:s},backend:n,attrs:{perm:c}}),u=$s.getInnerMostAxes(u.length,s.shape.length)),$s.assertAxesAreInnerMostDims("all",u,l.shape.length);const[d,h]=$s.computeOutAndReduceShapes(l.shape,u),p=Be.sizeFromShape(h),f=Be.makeZerosTypedArray(Be.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(d,l.dtype,f);if(a){const e=Bc({inputs:{x:g},backend:n,attrs:{shape:$s.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Yc={kernelName:"Any",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;sc(s,"any");const i=Be.parseAxisParam(o,s.shape);let u=i;const c=$s.getAxesPermutation(u,s.shape.length);let l=s;null!=c&&(l=Gc({inputs:{x:s},backend:n,attrs:{perm:c}}),u=$s.getInnerMostAxes(u.length,s.shape.length)),$s.assertAxesAreInnerMostDims("any",u,l.shape.length);const[d,h]=$s.computeOutAndReduceShapes(l.shape,u),p=Be.sizeFromShape(h),f=Be.makeZerosTypedArray(Be.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(d,l.dtype,f);if(a){const e=Bc({inputs:{x:g},backend:n,attrs:{shape:$s.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Zc={kernelName:"ArgMax",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;sc(s,"argMax");let a=Be.parseAxisParam(o,s.shape);const i=$s.getAxesPermutation(a,s.shape.length);let u=s;const c=[];null!=i&&(u=Gc({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),a=$s.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],$s.assertAxesAreInnerMostDims("argMax",a,u.shape.length);const[l,d]=$s.computeOutAndReduceShapes(u.shape,a),h=Be.sizeFromShape(l),p=Be.makeZerosTypedArray(h,"int32"),f=Be.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const s=m[t+e];s>n&&(n=s,r=e)}p[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",p)}};const Xc={kernelName:"ArgMin",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;sc(s,"argMin");let a=Be.parseAxisParam(o,s.shape);const i=$s.getAxesPermutation(a,s.shape.length);let u=s;const c=[];null!=i&&(u=Gc({inputs:{x:s},backend:n,attrs:{perm:i}}),c.push(u),a=$s.getInnerMostAxes(a.length,u.shape.length)),a=[a[0]],$s.assertAxesAreInnerMostDims("argMin",a,u.shape.length);const[l,d]=$s.computeOutAndReduceShapes(u.shape,a),h=Be.sizeFromShape(l),p=Be.makeZerosTypedArray(h,"int32"),f=Be.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const s=m[t+e];s<n&&(n=s,r=e)}p[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",p)}},Jc={kernelName:"Asin",backendName:"cpu",kernelFunc:oc("Asin",(e=>Math.asin(e)))},Qc={kernelName:"Asinh",backendName:"cpu",kernelFunc:oc("Asinh",(e=>Math.asinh(e)))},el={kernelName:"Atan",backendName:"cpu",kernelFunc:oc("Atan",(e=>Math.atan(e)))},tl={kernelName:"Atan2",backendName:"cpu",kernelFunc:Fc("Atan2",pc(((e,t)=>Math.atan2(e,t))))},nl={kernelName:"Atanh",backendName:"cpu",kernelFunc:oc("Atanh",(e=>Math.atanh(e)))};function rl(e,t,n,r,s,o){const a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,p=s.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=os(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],k=s.outShape[2]*s.outShape[3],b=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*a-h,E=Math.max(0,w),I=Math.min(s.inHeight,l+w),x=n+y*k;for(let n=0;n<s.outWidth;++n){const a=n*i-p,l=Math.max(0,a),h=Math.min(s.inWidth,d+a);let y=f,k=0,w=0;for(let n=E;n<I;n+=u){const s=m+n*r[1];for(let n=l;n<h;n+=c){const a=e[s+n*r[2]+t];"max"===o&&a>y?y=a:"avg"===o&&(k+=a,w++)}if(isNaN(y))break}g[x+n*b+t]="avg"===o?k/w:y}}}return m}function sl(e,t,n,r,s=!1,o=!1){const a=os(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=os(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*i-p;let y=g;for(;y<0;)y+=c;const k=Math.min(r.inHeight,d+g);for(let i=0;i<r.outWidth;++i){const d=i*u-f;let p=d;for(;p<0;)p+=l;const b=Math.min(r.inWidth,h+d);let w=Number.NEGATIVE_INFINITY,E=-1;for(let n=y;n<k;n+=c){const a=n-g;for(let i=p;i<b;i+=l){const u=i-d,c=m.get(e,n,i,t);c>w&&(w=c,E=s?o?((e*r.inHeight+n)*r.inWidth+i)*r.inChannels+t:(n*r.inWidth+i)*r.inChannels+t:a*h+u)}}a.set(E,e,n,i,t)}}return a}function ol(e,t,n,r,s,o){const a=s.strideDepth,i=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,l=s.dilationHeight,d=s.dilationWidth,h=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,k="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=os(s.outShape,n),w=b.values,E=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[2]*s.outShape[3]*s.outShape[4],x=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*E,b=t*r[0];for(let t=0;t<s.inChannels;++t)for(let E=0;E<s.outDepth;++E){const v=E*a-m;let T=v;for(;T<0;)T+=c;const N=Math.min(s.inDepth,h+v),A=n+E*I;for(let n=0;n<s.outHeight;++n){const a=n*i-g;let h=a;for(;h<0;)h+=l;const m=Math.min(s.inHeight,p+a),E=A+n*x;for(let n=0;n<s.outWidth;++n){const a=n*u-y;let i=a;for(;i<0;)i+=d;const p=Math.min(s.inWidth,f+a),g=E+n*S;let I=k,x=0,v=0;for(let n=T;n<N;n+=c){const s=b+n*r[1];for(let n=h;n<m;n+=l){const a=s+n*r[2];for(let n=i;n<p;n+=d){const s=e[a+n*r[3]+t];if("max"===o&&s>I?I=s:"avg"===o&&(x+=s,v++),isNaN(I))break}if(isNaN(I))break}if(isNaN(I))break}w[g+t]="avg"===o?x/v:I}}}}return b}function al(e,t){const n=os(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,o=t.strideWidth,a=t.dilationDepth,i=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const k=y*r-h;let b=k;for(;b<0;)b+=a;const w=Math.min(t.inDepth,c+k);for(let r=0;r<t.outHeight;++r){const c=r*s-p;let h=c;for(;h<0;)h+=i;const E=Math.min(t.inHeight,l+c);for(let s=0;s<t.outWidth;++s){const p=s*o-f;let I=p;for(;I<0;)I+=u;const x=Math.min(t.inWidth,d+p);let S=Number.NEGATIVE_INFINITY,v=-1;for(let t=b;t<w;t+=a){const n=t-k;for(let r=h;r<E;r+=i){const s=r-c;for(let o=I;o<x;o+=u){const a=o-p,i=e.get(m,t,r,o,g);i>=S&&(S=i,v=n*l*d+s*l+a)}}}n.set(v,m,y,r,s,g)}}}return n}const il={kernelName:"AvgPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;sc(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r;Be.assert($s.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const c=$s.computePool2DInfo(s.shape,o,a,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&Be.arraysEqual(c.inShape,c.outShape))l=cc({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Be.computeStrides(s.shape),r=rl(e,s.shape,s.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return l}};const ul={kernelName:"AvgPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r;sc(s,"avgPool3d");const l=$s.computePool3DInfo(s.shape,o,a,1,i,u,c),d=ol(n.data.get(s.dataId).values,s.shape,s.dtype,Be.computeStrides(s.shape),l,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const cl={kernelName:"AvgPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=r;sc([s,o],"avgPool3DGrad");const l=$s.computePool3DInfo(o.shape,a,i,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,k=l.dilationHeight,b=l.dilationWidth,w=l.effectiveFilterDepth,E=l.effectiveFilterHeight,I=l.effectiveFilterWidth,x=w-1-l.padInfo.front,S=I-1-l.padInfo.left,v=E-1-l.padInfo.top,T=os(o.shape,"float32"),N=1/(f*m*g),A=n.bufferSync(s);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let s=0;s<l.inWidth;++s){const o=n-x,a=r-v,i=s-S;let u=0;for(let n=0;n<w;n+=y){const r=(o+n)/d;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let n=0;n<E;n+=k){const s=(a+n)/h;if(!(s<0||s>=l.outHeight||Math.floor(s)!==s))for(let n=0;n<I;n+=b){const o=(i+n)/p;if(o<0||o>=l.outWidth||Math.floor(o)!==o)continue;u+=A.get(e,r,s,o,t)}}}T.set(u*N,e,n,r,s,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const ll={kernelName:"AvgPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,a=o;sc([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=$s.computePool2DInfo(a.shape,i,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,k=l.effectiveFilterWidth,b=k-1-l.padInfo.left,w=y-1-l.padInfo.top,E=os(a.shape,"float32"),I=1/(p*f),x=n.data.get(s.dataId).values,S=os(s.shape,"float32",x);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const s=n-w,o=r-b;let a=0;for(let n=0;n<y;n+=m){const r=(s+n)/d;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=g){const s=(o+n)/h;if(s<0||s>=l.outWidth||Math.floor(s)!==s)continue;a+=S.get(e,r,s,t)}}E.set(a*I,e,n,r,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const dl={kernelName:"FusedBatchNorm",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:o,offset:a,mean:i,variance:u}=t;Be.assert(i.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Be.assert(null==a||i.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Be.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),sc([s,i,u,o,a],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=n.data.get(u.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=p.length,k=h.length,b=d.length;let w=0,E=0,I=0,x=0;for(let e=0;e<l.length;++e)m[e]=f[w++]+(l[e]-d[E++])*p[I++]/Math.sqrt(h[x++]+c),w>=g&&(w=0),E>=b&&(E=0),I>=y&&(I=0),x>=k&&(x=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function hl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,size:a}=r;sc(s,"slice");const[i,u]=ws.parseSliceParams(s,o,a);ws.assertParamsValid(s,i,u);const c=function(e,t,n,r,s){const o=ws.isSliceContinous(r,t,n),a=Be.sizeFromShape(n),i=Be.computeStrides(r);if(o){const n=ws.computeFlatOffset(t,i);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const u=os(r,s,"string"===s?$s.fromUint8ToStringArray(e):e),c=os(n,s);for(let e=0;e<c.size;++e){const n=c.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));c.set(u.get(...r),...n)}return"string"===s?$s.fromStringArrayToUint8(c.values):c.values}(n.data.get(s.dataId).values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const pl={kernelName:"Slice",backendName:"cpu",kernelFunc:hl};const fl={kernelName:"BatchToSpaceND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,crops:a}=r;sc([s],"batchToSpaceND");const i=o.reduce(((e,t)=>e*t)),u=$s.getReshaped(s.shape,o,i),c=$s.getPermuted(u.length,o.length),l=$s.getReshapedPermuted(s.shape,o,i),d=$s.getSliceBeginCoords(a,o.length),h=$s.getSliceSize(l,a,o.length),p=Bc({inputs:{x:s},backend:n,attrs:{shape:u}}),f=Gc({inputs:{x:p},backend:n,attrs:{perm:c}}),m=Bc({inputs:{x:f},backend:n,attrs:{shape:l}}),g=hl({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ml(e,t,n,r,s){const o=Be.sizeFromShape(r),a=Be.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(a[r]+=o>0?t[n]:1)}return a}function gl(e,t,n,r=!1){const s=e.shape[0],o=e.shape[1],a=os([s,n],t.dtype);for(let i=0;i<s;i++)for(let s=0;s<o;s++){const o=e.get(i,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?a.set(1,i,o):t.size>0?a.set(a.get(i,o)+t.get(i,s),i,o):a.set(a.get(i,o)+1,i,o))}return a}const yl={kernelName:"Bincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:o}=t,{size:a}=r,i=ml(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,i)}};const kl={kernelName:"BroadcastArgs",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=$s.assertAndGetBroadcastShape(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},bl={kernelName:"Ceil",backendName:"cpu",kernelFunc:ac("Ceil",Ec((e=>Math.ceil(e))))},wl={kernelName:"ClipByValue",backendName:"cpu",kernelFunc:oc("ClipByValue",((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}))},El={kernelName:"ComplexAbs",backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Be.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,i=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values;for(let e=0;e<i.length;e++){const t=i[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Il(e,t,n,r){const s=Be.getArrayFromDType(n,Be.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Be.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const o="string"===n?$s.fromUint8ToStringArray(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[i+t]=o[a++]}r+=e.shape[1]}))}return s}function xl(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const Sl={kernelName:"Imag",backendName:"cpu",kernelFunc:xl};function vl(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,o=Be.parseAxisParam(s,t[0].shape)[0];let a=$s.computeOutShape(t.map((e=>e.shape)),o);if(0===Be.sizeFromShape(a))return n.makeTensorInfo(a,t[0].dtype,[]);const i=t.filter((e=>Be.sizeFromShape(e.shape)>0));if(1===i.length)return cc({inputs:{x:i[0]},backend:n});const u=i.map((e=>e.shape));if($s.assertParamsConsistent(u,o),"complex64"===i[0].dtype){const e=i.map((e=>Ac({inputs:{input:e},backend:n}))),t=i.map((e=>xl({inputs:{input:e},backend:n}))),r=vl({inputs:e,backend:n,attrs:{axis:o}}),s=vl({inputs:t,backend:n,attrs:{axis:o}}),a=vc({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const c=i.map((e=>{const t=Be.sizeFromShape(e.shape.slice(o));return Bc({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));a=$s.computeOutShape(c.map((e=>e.shape)),1);const d=1===c[0].shape[0],h=Il(l,a,t[0].dtype,d),p=$s.computeOutShape(i.map((e=>e.shape)),o),f=n.makeTensorInfo(p,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Tl={kernelName:"Concat",backendName:"cpu",kernelFunc:vl};function Nl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r;sc([s,o],"conv2d");const d=$s.convertConv2DDataFormat(u),h=$s.computeConv2DInfo(s.shape,o.shape,a,c,i,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,k=h.padInfo.top,b="channelsLast"===h.dataFormat,w=new $t(h.outShape,s.dtype),E=Be.computeStrides(s.shape),I=Be.computeStrides(o.shape),x=E[0],S=b?E[1]:E[2],v=b?E[2]:1,T=b?1:E[1],N=w.strides[0],A=b?w.strides[1]:w.strides[2],R=b?w.strides[2]:1,M=b?1:w.strides[1],_=n.data.get(s.dataId).values,F=n.data.get(o.dataId).values,O=w.values;for(let e=0;e<h.batchSize;++e){const t=e*x,n=e*N;for(let e=0;e<h.outHeight;++e){const r=n+e*A,s=e*h.strideHeight-k;for(let e=0;e<p;++e){const n=s+e*m;if(n<0||n>=h.inHeight)continue;const o=e*I[0],a=t+n*S;for(let e=0;e<h.outWidth;++e){const t=r+e*R,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const s=a+r*v;let i=o+e*I[1];for(let e=0;e<h.inChannels;++e){const n=_[s+e*T];for(let e=0;e<h.outChannels;++e)O[t+e*M]+=n*F[i+e];i+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const Al={kernelName:"Conv2D",backendName:"cpu",kernelFunc:Nl};const Rl={kernelName:"Conv2DBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;sc([s,o],"conv2dBackpropFilter");const d=$s.convertConv2DDataFormat(u),h=$s.computeConv2DInfo(s.shape,l,a,1,i,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,k=new $t(h.filterShape,"float32"),b=h.padInfo.left,w=h.padInfo.top,E=n.data.get(s.dataId).values,I=n.data.get(o.dataId).values,x=new $t(s.shape,s.dtype,E),S=new $t(o.shape,o.dtype,I);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(h.outHeight,(h.inHeight+w-e)/p);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/f)),o=Math.min(h.outWidth,(h.inWidth+b-r)/f);for(let a=0;a<h.inChannels;++a)for(let i=0;i<h.outChannels;++i){let u=0;for(let c=0;c<h.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*p-w;for(let e=s;e<o;++e){const n=r+e*f-b;u+=y?x.get(c,t,n,a)*S.get(c,l,e,i):x.get(c,a,t,n)*S.get(c,i,l,e)}}k.set(u,e,r,a,i)}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Ml={kernelName:"Conv2DBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r;sc([s,o],"conv2dBackpropInput");const d=Be.computeStrides(o.shape),h=Be.computeStrides(s.shape);let p=$s.convertConv2DDataFormat(c);const f=$s.computeConv2DInfo(a,o.shape,i,1,u,l,!1,p),m=new $t(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,k=n.data.get(o.dataId).values,[b,w,E]=d,{batchSize:I,filterHeight:x,filterWidth:S,inChannels:v,inHeight:T,inWidth:N,outChannels:A,outHeight:R,outWidth:M,strideHeight:_,strideWidth:F}=f;p=f.dataFormat;const O=x-1-f.padInfo.top,D=S-1-f.padInfo.left,C="channelsLast"===p,B=m.strides[0],U=C?m.strides[1]:m.strides[2],$=C?m.strides[2]:1,P=C?1:m.strides[1],L=h[0],z=C?h[1]:h[2],W=C?h[2]:1,H=C?1:h[1];for(let e=0;e<I;++e)for(let t=0;t<v;++t)for(let n=0;n<T;++n){const r=n-O,s=Math.max(0,Math.ceil(r/_)),o=Math.min(R,(x+r)/_);for(let a=0;a<N;++a){const i=a-D,u=Math.max(0,Math.ceil(i/F)),c=Math.min(M,(S+i)/F);let l=0;for(let n=s;n<o;++n){const s=n*_-r;for(let r=u;r<c;++r){const o=L*e+z*n+W*r,a=b*(x-1-s)+w*(S-1-(r*F-i))+E*t;for(let e=0;e<A;++e){l+=y[o+H*e]*k[a+e]}}}g[B*e+U*n+$*a+P*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const _l={kernelName:"Conv3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:a,pad:i,dilations:u}=r;sc([s,o],"conv3d");const c=$s.computeConv3DInfo(s.shape,o.shape,a,u,i),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,k=g.left,b=g.top,w=new $t(c.outShape,s.dtype),E=n.data.get(s.dataId).values,I=n.data.get(o.dataId).values,x=w.values,S=Be.computeStrides(s.shape),v=Be.computeStrides(o.shape);for(let e=0;e<c.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*w.strides[1],s=e*c.strideDepth-y;for(let e=0;e<l;++e){const n=s+e*p;if(n<0||n>=c.inDepth)continue;const o=e*v[0],a=t+n*S[1];for(let e=0;e<c.outHeight;++e){const t=r+e*w.strides[2],n=e*c.strideHeight-b;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const s=o+e*v[1],i=a+r*S[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-k;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=c.inWidth)continue;const o=s+e*v[2],a=i+t*c.inChannels;let u=o;for(let e=0;e<c.inChannels;++e){const t=E[a+e];for(let e=0;e<c.outChannels;++e)x[n+e]+=t*I[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Fl={kernelName:"Conv3DBackpropFilterV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:a,pad:i,filterShape:u}=r;sc([s,o],"conv3dBackpropFilterV2");const c=Be.computeStrides(s.shape),l=Be.computeStrides(o.shape),d=$s.computeConv3DInfo(s.shape,u,a,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,k=new $t(d.filterShape,"float32"),b=k.values,[w,E,I,x]=k.strides,S=n.data.get(o.dataId).values,[v,T,N,A]=l,R=n.data.get(s.dataId).values,[M,_,F,O]=c,D=d.padInfo.front,C=d.padInfo.left,B=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/h)),n=Math.min(d.outDepth,(d.inDepth+D-e)/h),r=e*w;for(let s=0;s<g;++s){const o=Math.max(0,Math.ceil((B-s)/p)),a=Math.min(d.outHeight,(d.inHeight+B-s)/p),i=s*E+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((C-r)/f)),c=Math.min(d.outWidth,(d.inWidth+C-r)/f),l=r*I+i;for(let i=0;i<d.inChannels;++i){const m=i*x+l;for(let l=0;l<d.outChannels;++l){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*M,y=m*v;for(let m=t;m<n;++m){const t=(e+m*h-D)*_+d,n=m*T+y;for(let e=o;e<a;++e){const o=(s+e*p-B)*F+t,a=e*N+n;for(let e=u;e<c;++e){const t=e*A+a;g+=R[(r+e*f-C)*O+o+i]*S[t+l]}}}}b[m+l]=g}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Ol={kernelName:"Conv3DBackpropInputV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{pad:a,strides:i,inputShape:u}=r;sc([s],"conv3dBackpropInputV2");const c=Be.computeStrides(s.shape),l=Be.computeStrides(o.shape),d=$s.computeConv3DInfo(u,o.shape,i,1,a),h=new $t(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,k=n.data.get(s.dataId).values,[b,w,E,I]=c,x=n.data.get(o.dataId).values,[S,v,T,N]=l,{batchSize:A,filterDepth:R,filterHeight:M,filterWidth:_,inChannels:F,inDepth:O,inHeight:D,inWidth:C,outChannels:B,outDepth:U,outHeight:$,outWidth:P,strideDepth:L,strideHeight:z,strideWidth:W}=d,H=R-1-d.padInfo.front,q=M-1-d.padInfo.top,K=_-1-d.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<F;++t)for(let n=0;n<O;++n){const r=n-H,s=Math.max(0,Math.ceil(r/L)),o=Math.min(U,(R+r)/L);for(let a=0;a<D;++a){const i=a-q,u=Math.max(0,Math.ceil(i/z)),c=Math.min($,(M+i)/z);for(let l=0;l<C;++l){const d=l-K,h=Math.max(0,Math.ceil(d/W)),A=Math.min(P,(_+d)/W);let F=0;for(let n=s;n<o;++n){const s=n*L-r;for(let r=u;r<c;++r){const o=r*z-i;for(let a=h;a<A;++a){const i=b*e+w*n+E*r+I*a,u=S*(R-1-s)+v*(M-1-o)+T*(_-1-(a*W-d))+N*t;for(let e=0;e<B;++e){F+=k[i+e]*x[u+e]}}}}p[f*e+m*n+g*a+y*l+t]=F}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Dl={kernelName:"Cos",backendName:"cpu",kernelFunc:oc("Cos",(e=>Math.cos(e)))},Cl={kernelName:"Cosh",backendName:"cpu",kernelFunc:oc("Cosh",(e=>Math.cosh(e)))};const Bl={kernelName:"CropAndResize",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:o,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:c}=r,[l,d,h,p]=s.shape,f=o.shape[0],[m,g]=i,y=os([f,m,g,p],"float32"),k=n.data.get(o.dataId).values,b=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,E=Be.computeStrides(s.shape),I=Be.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=k[t],r=k[t+1],s=k[t+2],o=k[t+3],a=b[e];if(a>=l)continue;const i=m>1?(s-n)*(d-1)/(m-1):0,f=g>1?(o-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const l=m>1?n*(d-1)+t*i:.5*(n+s)*(d-1);if(l<0||l>d-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const s=r+n*I[2]+t*I[1]+e*I[0];y.values[s]=c}else if("bilinear"===u){const n=Math.floor(l),s=Math.ceil(l),i=l-n;for(let u=0;u<g;u++){const l=g>1?r*(h-1)+u*f:.5*(r+o)*(h-1);if(l<0||l>h-1){for(let n=0;n<p;n++){const r=n+u*I[2]+t*I[1]+e*I[0];y.values[r]=c}continue}const d=Math.floor(l),m=Math.ceil(l),k=l-d;for(let r=0;r<p;r++){let o=r+d*E[2]+n*E[1]+a*E[0];const c=w[o];o=r+m*E[2]+n*E[1]+a*E[0];const l=w[o];o=r+d*E[2]+s*E[1]+a*E[0];const h=w[o];o=r+m*E[2]+s*E[1]+a*E[0];const p=c+(l-c)*k,f=h+(w[o]-h)*k;o=r+u*I[2]+t*I[1]+e*I[0],y.values[o]=p+(f-p)*i}}}else for(let n=0;n<g;++n){const s=g>1?r*(h-1)+n*f:.5*(r+o)*(h-1);if(s<0||s>h-1){for(let r=0;r<p;r++){const s=r+n*I[2]+t*I[1]+e*I[0];y.values[s]=c}continue}const i=Math.round(s),u=Math.round(l);for(let r=0;r<p;r++){const s=r+i*E[2]+u*E[1]+a*E[0],o=r+n*I[2]+t*I[1]+e*I[0];y.values[o]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ul={kernelName:"Cumprod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:a,reverse:i}=r;sc(s,"cumprod");const u=$s.getAxesPermutation([o],s.shape.length);let c=s;null!=u&&(c=Gc({inputs:{x:s},backend:n,attrs:{perm:u}}));const l=$s.getInnerMostAxes(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=tn(c.dtype,"int32"),h=Be.makeOnesTypedArray(Be.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=a?1:p[n];else{const r=m(e,t-1);h[n]=a?p[r]*h[r]:p[n]*h[r]}}const g=n.makeTensorInfo(c.shape,d,h);if(null!=u){const e=Gc({inputs:{x:g},backend:n,attrs:{perm:$s.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const $l={kernelName:"Cumsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:a,reverse:i}=r;sc(s,"cumsum");const u=$s.getAxesPermutation([o],s.shape.length);let c=s;null!=u&&(c=Gc({inputs:{x:s},backend:n,attrs:{perm:u}}));const l=$s.getInnerMostAxes(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=tn(c.dtype,"int32"),h=Be.makeZerosTypedArray(Be.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=a?0:p[n];else{const r=m(e,t-1);h[n]=a?p[r]+h[r]:p[n]+h[r]}}const g=n.makeTensorInfo(c.shape,d,h);if(null!=u){const e=Gc({inputs:{x:g},backend:n,attrs:{perm:$s.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(c),e}return g}};const Pl={kernelName:"DenseBincount",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:o}=t,{size:a,binaryOutput:i}=r;if(1===s.shape.length){const e=ml(n.data.get(s.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,e)}if(2===s.shape.length){const e=gl(n.bufferSync(s),n.bufferSync(o),a,i);return n.makeTensorInfo(e.shape,o.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const Ll={kernelName:"DepthToSpace",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:o,dataFormat:a}=r;Be.assert("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const i=s.shape[0],u=s.shape[1],c=s.shape[2],l=s.shape[3],d=u*o,h=c*o,p=l/(o*o),f=n.data.get(s.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let e=0;e<i;++e)for(let t=0;t<d;++t){const n=Math.floor(t/o),r=t%o;for(let t=0;t<h;++t){const s=Math.floor(t/o),a=(r*o+t%o)*p;for(let t=0;t<p;++t){const r=t+a+l*(s+c*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([i,d,h,p],s.dtype,m)}};function zl(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;sc([s,o],"depthwiseConv2DNative");const l=Be.computeStrides(s.shape),d=Be.computeStrides(o.shape);let h=u;null==h&&(h=[1,1]),Be.assert($s.eitherStridesOrDilationsAreOne(a,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`));const p=$s.computeConv2DInfo(s.shape,o.shape,a,h,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:k}=p,b=k.left,w=k.top,E=p.outChannels/p.inChannels,I=new $t(p.outShape,s.dtype),x=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,v=I.values;for(let e=0;e<p.batchSize;++e){const t=e*l[0],n=e*I.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*I.strides[1],s=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=p.inHeight)continue;const o=e*d[0],a=t+n*l[1];for(let e=0;e<p.outWidth;++e){const t=r+e*I.strides[2],n=e*p.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const s=o+e*d[1],i=a+r*p.inChannels;let u=t,c=s;for(let e=0;e<p.inChannels;++e){const t=x[i+e];for(let e=0;e<E;++e)v[u+e]+=t*S[c+e];u+=E,c+=E}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Wl={kernelName:"DepthwiseConv2dNative",backendName:"cpu",kernelFunc:zl};const Hl={kernelName:"DepthwiseConv2dNativeBackpropFilter",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r;sc([s,o],"depthwiseConv2dNativeBackpropFilter");const d=$s.computeConv2DInfo(s.shape,l,a,i,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new $t(d.filterShape,"float32"),y=d.padInfo.left,k=d.padInfo.top,b=d.outChannels/d.inChannels,w=n.data.get(s.dataId).values,E=new $t(s.shape,s.dtype,w),I=n.data.get(o.dataId).values,x=new $t(o.shape,o.dtype,I);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((k-e)/h)),n=Math.min(d.outHeight,(d.inHeight+k-e)/h);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/p)),o=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let a=0;a<d.outChannels;++a){const i=Math.trunc(a/b),u=a%b;let c=0;for(let u=0;u<d.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*h-k;for(let e=s;e<o;++e){const n=r+e*p-y;c+=E.get(u,t,n,i)*x.get(u,l,e,a)}}g.set(c,e,r,i,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const ql={kernelName:"DepthwiseConv2dNativeBackpropInput",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r;sc([s,o],"depthwiseConv2DNativeBackpropInput");const d=Be.computeStrides(s.shape),h=Be.computeStrides(o.shape),p=$s.computeConv2DInfo(l,o.shape,a,i,u,c,!0),f=new $t(p.inShape,"float32"),m=f.values,[g,y,k]=f.strides,b=n.data.get(s.dataId).values,[w,E,I]=d,x=n.data.get(o.dataId).values,[S,v,T]=h,{batchSize:N,filterHeight:A,filterWidth:R,inChannels:M,inHeight:_,inWidth:F,outChannels:O,outHeight:D,outWidth:C,strideHeight:B,strideWidth:U}=p,$=A-1-p.padInfo.top,P=R-1-p.padInfo.left,L=O/M;for(let e=0;e<N;++e)for(let t=0;t<M;++t)for(let n=0;n<_;++n){const r=n-$,s=Math.max(0,Math.ceil(r/B)),o=Math.min(D,(A+r)/B);for(let a=0;a<F;++a){const i=a-P,u=Math.max(0,Math.ceil(i/U)),c=Math.min(C,(R+i)/U);let l=0;for(let n=s;n<o;++n){const s=n*B-r;for(let r=u;r<c;++r){const o=w*e+E*n+I*r,a=S*(A-1-s)+v*(R-1-(r*U-i))+T*t;for(let e=0;e<L;++e){l+=b[o+(t*L+e)]*x[a+e]}}}m[g*e+y*n+k*a+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Kl={kernelName:"Diag",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=Be.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,a=os([s,s],r.dtype),i=a.values;for(let e=0;e<o.length;e++)i[e*s+e]=o[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,a.dtype,a.values)}},Gl={kernelName:"Dilation2D",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:o,pad:a,dilations:i}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,d=u.data.get(s.dataId).values,h=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:k,padInfo:b,strideHeight:w,strideWidth:E,filterHeight:I,filterWidth:x,dilationHeight:S,dilationWidth:v,outShape:T}=$s.computeDilation2DInfo(r.shape,s.shape,o,a,"NHWC",i),N=Be.sizeFromShape(T),A=T.length,R=Be.getArrayFromDType(r.dtype,N);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-b.top;for(let o=0;o<k;++o){const a=o*E-b.left;for(let i=0;i<g;++i){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const o=n+t*S;if(o>=0&&o<f)for(let n=0;n<x;++n){const p=a+n*v;if(p>=0&&p<m){const a=Be.locToIndex([e,o,p,i],l,Be.computeStrides(r.shape)),f=Be.locToIndex([t,n,i],h,Be.computeStrides(s.shape)),m=c[a]+d[f];m>u&&(u=m)}}}R[Be.locToIndex([e,t,o,i],A,Be.computeStrides(T))]=u}}}return{dataId:u.write(Be.toTypedArray(R,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},jl={kernelName:"Dilation2DBackpropFilter",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:o}=e,{strides:a,pad:i,dilations:u}=n,c=t,l=Be.toNestedArray(r.shape,c.data.get(r.dataId).values),d=Be.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:k,strideHeight:b,strideWidth:w,filterHeight:E,filterWidth:I,dilationHeight:x,dilationWidth:S,outShape:v}=$s.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",u);Be.assert(o.rank===v.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${v.length}, but got ${o.rank}`));const T=Be.toNestedArray(v,c.data.get(o.dataId).values),N=Be.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*b-k.top;for(let r=0;r<y;++r){const s=r*w-k.left;for(let o=0;o<m;++o){let a=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let t=0;t<E;++t){const r=n+t*x;if(r>=0&&r<p)for(let n=0;n<I;++n){const c=s+n*S;if(c>=0&&c<f){const s=l[e][r][c][o]+d[t][n][o];s>a&&(a=s,i=t,u=n)}}}N[i][u][o]+=T[e][t][r][o]}}}return{dataId:c.write(Be.toTypedArray(N,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Vl={kernelName:"Dilation2DBackpropInput",backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:o}=e,{strides:a,pad:i,dilations:u}=n,c=t,l=Be.toNestedArray(r.shape,c.data.get(r.dataId).values),d=Be.toNestedArray(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:k,strideHeight:b,strideWidth:w,filterHeight:E,filterWidth:I,dilationHeight:x,dilationWidth:S,outShape:v}=$s.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",u);Be.assert(o.rank===v.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${v.length}, but got ${o.rank}`));const T=Be.toNestedArray(v,c.data.get(o.dataId).values),N=Be.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*b-k.top;for(let r=0;r<y;++r){const s=r*w-k.left;for(let o=0;o<m;++o){let a=Number.MIN_SAFE_INTEGER,i=n<0?0:n,u=s<0?0:s;for(let t=0;t<E;++t){const r=n+t*x;if(r>=0&&r<p)for(let n=0;n<I;++n){const c=s+n*S;if(c>=0&&c<f){const s=l[e][r][c][o]+d[t][n][o];s>a&&(a=s,i=r,u=c)}}}N[e][i][u][o]+=T[e][t][r][o]}}}return{dataId:c.write(Be.toTypedArray(N,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Yl=pc(((e,t)=>e*t)),Zl=Oc(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Xl=Fc("Multiply",Yl,Zl),Jl={kernelName:"Multiply",backendName:"cpu",kernelFunc:Xl};function Ql(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;let i;sc(s,"sum"),i="bool"===s.dtype?Mc({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):cc({inputs:{x:s},backend:n});const u=i.shape.length,c=Be.parseAxisParam(o,i.shape),l=$s.getAxesPermutation(c,u);let d=c,h=i;null!=l&&(h=Gc({inputs:{x:i},backend:n,attrs:{perm:l}}),d=$s.getInnerMostAxes(d.length,u)),$s.assertAxesAreInnerMostDims("sum",d,h.shape.length);const[p,f]=$s.computeOutAndReduceShapes(h.shape,d);let m=Nc(n,p,$s.upcastType(h.dtype,"int32"));const g=Be.sizeFromShape(f),y=n.data.get(m.dataId).values,k=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=k[t+e];y[e]=n}if(a){const e=m;m=Bc({inputs:{x:m},backend:n,attrs:{shape:$s.expandShapeToKeepDim(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=l&&n.disposeIntermediateTensorInfo(h),m}const ed={kernelName:"Sum",backendName:"cpu",kernelFunc:Ql};const td={kernelName:"Einsum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,o=t,{allDims:a,summedDims:i,idDims:u}=$s.decodeEinsumEquation(s,o.length);$s.checkEinsumDimSizes(a.length,u,o);const{path:c,steps:l}=$s.getEinsumComputePath(i,u),d=l.length;let h=null,p=a.length;const f=[];for(let e=0;e<d;++e){for(const t of l[e]){const{permutationIndices:e,expandDims:r}=$s.getEinsumPermutation(p,u[t]);let s;$s.isIdentityPermutation(e)?s=o[t]:(s=Gc({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);Be.arraysEqual(s.shape,a)||(s=Bc({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===h?h=s:(h=Xl({inputs:{a:s,b:h},backend:n}),f.push(h))}e<d-1&&(c[e]>=0&&(h=Ql({inputs:{x:h},backend:n,attrs:{axis:c[e]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}};const nd={kernelName:"EluGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;sc([r,s],"eluGrad");const o=new Float32Array(Be.sizeFromShape(s.shape)),a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let e=0;e<a.length;++e){const t=a[e];o[e]=t>=1?i[e]:i[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",o)}},rd=Fc("Equal",pc(((e,t)=>e===t?1:0)),null,"bool"),sd={kernelName:"Equal",backendName:"cpu",kernelFunc:rd},od=$s.ERF_P,ad=$s.ERF_A1,id=$s.ERF_A2,ud=$s.ERF_A3,cd=$s.ERF_A4,ld=$s.ERF_A5,dd=oc("Erf",(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+od*n);return t*(1-((((ld*r+cd)*r+ud)*r+id)*r+ad)*r*Math.exp(-n*n))})),hd={kernelName:"Erf",backendName:"cpu",kernelFunc:dd},pd=ac("Exp",Ec((e=>Math.exp(e))),"float32"),fd={kernelName:"Exp",backendName:"cpu",kernelFunc:pd};function md(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:o}=r,a=s.shape.length,i=s.shape.slice();let u=o;return o<0&&(Be.assert(-(a+1)<=o,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),u=a+o+1),i.splice(u,0,1),Bc({inputs:{x:s},backend:n,attrs:{shape:i}})}const gd={kernelName:"ExpandDims",backendName:"cpu",kernelFunc:md},yd={kernelName:"Expm1",backendName:"cpu",kernelFunc:ac("Expm1",Ec((e=>Math.expm1(e))))},kd=Fc("RealDiv",pc(((e,t)=>e/t))),bd={kernelName:"RealDiv",backendName:"cpu",kernelFunc:kd},wd=Fc("Sub",pc(((e,t)=>e-t)),Oc(((e,t,n,r)=>({real:e-n,imag:t-r})))),Ed={kernelName:"Sub",backendName:"cpu",kernelFunc:wd};function Id(e,t,n){const r=e.shape,s=r[0],o=r[1],a=n.data.get(e.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,c=[s,o],l=Be.sizeFromShape(c),d=Be.getTypedArrayFromDType("float32",l),h=Be.getTypedArrayFromDType("float32",l);for(let e=0;e<s;e++){const r=hl({inputs:{x:i},backend:n,attrs:{begin:[e,0],size:[1,o]}}),s=hl({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,o]}}),a=vc({inputs:{real:r,imag:s},backend:n}),{real:c,imag:l}=xd(a,t,n),p=$s.mergeRealAndImagArrays(c,l);for(let t=0;t<o;t++){const n=$s.getComplexWithIndex(p,t);d[e*o+t]=n.real,h[e*o+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a)}const p=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",h),m=vc({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function xd(e,t,n){const r=Be.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((i=r)&i-1)){const s=Sd(o,a,r,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",s.real),t=n.makeTensorInfo(i,"float32",s.imag),o=n.makeTensorInfo([],"float32",Be.createScalarValue(r,"float32")),a=cc({inputs:{x:o},backend:n}),u=bd.kernelFunc({inputs:{a:e,b:o},backend:n}),c=bd.kernelFunc({inputs:{a:t,b:a},backend:n}),l=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:d}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,a=0;for(let r=0;r<t;r++){const i=$s.exponent(s*r,t,n),u=$s.getComplexWithIndex(e,r);o+=u.real*i.real-u.imag*i.imag,a+=u.real*i.imag+u.imag*i.real}n&&(o/=t,a/=t),$s.assignToTypedArray(r,o,a,s)}return r}($s.mergeRealAndImagArrays(o,a),r,t);return $s.splitRealAndImagArrays(e)}var i}function Sd(e,t,n,r,s){if(1===n)return{real:e,imag:t};const o=$s.mergeRealAndImagArrays(e,t),a=n/2,i=$s.complexWithEvenIndex(o),u=i.real,c=i.imag,l=[u.length],d=s.makeTensorInfo(l,"float32",u),h=s.makeTensorInfo(l,"float32",c),p=vc({inputs:{real:d,imag:h},backend:s}),f=$s.complexWithOddIndex(o),m=f.real,g=f.imag,y=[m.length],k=s.makeTensorInfo(y,"float32",m),b=s.makeTensorInfo(y,"float32",g),w=vc({inputs:{real:k,imag:b},backend:s}),E=Sd(u,c,a,r,s),I=E.real,x=E.imag,S=[I.length],v=s.makeTensorInfo(S,"float32",I),T=s.makeTensorInfo(S,"float32",x),N=vc({inputs:{real:v,imag:T},backend:s}),A=Sd(m,g,a,r,s),R=A.real,M=A.imag,_=[R.length],F=s.makeTensorInfo(_,"float32",R),O=s.makeTensorInfo(_,"float32",M),D=vc({inputs:{real:F,imag:O},backend:s}),C=$s.exponents(n,r),B=[C.real.length],U=s.makeTensorInfo(B,"float32",C.real),$=s.makeTensorInfo(B,"float32",C.imag),P=vc({inputs:{real:U,imag:$},backend:s}),L=Xl({inputs:{a:P,b:D},backend:s}),z=Dc({inputs:{a:N,b:L},backend:s}),W=wd({inputs:{a:N,b:L},backend:s}),H=Ac({inputs:{input:z},backend:s}),q=Ac({inputs:{input:W},backend:s}),K=xl({inputs:{input:z},backend:s}),G=xl({inputs:{input:W},backend:s}),j=vl({inputs:[H,q],backend:s,attrs:{axis:0}}),V=vl({inputs:[K,G],backend:s,attrs:{axis:0}}),Y=s.data.get(j.dataId).values,Z=s.data.get(V.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(V),{real:Y,imag:Z}}const vd={kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Be.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],a=Bc({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),i=Id(a,!1,n),u=Bc({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}};function Td(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:o}=n,a=o||Be.inferDtype(s),i=Be.getArrayFromDType(a,Be.sizeFromShape(r));return function(e,t,n){e.fill(t)}(i,s),t.makeTensorInfo(r,a,i)}const Nd={kernelName:"Fill",backendName:"cpu",kernelFunc:Td};const Ad={kernelName:"FlipLeftRight",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,o=Be.getTypedArrayFromDType(r.dtype,Be.sizeFromShape(r.shape)),[a,i,u,c]=r.shape,l=s.data.get(r.dataId).values;for(let e=0;e<a;e++){const t=e*u*i*c;for(let e=0;e<i;e++){const n=e*(u*c);for(let e=0;e<u;e++){const r=e*c;for(let s=0;s<c;s++){const a=Math.round(u-e-1),i=t+n+r+s;let d=l[i];if(a>=0&&a<u){d=l[t+n+a*c+s]}o[i]=d}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Rd={kernelName:"Floor",backendName:"cpu",kernelFunc:ac("Floor",Ec((e=>Math.floor(e))))},Md={kernelName:"FloorDiv",backendName:"cpu",kernelFunc:Fc("FloorDiv",pc(((e,t)=>Math.floor(e/t))),null,"int32")};const _d={kernelName:"FusedConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Nl({inputs:{x:s,filter:o},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const e=m;if("NCHW"===l&&1===a.shape.length&&1!==a.shape[0]){const e=Bc({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Dc({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Dc({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===l&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=Bc({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Sc(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=Sc(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const Fd={kernelName:"FusedDepthwiseConv2D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:a,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=zl({inputs:{x:s,filter:o},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const e=m;m=Dc({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=Sc(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function Od(e,t,n,r,s,o,a,i,u){const c=os([r,o],n);for(let n=0;n<r;n++){const r=[];let l=0;for(let t=0;t<s;t++){const o=e[n*s+t];l+=o*a[t],r.push(o)}if(l<0||l>=u/o)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<o;e++)c.values[n*o+e]=t.get(...t.indexToLoc(l*o+e))}return c}const Dd={kernelName:"GatherNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,o=Be.sizeFromShape(r.shape),a=s.shape,i=a[a.length-1],[u,c,l,d]=$s.prepareAndValidate(r,s);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const h=Od(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,c,i,l,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,h.values)}};function Cd(e,t,n){const r=os(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),o=s[0],a=s[2],i=t.locToIndex([o,a]);s[2]=t.values[i];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const Bd={kernelName:"GatherV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:o}=t,{axis:a,batchDims:i}=r;sc([s,o],"gatherV2");const u=Be.parseAxisParam(a,s.shape)[0],c=n.data.get(o.dataId).values,l=s.shape[u];for(let e=0;e<c.length;++e){const t=c[e];Be.assert(t<=l-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${l-1}]`))}let d=i;null==i&&(d=0);const h=Be.sizeFromShape(o.shape),p=$s.segment_util.collectGatherOpShapeInfo(s,o,u,d),f=Bc({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Bc({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),k=Cd(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,k.dtype,k.values)}},Ud={kernelName:"Greater",backendName:"cpu",kernelFunc:Fc("Greater",pc(((e,t)=>e>t?1:0)),null,"bool")},$d={kernelName:"GreaterEqual",backendName:"cpu",kernelFunc:Fc("GreaterEqual",pc(((e,t)=>e>=t?1:0)),null,"bool")};const Pd={kernelName:"IFFT",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Be.sizeFromShape(r.shape),o=r.shape[r.shape.length-1],a=Bc({inputs:{x:r},backend:n,attrs:{shape:[s/o,o]}}),i=Id(a,!0,n),u=Bc({inputs:{x:i},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}},Ld={kernelName:"IsFinite",backendName:"cpu",kernelFunc:oc("IsFinite",(e=>Number.isFinite(e)?1:0),"bool")},zd={kernelName:"IsInf",backendName:"cpu",kernelFunc:oc("IsInf",(e=>Math.abs(e)===1/0?1:0),"bool")},Wd={kernelName:"IsNan",backendName:"cpu",kernelFunc:oc("IsNan",(e=>Number.isNaN(e)?1:0),"bool")},Hd={kernelName:"Less",backendName:"cpu",kernelFunc:Fc("Less",pc(((e,t)=>e<t?1:0)),null,"bool")},qd={kernelName:"LessEqual",backendName:"cpu",kernelFunc:Fc("LessEqual",pc(((e,t)=>e<=t?1:0)),null,"bool")};function Kd(e,t,n){const r=(t-e)/(n-1),s=Be.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const Gd={kernelName:"LinSpace",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:o}=n,a=Kd(r,s,o);return t.makeTensorInfo([a.length],"float32",a)}},jd={kernelName:"Log",backendName:"cpu",kernelFunc:ac("Log",Ec((e=>Math.log(e))))},Vd={kernelName:"Log1p",backendName:"cpu",kernelFunc:oc("Log1p",(e=>Math.log1p(e)))},Yd={kernelName:"LogicalAnd",backendName:"cpu",kernelFunc:Fc("LogicalAnd",pc(((e,t)=>e&&t)),null,"bool")},Zd={kernelName:"LogicalNot",backendName:"cpu",kernelFunc:oc("LogicalNot",(e=>e?0:1),"bool")},Xd={kernelName:"LogicalOr",backendName:"cpu",kernelFunc:Fc("LogicalOr",pc(((e,t)=>e||t)),null,"bool")};const Jd={kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:o,bias:a,alpha:i,beta:u}=r;sc(s,"LRN");const c=s.shape[3],l=c-1,d=n.data.get(s.dataId).values,h=Be.sizeFromShape(s.shape),p=new Float32Array(h);function f(e){const t=e%c;let n=e-t+Math.max(0,t-o);const r=e-t+Math.min(t+o,l);let s=0;for(;n<=r;n++){const e=d[n];s+=e*e}return s}for(let e=0;e<h;e++){const t=f(e),n=d[e]*Math.pow(a+i*t,-u);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}};const Qd={kernelName:"LRNGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:o,dy:a}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r;sc(a,"LRNGrad");const d=Be.sizeFromShape(a.shape),h=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(o.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-i),r=e-t+Math.min(h,t+i+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=c*s+u;for(let t=n;t<r;t++){let n=-2*c*l*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-l)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(a.shape,s.dtype,g)}};function eh(e,t,n,r){const s=Be.getTypedArrayFromDType(r,Be.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let o=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>o)&&(o=t)}s[n]=o}return s}function th(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:o,keepDims:a}=r,i=n;let u=s.shape;const c=u.length,l=Be.parseAxisParam(o,u);let d=l;const h=$s.getAxesPermutation(d,c);let p=i.data.get(s.dataId).values;if(null!=h){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[h[t]];p=Kc(p,u,s.dtype,h,e),d=$s.getInnerMostAxes(d.length,c),u=e}sc(s,"max"),$s.assertAxesAreInnerMostDims("max",d,c);const[f,m]=$s.computeOutAndReduceShapes(u,d),g=eh(p,Be.sizeFromShape(m),f,s.dtype),y=i.write(g,f,s.dtype);let k=f;if(a){k=$s.expandShapeToKeepDim(f,l)}return{dataId:y,shape:k,dtype:s.dtype}}const nh={kernelName:"Max",backendName:"cpu",kernelFunc:th},rh={kernelName:"Maximum",backendName:"cpu",kernelFunc:Fc("Maximum",pc(((e,t)=>Math.max(e,t))))};const sh={kernelName:"MaxPool",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;sc(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r;Be.assert($s.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const c=$s.computePool2DInfo(s.shape,o,a,1,i,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&Be.arraysEqual(c.inShape,c.outShape))l=cc({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Be.computeStrides(s.shape),r=rl(e,s.shape,s.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return l}};const oh={kernelName:"MaxPool3D",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r;sc(s,"maxPool3d");const l=$s.computePool3DInfo(s.shape,o,a,1,i,u,c),d=ol(n.data.get(s.dataId).values,s.shape,s.dtype,Be.computeStrides(s.shape),l,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const ah={kernelName:"MaxPool3DGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=r;sc([s,o],"maxPool3DGrad");const l=$s.computePool3DInfo(o.shape,a,i,1,u,c),d=al(n.bufferSync(o),l),h=l.strideDepth,p=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,k=l.effectiveFilterDepth,b=l.effectiveFilterHeight,w=l.effectiveFilterWidth,E=k-1-l.padInfo.front,I=w-1-l.padInfo.left,x=b-1-l.padInfo.top,S=os(o.shape,"float32"),v=n.bufferSync(s);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let s=0;s<l.inWidth;++s){const o=n-E,a=r-x,i=s-I;let u=0;for(let n=0;n<k;n+=m){const r=(o+n)/h;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let s=0;s<b;s+=g){const o=(a+s)/p;if(!(o<0||o>=l.outHeight||Math.floor(o)!==o))for(let a=0;a<w;a+=y){const c=(i+a)/f;if(c<0||c>=l.outWidth||Math.floor(c)!==c)continue;const h=k*b*w-1-d.get(e,r,o,c,t)===n*b*w+s*w+a?1:0;if(0===h)continue;u+=v.get(e,r,o,c,t)*h}}}S.set(u,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const ih={kernelName:"MaxPoolGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o,output:a}=t,i=o;sc([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=$s.computePool2DInfo(i.shape,u,c,1,l,d),p=n.data.get(i.dataId).values,f=os(h.outShape,i.dtype,sl(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,k=h.dilationWidth,b=h.effectiveFilterHeight,w=h.effectiveFilterWidth,E=w-1-h.padInfo.left,I=b-1-h.padInfo.top,x=os(i.shape,"float32"),S=n.data.get(s.dataId).values,v=os(s.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const s=n-I,o=r-E;let a=0;for(let n=0;n<b;n+=y){const r=(s+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=k){const i=(o+s)/g;if(i<0||i>=h.outWidth||Math.floor(i)!==i)continue;const u=b*w-1-f.get(e,r,i,t)===n*w+s?1:0;if(0===u)continue;a+=v.get(e,r,i,t)*u}}x.set(a,e,n,r,t)}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};function uh(e,t,n,r,s){const o=rl(e,0,n,Be.computeStrides(t),s,"max"),a=sl(e,t,n,s,!0,r);return[o.values,a.values]}const ch={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=t,u=n;sc(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=$s.computePool2DInfo(r.shape,s,o,[1,1],a),[d,h]=uh(c,r.shape,r.dtype,i,l),p=u.write(d,l.outShape,r.dtype),f=u.write(h,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};const lh={kernelName:"Mean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r,i=Be.parseAxisParam(o,s.shape),u=$s.computeOutAndReduceShapes(s.shape,i)[1],c=Be.sizeFromShape(u),l=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(d);const h=Mc({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=kd({inputs:{a:h,b:d},backend:n});l.push(p);const f=Ql({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const dh={kernelName:"Min",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;sc(s,"min");const i=Be.parseAxisParam(o,s.shape);let u=i;const c=$s.getAxesPermutation(u,s.shape.length);let l=s;null!=c&&(l=Gc({inputs:{x:s},backend:n,attrs:{perm:c}}),u=$s.getInnerMostAxes(u.length,s.shape.length)),$s.assertAxesAreInnerMostDims("min",u,l.shape.length);const[d,h]=$s.computeOutAndReduceShapes(l.shape,u),p=Be.sizeFromShape(h),f=Be.makeZerosTypedArray(Be.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const g=n.makeTensorInfo(d,l.dtype,f);if(a){const e=Bc({inputs:{x:g},backend:n,attrs:{shape:$s.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},hh={kernelName:"Minimum",backendName:"cpu",kernelFunc:Fc("Minimum",pc(((e,t)=>Math.min(e,t))))};const ph={kernelName:"MirrorPad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,mode:a}=r;sc(s,"mirrorPad");const i=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=o.map((e=>e[0])),c=o.map(((e,t)=>e[0]+s.shape[t])),l="reflect"===a?0:1,d=n.data.get(s.dataId).values,h=s.shape.length,p=Be.computeStrides(s.shape),f=Be.sizeFromShape(i),m=i.length,g=Be.computeStrides(i),y=Be.getTypedArrayFromDType(s.dtype,f);for(let e=0;e<f;e++){let t=Be.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-l:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+l);t=t.map(((e,t)=>e-u[t]));const n=Be.locToIndex(t,h,p);y[e]=d[n]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}},fh={kernelName:"Mod",backendName:"cpu",kernelFunc:Fc("Mod",pc(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})))};var mh={},gh=o("cmoHh"),yh=o("euRi5"),kh=o("hDsEw"),bh=o("3J2Zm"),wh=o("6Px8M"),Eh=o("lDm0S"),Ih={};function xh(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:o}=r,a=s.shape.length;let i=o;if(-1===i&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const u=Be.parseAxisParam([i],s.shape),c=th({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=$s.expandShapeToKeepDim(c.shape,u),d=Bc({inputs:{x:c},backend:n,attrs:{shape:l}}),h=wd({inputs:{a:s,b:d},backend:n}),p=pd({inputs:{x:h},backend:n}),f=Ql({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=Bc({inputs:{x:f},backend:n,attrs:{shape:l}}),g=kd({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}!function(e,t,n){var r,s=256,a=n.pow(s,6),i=n.pow(2,52),u=2*i,c=255;function l(o,c,l){var g=[],y=f(p((c=1==c?{entropy:!0}:c||{}).entropy?[o,m(t)]:null==o?function(){try{var n;return r&&(n=r.randomBytes)?n=n(s):(n=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(n)),m(n)}catch(n){var o=e.navigator,a=o&&o.plugins;return[+new Date,e,a,e.screen,m(t)]}}():o,3),g),k=new d(g),b=function(){for(var e=k.g(6),t=a,n=0;e<i;)e=(e+n)*s,t*=s,n=k.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|k.g(4)},b.quick=function(){return k.g(4)/4294967296},b.double=b,f(m(k.S),t),(c.pass||l||function(e,t,r,s){return s&&(s.S&&h(s,k),e.state=function(){return h(k,{})}),r?(n.random=e,t):e})(b,y,"global"in c?c.global:this==n,c.state)}function d(e){var t,n=e.length,r=this,o=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);o<s;)i[o]=o++;for(o=0;o<s;o++)i[o]=i[a=c&a+e[o%n]+(t=i[o])],i[a]=t;(r.g=function(e){for(var t,n=0,o=r.i,a=r.j,i=r.S;e--;)t=i[o=c&o+1],n=n*s+i[c&(i[o]=i[a=c&a+t])+(i[a]=t)];return r.i=o,r.j=a,n})(s)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function p(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(p(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function f(e,t){for(var n,r=e+"",s=0;s<r.length;)t[c&s]=c&(n^=19*t[c&s])+r.charCodeAt(s++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(f(n.random(),t),Ih){Ih=l;try{r=o("kjyEk")}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return l})):n.seedrandom=l}("undefined"!=typeof self?self:Ih,[],Math),Ih.alea=gh,Ih.xor128=yh,Ih.xorwow=kh,Ih.xorshift7=bh,Ih.xor4096=wh,Ih.tychei=Eh,mh=Ih;const Sh={kernelName:"Softmax",backendName:"cpu",kernelFunc:xh};const vh={kernelName:"Multinomial",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:o,seed:a,normalized:i}=r;sc(s,"multinomial");const u=i?s:xh({inputs:{logits:s},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[c,o],p=Be.makeZerosTypedArray(Be.sizeFromShape(h),"int32");for(let e=0;e<c;++e){const t=e*l,n=new Float32Array(l-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=mh.alea(a.toString()),s=e*o;for(let e=0;e<o;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}};const Th={kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;sc(r,"neg");const s=n.data.get(r.dataId).values,[o,a]=function(e,t,n){const r=Be.createScalarValue(-1,n);return Yl([],t,r,e,n)}(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,o)}},Nh=za.nonMaxSuppressionV3Impl;const Ah={kernelName:"NonMaxSuppressionV3",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r;sc(s,"NonMaxSuppression");const c=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,{selectedIndices:d}=Nh(c,l,a,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Rh=za.nonMaxSuppressionV4Impl;const Mh={kernelName:"NonMaxSuppressionV4",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r;sc(s,"NonMaxSuppressionPadded");const l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=Rh(l,d,a,i,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},_h=za.nonMaxSuppressionV5Impl;const Fh={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r;sc(s,"NonMaxSuppressionWithScore");const l=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:y}=_h(l,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Oh={kernelName:"NotEqual",backendName:"cpu",kernelFunc:Fc("NotEqual",pc(((e,t)=>e!==t?1:0)),null,"bool")};const Dh={kernelName:"OneHot",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:o,onValue:a,offValue:i}=r;sc(s,"oneHot");const u=Be.sizeFromShape(s.shape),c=new Float32Array(u*o);c.fill(i);const l=n.data.get(s.dataId).values;for(let e=0;e<u;++e)l[e]>=0&&l[e]<o&&(c[e*o+l[e]]=a);return n.makeTensorInfo([...s.shape,o],"int32",c)}};function Ch(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Ac({inputs:{input:r},backend:n}),t=Ch({inputs:{x:e},backend:n}),s=xl({inputs:{input:r},backend:n}),o=Ch({inputs:{x:s},backend:n}),a=vc({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),a}return Td({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Bh={kernelName:"ZerosLike",backendName:"cpu",kernelFunc:Ch};const Uh={kernelName:"OnesLike",backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=Ac({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),o=xl({inputs:{input:s},backend:r}),a=Ch({inputs:{x:o},backend:r}),i=vc({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(a),i}return Td({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function $h(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return md({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,a=t[0].dtype;t.forEach((e=>{Be.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),Be.assert(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=vl({inputs:t.map((e=>{const t=md({inputs:{input:e},backend:n,attrs:{dim:s}});return i.push(t),t})),backend:n,attrs:{axis:s}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Ph={kernelName:"Pack",backendName:"cpu",kernelFunc:$h};const Lh={kernelName:"PadV2",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,constantValue:a}=r;sc(s,"pad");const i=o.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=o.map((e=>e[0])),c=n.data.get(s.dataId).values,l=Be.sizeFromShape(s.shape),d=s.shape.length,h=Be.computeStrides(s.shape),p=Be.sizeFromShape(i),f=i.length,m=Be.computeStrides(i),g=Be.getTypedArrayFromDType(s.dtype,p);0!==a&&g.fill(a);for(let e=0;e<l;e++){const t=Be.indexToLoc(e,d,h).map(((e,t)=>e+u[t]));g[Be.locToIndex(t,f,m)]=c[e]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}},zh={kernelName:"Pow",backendName:"cpu",kernelFunc:Fc("Pow",pc(((e,t)=>Math.pow(e,t))))};const Wh={kernelName:"Prod",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:a}=r;sc(s,"prod");const i=s.shape.length,u=Be.parseAxisParam(o,s.shape),c=$s.getAxesPermutation(u,i);let l=u,d=s;const h=[];null!=c&&(d=Gc({inputs:{x:s},backend:n,attrs:{perm:c}}),h.push(d),l=$s.getInnerMostAxes(l.length,i));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=function(e,t,n,r){const[s,o]=$s.computeOutAndReduceShapes(e,r),a=tn(t,"int32"),i=Be.makeZerosTypedArray(Be.sizeFromShape(s),a),u=Be.sizeFromShape(o);for(let e=0;e<i.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:s,outDtype:a}}(d.shape,d.dtype,p,l);let y=m;return a&&(y=$s.expandShapeToKeepDim(m,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Hh(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),o=Be.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}const qh={kernelName:"Range",backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:o,step:a}=n,i=Hh(r,s,a,o);return t.makeTensorInfo([i.length],o,i)}},Kh={kernelName:"Reciprocal",backendName:"cpu",kernelFunc:oc("Reciprocal",(e=>1/e))};const Gh={kernelName:"ResizeBilinear",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:a,size:i}=r;sc(s,"resizeBilinear");const u=Be.computeStrides(s.shape),[c,l]=i,[d,h,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(Be.sizeFromShape([d,c,l,f])),y=[o&&c>1?h-1:h,o&&l>1?p-1:p],k=[o&&c>1?c-1:c,o&&l>1?l-1:l];let b=0;const w=y[0]/k[0],E=y[1]/k[1];for(let e=0;e<d;e++)for(let t=0;t<c;t++){let n;n=a?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,o=Math.min(h-1,Math.ceil(n)),i=e*u[0]+r*u[1],c=e*u[0]+o*u[1];for(let e=0;e<l;e++){let t;t=a?E*(e+.5)-.5:E*e;const n=Math.max(0,Math.floor(t)),r=t-n,o=Math.min(p-1,Math.ceil(t)),l=i+n*u[2],d=c+n*u[2],h=i+o*u[2],y=c+o*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[d+e],o=t+(m[h+e]-t)*r,a=o+(n+(m[y+e]-n)*r-o)*s;g[b++]=a}}}return n.makeTensorInfo([d,c,l,f],"float32",g)}};const jh={kernelName:"ResizeBilinearGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:o}=t,{alignCorners:a}=r;sc([o,s],"resizeBilinearGrad");const i=Be.computeStrides(s.shape),[u,c,l,d]=s.shape,[,h,p]=o.shape,f=new Float32Array(u*c*l*d),m=[a&&h>1?c-1:c,a&&p>1?l-1:l],g=[a&&h>1?h-1:h,a&&p>1?p-1:p],y=m[0]/g[0],k=m[1]/g[1],b=n.data.get(o.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*i[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),c-1),o=t+r*i[1],a=t+s*i[1],u=n-r,h=1-u;for(let e=0;e<p;e++){const t=e*k,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),s=t-n,c=1-s,p=o+n*i[2],m=o+r*i[2],g=a+n*i[2],y=a+r*i[2],E=h*c,I=h*s,x=u*c,S=u*s;for(let e=0;e<d;e++){const t=b[w++];f[p+e]+=t*E,f[m+e]+=t*I,f[g+e]+=t*x,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,l,c,d],"float32",f)}};const Vh={kernelName:"ResizeNearestNeighbor",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:a,size:i}=r;sc(s,"resizeNearestNeighbor");const u=Be.computeStrides(s.shape),[c,l]=i,[d,h,p,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(d*c*l*f),y=[o&&c>1?h-1:h,o&&l>1?p-1:p],k=[o&&c>1?c-1:c,o&&l>1?l-1:l],b=y[0]/k[0],w=y[1]/k[1];let E=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<c;e++){const n=a?b*(e+.5):b*e;let r=Math.min(h-1,o?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<l;e++){const t=a?w*(e+.5):w*e;let n=Math.min(p-1,o?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[E++]=t}}}}return n.makeTensorInfo([d,c,l,f],s.dtype,g)}};const Yh={kernelName:"ResizeNearestNeighborGrad",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:o}=t,{alignCorners:a}=r;sc([o,s],"resizeNearestNeighborGrad");const i=Be.computeStrides(s.shape),u=Be.computeStrides(o.shape),[c,l,d,h]=s.shape,[,p,f]=o.shape,m=new Float32Array(c*l*d*h),g=n.data.get(o.dataId).values,y=[a&&p>1?l-1:l,a&&f>1?d-1:d],k=[a&&p>1?p-1:p,a&&f>1?f-1:f],b=y[0]/k[0],w=y[1]/k[1],E=1/b,I=1/w,x=2*Math.ceil(E)+2,S=2*Math.ceil(I)+2;for(let e=0;e<c;e++){const t=e*i[0];for(let e=0;e<l;e++){const n=t+e*i[1],r=Math.floor(e*E),s=Math.floor(r-x/2);for(let r=0;r<d;r++){const o=n+r*i[2],c=Math.floor(r*I),y=Math.floor(c-S/2);for(let n=0;n<h;n++){let i=0;for(let o=0;o<x;o++){const c=o+s;if(c<0||c>=p)continue;const h=t+c*u[1],m=c*b;if(e===Math.min(l-1,a?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const s=h+t*u[2],o=t*w;r===Math.min(d-1,a?Math.round(o):Math.floor(o))&&(i+=g[s+n])}}m[o+n]=i}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const Zh={kernelName:"Reverse",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:o}=r;sc(s,"reverse");const a=s.shape.length,i=Be.parseAxisParam(o,s.shape);if(0===a)return cc({inputs:{x:s},backend:n});const u=new $t(s.shape,s.dtype),c=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();i.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(c.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Xh={kernelName:"RotateWithOffset",backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:o,center:a}=t,i=n,u=Be.getTypedArrayFromDType(r.dtype,Be.sizeFromShape(r.shape)),[c,l,d,h]=r.shape,[p,f]=$s.getImageCenter(a,l,d),m=Math.sin(s),g=Math.cos(s),y=i.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let r=0;r<d;r++){const s=r*h;for(let a=0;a<h;a++){const i=[c,e,r,a],k=i[2],b=i[1];let w=(k-p)*g-(b-f)*m,E=(k-p)*m+(b-f)*g;w=Math.round(w+p),E=Math.round(E+f);let I=o;if("number"!=typeof o&&(I=3===a?255:o[a]),w>=0&&w<d&&E>=0&&E<l){I=y[t+E*(d*h)+w*h+a]}u[t+n+s+a]=I}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Jh={kernelName:"Round",backendName:"cpu",kernelFunc:oc("Round",(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}))},Qh={kernelName:"Rsqrt",backendName:"cpu",kernelFunc:ac("Rsqrt",Ec((e=>1/Math.sqrt(e))))};function ep(e,t,n,r,s,o,a,i,u,c){const l=[r/s,s],d=e.values,h=t.values;if(0===r)return os(n,t.dtype);const p=os(l,t.dtype);"string"==typeof u||"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<o;e++){const o=[];let u=0;for(let t=0;t<a;t++){const n=d[e*a+t];o.push(n),u+=n*i[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${o} does not index into ${n}`);for(let n=0;n<s;n++)c?p.values[u*s+n]+=h[e*s+n]:p.values[u*s+n]=0===t.rank?h[0]:h[e*s+n]}return p}const tp={kernelName:"ScatterNd",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:o}=t,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=$s.calculateShapes(o,s,a),h=ep(n.bufferSync(s),n.bufferSync(o),a,d,c,u,i,l,0,!0);return n.makeTensorInfo(a,h.dtype,h.values)}};function np(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function rp(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}function sp(e,t,n,r,s,o){const a=Be.getArrayFromDType("int32",n*s);for(let i=0;i<n;++i){const n=e.slice(i*r,(i+1)*r),u=i*s;for(let e=0;e<s;++e)a[u+e]="left"===o?np(n,t[e+u]):rp(n,t[e+u])}return a}const op={kernelName:"SearchSorted",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:o}=t,{side:a}=r,i=sp(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],a);return n.makeTensorInfo(o.shape,"int32",i)}};const ap={kernelName:"Select",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:o}=t;sc([r,s,o],"select");const a=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,l=tn(s.dtype,o.dtype),d=Be.makeZerosTypedArray(Be.sizeFromShape(s.shape),l);let h=0;const p=0===a||a>1||1===s.shape.length?1:Be.sizeFromShape(s.shape.slice(1));for(let e=0;e<i.length;e++)for(let t=0;t<p;t++)1===i[e]?d[h++]=u[e]:d[h++]=c[e];return n.makeTensorInfo(s.shape,l,d)}},ip=$s.SELU_SCALEALPHA,up=$s.SELU_SCALE,cp={kernelName:"Selu",backendName:"cpu",kernelFunc:oc("Selu",(e=>e>=0?up*e:ip*(Math.exp(e)-1)))},lp={kernelName:"Sign",backendName:"cpu",kernelFunc:oc("Sign",(e=>e<0?-1:e>0?1:0))},dp={kernelName:"Sin",backendName:"cpu",kernelFunc:oc("Sin",(e=>Math.sin(e)))},hp={kernelName:"Sinh",backendName:"cpu",kernelFunc:oc("Sinh",(e=>Math.sinh(e)))},pp=Math.log(1.1920928955078125e-7)+2,fp={kernelName:"Softplus",backendName:"cpu",kernelFunc:oc("Softplus",(e=>{const t=e>-pp,n=e<pp,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s}))};const mp={kernelName:"SpaceToBatchND",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,paddings:a}=r;sc([s],"spaceToBatchND");const i=Be.sizeFromShape(o),u=[[0,0]];u.push(...a);for(let e=1+o.length;e<s.shape.length;++e)u.push([0,0]);const c=Lh.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),l=$s.getReshaped(c.shape,o,i,!1),d=$s.getPermuted(l.length,o.length,!1),h=$s.getReshapedPermuted(c.shape,o,i,!1),p=Bc({inputs:{x:c},backend:n,attrs:{shape:l}}),f=Gc({inputs:{x:p},backend:n,attrs:{perm:d}}),m=Bc({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function gp(e,t,n,r,s,o,a){const i=t[0],u=o[0],c=new Array(u),l=new Array(i),d=t[1];if(0===u){if(0!==i)throw new Error($s.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));return[Be.getArrayFromDType(n,0),[0,d],Be.getArrayFromDType(s,0),c,l]}let h=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*d];if(n<0)throw new Error($s.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=u)throw new Error($s.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,u));++f[n],h=h&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];c[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){const t=e,n=r;for(let e=0;e<i;++e)l[e]=e;return[t,[i,d],n,c,l]}{const t=f[u-1],o=Be.getArrayFromDType(n,t*d),h=Be.getArrayFromDType(s,t),p=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*d],s=p[n],a=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<d;++n)o[a*d+n]=e[t*d+n];h[a]=r[t],l[t]=a}for(let e=0;e<u;++e){if(0===p[e]){const t=0===e?0:f[e-1];o[t*d+0]=e;for(let e=1;e<d;++e)o[t*d+e]=0;h[t]=a}}return[o,[t,d],h,c,l]}}const yp={kernelName:"SparseFillEmptyRows",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:o,defaultValue:a}=t;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${o.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,l=n.data.get(a.dataId).values[0],[d,h,p,f,m]=gp(i,r.shape,r.dtype,u,s.dtype,c,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function kp(e,t,n,r,s){const o=Be.sizeFromShape(r),a=t[0],i=s.length,u=[];let c=1,l=-1;for(let e=0;e<i;++e){const t=s[e];if(-1===t){if(-1!==l)throw new Error($s.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,e));l=e,u.push(1)}else{if(t<0)throw new Error($s.getSparseReshapeNegativeOutputDimErrorMessage(e,t));c*=t,u.push(t)}}if(-1!==l){if(c<=0)throw new Error($s.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/c);if(c*e!==o)throw new Error($s.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[l]=e}if(Be.sizeFromShape(u)!==o)throw new Error($s.getSparseReshapeInputOutputMismatchErrorMessage(r,u));const d=r.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*u[e+1]}const f=Be.getArrayFromDType(n,a*i);for(let t=0;t<a;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*h[r];for(let e=0;e<i;++e)f[t*i+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[a,i],u]}const bp={kernelName:"SparseReshape",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:o}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(o.dataId).values),[c,l,d]=kp(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(l,r.dtype,c),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}};function wp(e,t,n,r,s,o=!1,a=0){const i=r.length,u=[t[0],e.length/t[0]],c=u[1],l=i>0?s[i-1]+1:0;if(l<0)throw new Error($s.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=l;const h=d.reduce(((e,t)=>e*t),1),p=Be.getArrayFromDType(n,h);if(0===i)return l>0&&p.fill(a),[p,d];if(l<=0)throw new Error($s.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=s[f];for(;;){let t=0;if(m<i){if(t=s[m],y===t){++m;continue}if(y>=t)throw new Error($s.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=l)throw new Error($s.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,l));y>g&&p.fill(a,g*c,y*c);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error($s.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],u[0]));for(let t=0;t<c;t++)p[y*c+t]+=e[n*c+t]}if(o)for(let e=0;e<c;e++)p[y*c+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>i)break}return g<l&&p.fill(a,g*c,l*c),[p,d]}const Ep={kernelName:"SparseSegmentMean",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:o}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[c,l]=wp(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(l,r.dtype,c)}};const Ip={kernelName:"SparseSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:o}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[c,l]=wp(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(l,r.dtype,c)}};const xp={kernelName:"SparseToDense",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:o,defaultValue:a}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=$s.calculateShapes(o,s,i),p=!1,f=n.bufferSync(s);let m;switch(o.dtype){case"bool":m=ep(f,n.bufferSync(o),i,h,l,c,u,d,Boolean(n.data.get(a.dataId).values[0]),p);break;case"float32":m=ep(f,n.bufferSync(o),i,h,l,c,u,d,n.data.get(a.dataId).values[0],p);break;case"int32":m=ep(f,n.bufferSync(o),i,h,l,c,u,d,n.data.get(a.dataId).values[0],p);break;case"string":m=ep(f,n.bufferSync(o),i,h,l,c,u,d,Be.decodeString(n.data.get(a.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}};const Sp={kernelName:"SplitV",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:o,axis:a}=r,i=Be.parseAxisParam(a,s.shape)[0],u=$s.prepareSplitSize(s,o,i),c=new Array(s.shape.length).fill(0),l=s.shape.slice();return u.map((e=>{const t=[...l];t[i]=e;const r=hl({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},vp=(Ec((e=>Math.sqrt(e))),{kernelName:"Sqrt",backendName:"cpu",kernelFunc:oc("Sqrt",(e=>Math.sqrt(e)))}),Tp={kernelName:"Square",backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;sc(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];o[e]=t*t}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Np={kernelName:"SquaredDifference",backendName:"cpu",kernelFunc:Fc("SquaredDifference",pc(((e,t)=>{const n=e-t;return n*n})))},Ap={kernelName:"Step",backendName:"cpu",kernelFunc:oc("Step",((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}))};function Rp(e,t,n,r){const s=os(e,t.dtype);for(let e=0;e<s.size;e++){const o=s.indexToLoc(e),a=new Array(o.length);for(let e=0;e<a.length;e++)a[e]=o[e]*n[e]+r[e];s.set(t.get(...a),...o)}return s}const Mp={kernelName:"StridedSlice",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r;sc(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:k,end:b,strides:w}=ws.sliceInfo(s.shape,o,a,i,u,c,l,d,h);let E;if(m)E=Bc({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){Be.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=ws.computeOutShape(k,b,w),t=hl({inputs:{x:s},backend:n,attrs:{begin:k,size:e}});E=Bc({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=Rp(p,n.bufferSync(s),w,k);E=n.makeTensorInfo(f,e.dtype,e.values)}return E}};class _p{constructor(e,t,n,r,s,o){this.separator=Be.encodeString(e),this.nGramWidths=t,this.leftPad=Be.encodeString(n),this.rightPad=Be.encodeString(r),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,o){for(let a=0;a<s;++a){const i=this.getPadWidth(o),u=Math.max(0,i-a),c=Math.max(0,i-(s-(a+1))),l=o-(u+c),d=t+(u>0?0:a-i);let h=0;h+=u*this.leftPad.length;for(let t=0;t<l;++t)h+=e[d+t].length;h+=c*this.rightPad.length;h+=(u+c+l-1)*this.separator.length,n[r+a]=new Uint8Array(h);const p=n[r+a];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<l-1;++t)m(e[d+t]),m(this.separator);if(l>0){m(e[d+l-1]);for(let e=0;e<c;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<c-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,o=Be.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),o[e]=o[e-1]+r}const a=new Array(o[s]);for(let n=0;n<s;++n){const r=t[n];let s=o[n];if(this.nGramWidths.forEach((o=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,o);this.createNGrams(e,r,a,s,u,o),s+=u})),this.preserveShort&&s===o[n]){const o=t[n+1]-t[n];if(0===o)continue;const i=o+2*this.padWidth,u=1;this.createNGrams(e,r,a,s,u,i)}}return[a,o]}}function Fp(e,t,n,r,s,o,a,i){return new _p(n,r,s,o,a,i).compute(e,t)}const Op={kernelName:"StringNGrams",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Fp(h,p,s,o,a,i,u,c);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function Dp(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let o=e.indexOf(s);for(;-1!==o;){const t=e.subarray(0,o);n&&0===t.length||r.push(t),o=(e=e.subarray(o+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(s,o);n&&0===t.length||r.push(t),s=o+1}}function Cp(e,t,n){const r=e.length,s=[];let o=0,a=0;const i=new Array(r);for(let u=0;u<r;++u){const r=s.length;Dp(e[u],t,n,s);const c=s.length-r;i[u]=c,o+=c,a=Math.max(a,c)}const u=Be.getArrayFromDType("int32",2*o),c=new Array(o),l=[r,a];let d=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)u[2*d]=e,u[2*d+1]=t,c[d]=s[d],++d;return[u,c,l]}const Bp={kernelName:"StringSplit",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:o,delimiter:a}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values[0],[c,l,d]=Cp(i,u,s),h=l.length;return[n.makeTensorInfo([h,2],"int32",c),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function Up(e,t){const n=Be.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Be.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const $p={kernelName:"StringToHashBucketFast",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=Up(n.data.get(o.dataId).values,s);return n.makeTensorInfo(o.shape,"int32",a)}},Pp={kernelName:"Tan",backendName:"cpu",kernelFunc:oc("Tan",(e=>Math.tan(e)))},Lp=oc("Tanh",(e=>Math.tanh(e)));function zp(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=os(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const o=e.locToIndex(s);r.values[t]=e.values[o]}return r}const Wp=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Hp(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,o=t-n+1,a=Math.log(s),i=.5*Math.exp(2*a/3),u=.5*Math.sqrt(a*i*(s-i)/s)*Math.sign(o-s/2);Hp(e,t,Math.max(n,Math.floor(t-o*i/s+u)),Math.min(r,Math.floor(t+(s-o)*i/s+u)))}const s=e[t];let o=n,a=r;for(Be.swap(e,n,t),Wp(e[r],s)>0&&Be.swap(e,n,r);o<a;){for(Be.swap(e,o,a),o++,a--;Wp(e[o],s)<0;)o+=1;for(;Wp(e[a],s)>0;)a-=1}0===Wp(e[n],s)?Be.swap(e,n,a):(a+=1,Be.swap(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function qp(e,t,n,r,s){const o=t[t.length-1],[a,i]=[e.length/o,o],u=Be.getTypedArrayFromDType(n,a*r),c=Be.getTypedArrayFromDType("int32",a*r);for(let t=0;t<a;t++){const n=t*i,o=e.subarray(n,n+i);let a=new Array(o.length);o.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(Hp(a,r),a=a.slice(0,r)),s&&a.sort(Wp);const l=t*r,d=u.subarray(l,l+r),h=c.subarray(l,l+r);for(let e=0;e<r;e++)d[e]=a[e].value,h[e]=a[e].index}const l=t.slice();return l[l.length-1]=r,[os(l,n,u),os(l,"int32",c)]}function Kp(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Be.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Be.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Be.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Gp(e,t,n,r,s,o,a,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[a*r+i*s+u*o+c]:l}function jp(e,t,n,r,s,o,a,i,u,c,l){return Gp(e,t,n,r,s,o,a,Math.round(i),Math.round(u),c,l)}function Vp(e,t,n,r,s,o,a,i,u,c,l){const d=Math.floor(i),h=Math.floor(u),p=d+1,f=h+1;return(p-i)*((f-u)*Gp(e,t,n,r,s,o,a,d,h,c,l)+(u-h)*Gp(e,t,n,r,s,o,a,d,f,c,l))+(i-d)*((f-u)*Gp(e,t,n,r,s,o,a,p,h,c,l)+(u-h)*Gp(e,t,n,r,s,o,a,p,f,c,l))}function Yp(e,t,n,r){const s=Be.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let e=0;e<s;e++)o[0]*=n[e];o[1]=n[s];for(let e=s+1;e<n.length;e++)o[2]*=n[e];const a={},i=new Int32Array(n[s]),u=new $t(o,r,e),c=[],l=1===o[0]&&1===o[2];for(let t=0;t<n[s];t++){let n;if(l)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==a[n])i[t]=a[n];else{const e=Object.keys(a).length;a[n]=e,i[t]=e,c.push(t)}}const d=o.slice();d[1]=Object.keys(a).length;const h=new $t(d,r);c.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=d[1],{outputValues:h.values,outputShape:p,indices:i}}const Zp={kernelName:"UnsortedSegmentSum",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:o}=t,{numSegments:a}=r;sc(s,"unsortedSegmentSum");const i=[],u=[],c=s.shape.length-o.shape.length;let l=o;for(let e=0;e<c;++e){const t=md({inputs:{input:l},backend:n,attrs:{dim:e+1}});l=t,u.push(t)}for(let e=0;e<a;++e){const t=Be.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),o=rd({inputs:{a:r,b:l},backend:n}),a=Mc({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),c=Xl({inputs:{a:a,b:s},backend:n}),d=Ql({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});i.push(d),u.push(r),u.push(o),u.push(a),u.push(c),u.push(d)}const d=$h({inputs:i,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Xp=[Lc,zc,Wc,Hc,Cc,qc,Vc,Yc,Zc,Xc,Jc,Qc,el,tl,nl,il,ul,cl,ll,Pc,dl,fl,yl,kl,_c,bl,wl,Tc,El,Tl,Al,Rl,Ml,_l,Fl,Ol,Dl,Cl,Bl,Ul,$l,Pl,Ll,Wl,Hl,ql,Kl,Gl,jl,Vl,td,uc,nd,sd,hd,fd,gd,yd,vd,Nd,Ad,Rd,Md,_d,Fd,Dd,Bd,Ud,$d,lc,Pd,Sl,Ld,zd,Wd,hc,Hd,qd,Gd,jd,Vd,Yd,Zd,Xd,Jd,Qd,nh,rh,sh,oh,ah,ih,ch,lh,dh,hh,ph,fh,vh,Jl,Th,Ah,Mh,Fh,Oh,Dh,Uh,Ph,Lh,zh,gc,Wh,qh,Rc,bd,Kh,kc,wc,Uc,Gh,jh,Vh,Yh,Zh,Xh,Jh,Qh,tp,op,ap,cp,xc,lp,dp,hp,pl,Sh,fp,mp,yp,bp,Ep,Ip,xp,Sp,vp,Tp,Np,Ap,Mp,Op,Bp,$p,Ed,ed,Pp,{kernelName:"Tanh",backendName:"cpu",kernelFunc:Lp},{kernelName:"Tile",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;sc(s,"tile");const a=zp(n.bufferSync(s),o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}},{kernelName:"TopK",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:a}=r;sc(s,"topk");const i=n.data.get(s.dataId).values,[u,c]=qp(i,s.shape,s.dtype,o,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}},{kernelName:"Transform",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=n,[l,d,h,p]=s.shape,[f,m]=null!=c?c:[d,h],g=[l,f,m,p],y=Be.computeStrides(s.shape),k=y[0],b=y[1],w=y[2],E=Be.getTypedArrayFromDType(s.dtype,Be.sizeFromShape(g));E.fill(u);const I=r.data.get(s.dataId).values,x=r.data.get(o.dataId).values;for(let e=0;e<l;++e){const t=1===o.shape[0]?x:x.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let o;const c=t[6]*r+t[7]*n+1;if(0===c)continue;const l=(t[0]*r+t[1]*n+t[2])/c,p=(t[3]*r+t[4]*n+t[5])/c,f=Kp(l,h,i),m=Kp(p,d,i);switch(a){case"nearest":o=jp(I,d,h,k,b,w,e,m,f,s,u);break;case"bilinear":o=Vp(I,d,h,k,b,w,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}E[e*k+n*b+r*w+s]=o}return r.makeTensorInfo(g,s.dtype,E)}return{dataId:r.write(E,g,s.dtype),shape:s.shape,dtype:s.dtype}}},jc,{kernelName:"Unique",backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:o}=t;sc(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:i,outputShape:u,indices:c}=Yp(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}},{kernelName:"Unpack",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,i=s.shape[o],u=new Array(a-1);let c=0;for(let e=0;e<a;e++)e!==o&&(u[c++]=s.shape[e]);const l=new Array(a).fill(0),d=s.shape.slice();d[o]=1;const h=new Array(i);for(let e=0;e<h.length;e++){l[o]=e;const t=hl({inputs:{x:s},backend:n,attrs:{begin:l,size:d}});h[e]=Bc({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},Zp,Bh];for(const e of Xp)De(e);const Jp=za.whereImpl;class Qp extends i{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a(this,Wi())}nextDataId(){return Qp.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ae().get("IS_NODE")&&$s.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Be.isString(n[0])){const s=n.map((e=>Be.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return $s.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Be.decodeString(e)));return os(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return os(e.shape,e.dtype,t)}makeOutput(e,t,n){return Wi().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Be.now();e();return{kernelMs:Be.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){sc([e],"where");const t=this.readSync(e.dataId);return Jp(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Qp.nextDataId=0,function(e,t,n=1){ln.registerBackend(e,t,n)}("cpu",(()=>new Qp),1);var ef,tf={};
/* @license
Papa Parse
v5.3.2
https://github.com/mholt/PapaParse
License: MIT
*/ef=function e(){var t="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==t?t:{},n=!t.document&&!!t.postMessage,r=n&&/blob:/i.test((t.location||{}).protocol),s={},o=0,a={parse:function(n,r){var i=(r=r||{}).dynamicTyping||!1;if(E(i)&&(r.dynamicTypingFunction=i,i={}),r.dynamicTyping=i,r.transform=!!E(r.transform)&&r.transform,r.worker&&a.WORKERS_SUPPORTED){var u=function(){if(!a.WORKERS_SUPPORTED)return!1;var n,r,i=(n=t.URL||t.webkitURL||null,r=e.toString(),a.BLOB_URL||(a.BLOB_URL=n.createObjectURL(new Blob(["(",r,")();"],{type:"text/javascript"})))),u=new t.Worker(i);return u.onmessage=g,u.id=o++,s[u.id]=u}();return u.userStep=r.step,u.userChunk=r.chunk,u.userComplete=r.complete,u.userError=r.error,r.step=E(r.step),r.chunk=E(r.chunk),r.complete=E(r.complete),r.error=E(r.error),delete r.worker,void u.postMessage({input:n,config:r,workerId:u.id})}var p=null;return a.NODE_STREAM_INPUT,"string"==typeof n?p=r.download?new c(r):new d(r):!0===n.readable&&E(n.read)&&E(n.on)?p=new h(r):(t.File&&n instanceof File||n instanceof Object)&&(p=new l(r)),p.stream(n)},unparse:function(e,t){var n=!1,r=!0,s=",",o="\r\n",i='"',u=i+i,c=!1,l=null,d=!1;!function(){if("object"==typeof t){if("string"!=typeof t.delimiter||a.BAD_DELIMITERS.filter((function(e){return-1!==t.delimiter.indexOf(e)})).length||(s=t.delimiter),("boolean"==typeof t.quotes||"function"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes),"boolean"!=typeof t.skipEmptyLines&&"string"!=typeof t.skipEmptyLines||(c=t.skipEmptyLines),"string"==typeof t.newline&&(o=t.newline),"string"==typeof t.quoteChar&&(i=t.quoteChar),"boolean"==typeof t.header&&(r=t.header),Array.isArray(t.columns)){if(0===t.columns.length)throw new Error("Option columns is empty");l=t.columns}void 0!==t.escapeChar&&(u=t.escapeChar+i),("boolean"==typeof t.escapeFormulae||t.escapeFormulae instanceof RegExp)&&(d=t.escapeFormulae instanceof RegExp?t.escapeFormulae:/^[=+\-@\t\r].*$/)}}();var h=new RegExp(f(i),"g");if("string"==typeof e&&(e=JSON.parse(e)),Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return p(null,e,c);if("object"==typeof e[0])return p(l||Object.keys(e[0]),e,c)}else if("object"==typeof e)return"string"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields||l),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:"object"==typeof e.data[0]?Object.keys(e.data[0]):[]),Array.isArray(e.data[0])||"object"==typeof e.data[0]||(e.data=[e.data])),p(e.fields||[],e.data||[],c);throw new Error("Unable to serialize unrecognized input");function p(e,t,n){var a="";"string"==typeof e&&(e=JSON.parse(e)),"string"==typeof t&&(t=JSON.parse(t));var i=Array.isArray(e)&&0<e.length,u=!Array.isArray(t[0]);if(i&&r){for(var c=0;c<e.length;c++)0<c&&(a+=s),a+=m(e[c],c);0<t.length&&(a+=o)}for(var l=0;l<t.length;l++){var d=i?e.length:t[l].length,h=!1,p=i?0===Object.keys(t[l]).length:0===t[l].length;if(n&&!i&&(h="greedy"===n?""===t[l].join("").trim():1===t[l].length&&0===t[l][0].length),"greedy"===n&&i){for(var f=[],g=0;g<d;g++){var y=u?e[g]:g;f.push(t[l][y])}h=""===f.join("").trim()}if(!h){for(var k=0;k<d;k++){0<k&&!p&&(a+=s);var b=i&&u?e[k]:k;a+=m(t[l][b],k)}l<t.length-1&&(!n||0<d&&!p)&&(a+=o)}}return a}function m(e,t){if(null==e)return"";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var r=!1;d&&"string"==typeof e&&d.test(e)&&(e="'"+e,r=!0);var o=e.toString().replace(h,u);return(r=r||!0===n||"function"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var n=0;n<t.length;n++)if(-1<e.indexOf(t[n]))return!0;return!1}(o,a.BAD_DELIMITERS)||-1<o.indexOf(s)||" "===o.charAt(0)||" "===o.charAt(o.length-1))?i+o+i:o}}};if(a.RECORD_SEP=String.fromCharCode(30),a.UNIT_SEP=String.fromCharCode(31),a.BYTE_ORDER_MARK="\ufeff",a.BAD_DELIMITERS=["\r","\n",'"',a.BYTE_ORDER_MARK],a.WORKERS_SUPPORTED=!n&&!!t.Worker,a.NODE_STREAM_INPUT=1,a.LocalChunkSize=10485760,a.RemoteChunkSize=5242880,a.DefaultDelimiter=",",a.Parser=m,a.ParserHandle=p,a.NetworkStreamer=c,a.FileStreamer=l,a.StringStreamer=d,a.ReadableStreamStreamer=h,t.jQuery){var i=t.jQuery;i.fn.parse=function(e){var n=e.config||{},r=[];return this.each((function(e){if("INPUT"!==i(this).prop("tagName").toUpperCase()||"file"!==i(this).attr("type").toLowerCase()||!t.FileReader||!this.files||0===this.files.length)return!0;for(var s=0;s<this.files.length;s++)r.push({file:this.files[s],inputElem:this,instanceConfig:i.extend({},n)})})),s(),this;function s(){if(0!==r.length){var t,n,s,u=r[0];if(E(e.before)){var c=e.before(u.file,u.inputElem);if("object"==typeof c){if("abort"===c.action)return t=u.file,n=u.inputElem,s=c.reason,void(E(e.error)&&e.error({name:"AbortError"},t,n,s));if("skip"===c.action)return void o();"object"==typeof c.config&&(u.instanceConfig=i.extend(u.instanceConfig,c.config))}else if("skip"===c)return void o()}var l=u.instanceConfig.complete;u.instanceConfig.complete=function(e){E(l)&&l(e,u.file,u.inputElem),o()},a.parse(u.file,u.instanceConfig)}else E(e.complete)&&e.complete()}function o(){r.splice(0,1),s()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine="",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=b(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null),this._handle=new p(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,n){if(this.isFirstChunk&&E(this._config.beforeFirstChunk)){var s=this._config.beforeFirstChunk(e);void 0!==s&&(e=s)}this.isFirstChunk=!1,this._halted=!1;var o=this._partialLine+e;this._partialLine="";var i=this._handle.parse(o,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var u=i.meta.cursor;this._finished||(this._partialLine=o.substring(u-this._baseIndex),this._baseIndex=u),i&&i.data&&(this._rowCount+=i.data.length);var c=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(r)t.postMessage({results:i,workerId:a.WORKER_ID,finished:c});else if(E(this._config.chunk)&&!n){if(this._config.chunk(i,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);i=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(i.data),this._completeResults.errors=this._completeResults.errors.concat(i.errors),this._completeResults.meta=i.meta),this._completed||!c||!E(this._config.complete)||i&&i.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),c||i&&i.meta.paused||this._nextChunk(),i}this._halted=!0},this._sendError=function(e){E(this._config.error)?this._config.error(e):r&&this._config.error&&t.postMessage({workerId:a.WORKER_ID,error:e,finished:!1})}}function c(e){var t;(e=e||{}).chunkSize||(e.chunkSize=a.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(t=new XMLHttpRequest,this._config.withCredentials&&(t.withCredentials=this._config.withCredentials),n||(t.onload=w(this._chunkLoaded,this),t.onerror=w(this._chunkError,this)),t.open(this._config.downloadRequestBody?"POST":"GET",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var r in e)t.setRequestHeader(r,e[r])}if(this._config.chunkSize){var s=this._start+this._config.chunkSize-1;t.setRequestHeader("Range","bytes="+this._start+"-"+s)}try{t.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===t.status&&this._chunkError()}},this._chunkLoaded=function(){4===t.readyState&&(t.status<200||400<=t.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:t.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader("Content-Range");return null===t?-1:parseInt(t.substring(t.lastIndexOf("/")+1))}(t),this.parseChunk(t.responseText)))},this._chunkError=function(e){var n=t.statusText||e;this._sendError(new Error(n))}}function l(e){var t,n;(e=e||{}).chunkSize||(e.chunkSize=a.LocalChunkSize),u.call(this,e);var r="undefined"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,r?((t=new FileReader).onload=w(this._chunkLoaded,this),t.onerror=w(this._chunkError,this)):t=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var s=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,s)}var o=t.readAsText(e,this._config.encoding);r||this._chunkLoaded({target:{result:o}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(t.error)}}function d(e){var t;u.call(this,e=e||{}),this.stream=function(e){return t=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,n=this._config.chunkSize;return n?(e=t.substring(0,n),t=t.substring(n)):(e=t,t=""),this._finished=!t,this.parseChunk(e)}}}function h(e){u.call(this,e=e||{});var t=[],n=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on("data",this._streamData),this._input.on("end",this._streamEnd),this._input.on("error",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):n=!0},this._streamData=w((function(e){try{t.push("string"==typeof e?e:e.toString(this._config.encoding)),n&&(n=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}}),this),this._streamError=w((function(e){this._streamCleanUp(),this._sendError(e)}),this),this._streamEnd=w((function(){this._streamCleanUp(),r=!0,this._streamData("")}),this),this._streamCleanUp=w((function(){this._input.removeListener("data",this._streamData),this._input.removeListener("end",this._streamEnd),this._input.removeListener("error",this._streamError)}),this)}function p(e){var t,n,r,s=Math.pow(2,53),o=-s,i=/^\s*-?(\d+\.?|\.\d+|\d+\.\d+)([eE][-+]?\d+)?\s*$/,u=/^(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))$/,c=this,l=0,d=0,h=!1,p=!1,g=[],y={data:[],errors:[],meta:{}};if(E(e.step)){var k=e.step;e.step=function(t){if(y=t,x())I();else{if(I(),0===y.data.length)return;l+=t.data.length,e.preview&&l>e.preview?n.abort():(y.data=y.data[0],k(y,c))}}}function w(t){return"greedy"===e.skipEmptyLines?""===t.join("").trim():1===t.length&&0===t[0].length}function I(){return y&&r&&(v("Delimiter","UndetectableDelimiter","Unable to auto-detect delimiting character; defaulted to '"+a.DefaultDelimiter+"'"),r=!1),e.skipEmptyLines&&(y.data=y.data.filter((function(e){return!w(e)}))),x()&&function(){if(y)if(Array.isArray(y.data[0])){for(var t=0;x()&&t<y.data.length;t++)y.data[t].forEach(n);y.data.splice(0,1)}else y.data.forEach(n);function n(t,n){E(e.transformHeader)&&(t=e.transformHeader(t,n)),g.push(t)}}(),function(){if(!y||!e.header&&!e.dynamicTyping&&!e.transform)return y;function t(t,n){var r,s=e.header?{}:[];for(r=0;r<t.length;r++){var o=r,a=t[r];e.header&&(o=r>=g.length?"__parsed_extra":g[r]),e.transform&&(a=e.transform(a,o)),a=S(o,a),"__parsed_extra"===o?(s[o]=s[o]||[],s[o].push(a)):s[o]=a}return e.header&&(r>g.length?v("FieldMismatch","TooManyFields","Too many fields: expected "+g.length+" fields but parsed "+r,d+n):r<g.length&&v("FieldMismatch","TooFewFields","Too few fields: expected "+g.length+" fields but parsed "+r,d+n)),s}var n=1;return!y.data.length||Array.isArray(y.data[0])?(y.data=y.data.map(t),n=y.data.length):y.data=t(y.data,0),e.header&&y.meta&&(y.meta.fields=g),d+=n,y}()}function x(){return e.header&&0===g.length}function S(t,n){var r;return r=t,e.dynamicTypingFunction&&void 0===e.dynamicTyping[r]&&(e.dynamicTyping[r]=e.dynamicTypingFunction(r)),!0===(e.dynamicTyping[r]||e.dynamicTyping)?"true"===n||"TRUE"===n||"false"!==n&&"FALSE"!==n&&(function(e){if(i.test(e)){var t=parseFloat(e);if(o<t&&t<s)return!0}return!1}(n)?parseFloat(n):u.test(n)?new Date(n):""===n?null:n):n}function v(e,t,n,r){var s={type:e,code:t,message:n};void 0!==r&&(s.row=r),y.errors.push(s)}this.parse=function(s,o,i){var u=e.quoteChar||'"';if(e.newline||(e.newline=function(e,t){e=e.substring(0,1048576);var n=new RegExp(f(t)+"([^]*?)"+f(t),"gm"),r=(e=e.replace(n,"")).split("\r"),s=e.split("\n"),o=1<s.length&&s[0].length<r[0].length;if(1===r.length||o)return"\n";for(var a=0,i=0;i<r.length;i++)"\n"===r[i][0]&&a++;return a>=r.length/2?"\r\n":"\r"}(s,u)),r=!1,e.delimiter)E(e.delimiter)&&(e.delimiter=e.delimiter(s),y.meta.delimiter=e.delimiter);else{var c=function(t,n,r,s,o){var i,u,c,l;o=o||[",","\t","|",";",a.RECORD_SEP,a.UNIT_SEP];for(var d=0;d<o.length;d++){var h=o[d],p=0,f=0,g=0;c=void 0;for(var y=new m({comments:s,delimiter:h,newline:n,preview:10}).parse(t),k=0;k<y.data.length;k++)if(r&&w(y.data[k]))g++;else{var b=y.data[k].length;f+=b,void 0!==c?0<b&&(p+=Math.abs(b-c),c=b):c=b}0<y.data.length&&(f/=y.data.length-g),(void 0===u||p<=u)&&(void 0===l||l<f)&&1.99<f&&(u=p,i=h,l=f)}return{successful:!!(e.delimiter=i),bestDelimiter:i}}(s,e.newline,e.skipEmptyLines,e.comments,e.delimitersToGuess);c.successful?e.delimiter=c.bestDelimiter:(r=!0,e.delimiter=a.DefaultDelimiter),y.meta.delimiter=e.delimiter}var l=b(e);return e.preview&&e.header&&l.preview++,t=s,n=new m(l),y=n.parse(t,o,i),I(),h?{meta:{paused:!0}}:y||{meta:{paused:!1}}},this.paused=function(){return h},this.pause=function(){h=!0,n.abort(),t=E(e.chunk)?"":t.substring(n.getCharIndex())},this.resume=function(){c.streamer._halted?(h=!1,c.streamer.parseChunk(t,!0)):setTimeout(c.resume,3)},this.aborted=function(){return p},this.abort=function(){p=!0,n.abort(),y.meta.aborted=!0,E(e.complete)&&e.complete(y),t=""}}function f(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function m(e){var t,n=(e=e||{}).delimiter,r=e.newline,s=e.comments,o=e.step,i=e.preview,u=e.fastMode,c=t=void 0===e.quoteChar||null===e.quoteChar?'"':e.quoteChar;if(void 0!==e.escapeChar&&(c=e.escapeChar),("string"!=typeof n||-1<a.BAD_DELIMITERS.indexOf(n))&&(n=","),s===n)throw new Error("Comment character same as delimiter");!0===s?s="#":("string"!=typeof s||-1<a.BAD_DELIMITERS.indexOf(s))&&(s=!1),"\n"!==r&&"\r"!==r&&"\r\n"!==r&&(r="\n");var l=0,d=!1;this.parse=function(e,a,h){if("string"!=typeof e)throw new Error("Input must be a string");var p=e.length,m=n.length,g=r.length,y=s.length,k=E(o),b=[],w=[],I=[],x=l=0;if(!e)return B();if(u||!1!==u&&-1===e.indexOf(t)){for(var S=e.split(r),v=0;v<S.length;v++){if(I=S[v],l+=I.length,v!==S.length-1)l+=r.length;else if(h)return B();if(!s||I.substring(0,y)!==s){if(k){if(b=[],F(I.split(n)),U(),d)return B()}else F(I.split(n));if(i&&i<=v)return b=b.slice(0,i),B(!0)}}return B()}for(var T=e.indexOf(n,l),N=e.indexOf(r,l),A=new RegExp(f(c)+f(t),"g"),R=e.indexOf(t,l);;)if(e[l]!==t)if(s&&0===I.length&&e.substring(l,l+y)===s){if(-1===N)return B();l=N+g,N=e.indexOf(r,l),T=e.indexOf(n,l)}else if(-1!==T&&(T<N||-1===N))I.push(e.substring(l,T)),l=T+m,T=e.indexOf(n,l);else{if(-1===N)break;if(I.push(e.substring(l,N)),C(N+g),k&&(U(),d))return B();if(i&&b.length>=i)return B(!0)}else for(R=l,l++;;){if(-1===(R=e.indexOf(t,R+1)))return h||w.push({type:"Quotes",code:"MissingQuotes",message:"Quoted field unterminated",row:b.length,index:l}),D();if(R===p-1)return D(e.substring(l,R).replace(A,t));if(t!==c||e[R+1]!==c){if(t===c||0===R||e[R-1]!==c){-1!==T&&T<R+1&&(T=e.indexOf(n,R+1)),-1!==N&&N<R+1&&(N=e.indexOf(r,R+1));var M=O(-1===N?T:Math.min(T,N));if(e.substr(R+1+M,m)===n){I.push(e.substring(l,R).replace(A,t)),e[l=R+1+M+m]!==t&&(R=e.indexOf(t,l)),T=e.indexOf(n,l),N=e.indexOf(r,l);break}var _=O(N);if(e.substring(R+1+_,R+1+_+g)===r){if(I.push(e.substring(l,R).replace(A,t)),C(R+1+_+g),T=e.indexOf(n,l),R=e.indexOf(t,l),k&&(U(),d))return B();if(i&&b.length>=i)return B(!0);break}w.push({type:"Quotes",code:"InvalidQuotes",message:"Trailing quote on quoted field is malformed",row:b.length,index:l}),R++}}else R++}return D();function F(e){b.push(e),x=l}function O(t){var n=0;if(-1!==t){var r=e.substring(R+1,t);r&&""===r.trim()&&(n=r.length)}return n}function D(t){return h||(void 0===t&&(t=e.substring(l)),I.push(t),l=p,F(I),k&&U()),B()}function C(t){l=t,F(I),I=[],N=e.indexOf(r,l)}function B(e){return{data:b,errors:w,meta:{delimiter:n,linebreak:r,aborted:d,truncated:!!e,cursor:x+(a||0)}}}function U(){o(B()),b=[],w=[]}},this.abort=function(){d=!0},this.getCharIndex=function(){return l}}function g(e){var t=e.data,n=s[t.workerId],r=!1;if(t.error)n.userError(t.error,t.file);else if(t.results&&t.results.data){var o={abort:function(){r=!0,y(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:k,resume:k};if(E(n.userStep)){for(var a=0;a<t.results.data.length&&(n.userStep({data:t.results.data[a],errors:t.results.errors,meta:t.results.meta},o),!r);a++);delete t.results}else E(n.userChunk)&&(n.userChunk(t.results,o,t.file),delete t.results)}t.finished&&!r&&y(t.workerId,t.results)}function y(e,t){var n=s[e];E(n.userComplete)&&n.userComplete(t),n.terminate(),delete s[e]}function k(){throw new Error("Not implemented.")}function b(e){if("object"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var n in e)t[n]=b(e[n]);return t}function w(e,t){return function(){e.apply(t,arguments)}}function E(e){return"function"==typeof e}return r&&(t.onmessage=function(e){var n=e.data;if(void 0===a.WORKER_ID&&n&&(a.WORKER_ID=n.workerId),"string"==typeof n.input)t.postMessage({workerId:a.WORKER_ID,results:a.parse(n.input,n.config),finished:!0});else if(t.File&&n.input instanceof File||n.input instanceof Object){var r=a.parse(n.input,n.config);r&&t.postMessage({workerId:a.WORKER_ID,results:r,finished:!0})}}),(c.prototype=Object.create(u.prototype)).constructor=c,(l.prototype=Object.create(u.prototype)).constructor=l,(d.prototype=Object.create(d.prototype)).constructor=d,(h.prototype=Object.create(u.prototype)).constructor=h,a},"function"==typeof define&&define.amd?define([],ef):tf=ef();const nf=({haystack:e,needle:t})=>{let n=0,r=0;for(;r<t.length;){const s=t[r].toLowerCase();for(;n<e.length&&s!==e[n].toLowerCase();)++n;if(n===e.length)return!1;++r}return!0},rf=({width:e,height:t})=>[2/e,0,-1,0,-2/t,1,0,0,1],sf=(e,t)=>[1,0,e,0,1,t,0,0,1],of=(e,t)=>[e,0,0,0,t,0,0,0,1],af=(...e)=>{const[t,...n]=e;return n.reduce(((e,t)=>{const n=e[0],r=e[1],s=e[2],o=e[3],a=e[4],i=e[5],u=e[6],c=e[7],l=e[8],d=t[0],h=t[1],p=t[2],f=t[3],m=t[4],g=t[5],y=t[6],k=t[7],b=t[8];return[n*d+r*f+s*y,n*h+r*m+s*k,n*p+r*g+s*b,o*d+a*f+i*y,o*h+a*m+i*k,o*p+a*g+i*b,u*d+c*f+l*y,u*h+c*m+l*k,u*p+c*g+l*b]}),t)},uf=(e,t)=>{const n=e[0],r=e[1],s=e[2],o=e[3],a=e[4],i=e[5],u=e[6],c=e[7],l=e[8],d=t[0],h=t[1],p=t[2];return[n*d+r*h+s*p,o*d+a*h+i*p,u*d+c*h+l*p]},cf=e=>{const t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],i=e[6],u=e[7],c=e[8],l=n*a-r*o,d=t*a-r*s,h=t*o-n*s,p=1/(i*l-u*d+c*h);return[p*(o*c-a*u),p*-(n*c-r*u),p*l,p*-(s*c-a*i),p*(t*c-r*i),p*-d,p*(s*u-o*i),p*-(t*u-n*i),p*h]},lf=([e,t,n])=>Math.sqrt(Math.pow(e,2)+Math.pow(t,2)+Math.pow(n,2));let df;var hf;let pf;var ff;let mf;var gf;let yf;var kf;let bf;var wf;(hf=df||(df={}))[hf.NODE=0]="NODE",hf[hf.INPUT=1]="INPUT",hf[hf.OUTPUT=2]="OUTPUT",hf[hf.BODY_NUMBER=3]="BODY_NUMBER",hf[hf.BODY_TEXT=4]="BODY_TEXT",hf[hf.FINDER_INSERT=5]="FINDER_INSERT",hf[hf.FINDER_CHANGE=6]="FINDER_CHANGE",hf[hf.NONE=7]="NONE",(ff=pf||(pf={}))[ff.PAN=0]="PAN",ff[ff.ZOOM=1]="ZOOM",ff[ff.NONE=2]="NONE",(gf=mf||(mf={}))[gf.NO=0]="NO",gf[gf.NUMBER=1]="NUMBER",gf[gf.TEXT=2]="TEXT",gf[gf.TABLE=3]="TABLE",gf[gf.COLUMN=4]="COLUMN",gf[gf.TENSOR=5]="TENSOR",gf[gf.SCATTER=6]="SCATTER",gf[gf.ERROR=7]="ERROR",(kf=yf||(yf={}))[kf.SOURCE=0]="SOURCE",kf[kf.TRANSFORM=1]="TRANSFORM",(wf=bf||(bf={}))[wf.NUMBER=0]="NUMBER",wf[wf.TEXT=1]="TEXT",wf[wf.TRANSFORM=2]="TRANSFORM",wf[wf.UPLOAD_CSV=3]="UPLOAD_CSV";const Ef=({graph:e,operation:t,position:n,effects:r})=>{const{generateUUID:s,promptUserForTable:o}=r,a=s(),i={...e.inputs},u={...e.outputs},c={...e.bodys};switch(t.kind){case bf.NUMBER:{const r=[];for(const e of t.outputs){const t=s();u[t]={uuid:t,node:a,name:e,edges:[]},r.push(t)}const o={kind:mf.NUMBER,uuid:s(),node:a,value:0,text:"0"},l={kind:yf.SOURCE,uuid:a,name:t.name,outputs:r,body:o.uuid,position:n};return c[o.uuid]=o,{graph:{...e,nodes:{...e.nodes,[l.uuid]:{...l,body:l.body}},inputs:i,outputs:u,bodys:c},node:a}}case bf.TEXT:{const r=[];for(const e of t.outputs){const t=s();u[t]={uuid:t,node:a,name:e,edges:[]},r.push(t)}const o={kind:mf.TEXT,uuid:s(),node:a,value:""},l={kind:yf.SOURCE,uuid:a,name:t.name,outputs:r,body:o.uuid,position:n};return c[o.uuid]=o,{graph:{...e,nodes:{...e.nodes,[l.uuid]:{...l,body:l.body}},inputs:i,outputs:u,bodys:c},node:a}}case bf.TRANSFORM:{const r=[];for(const e of t.inputs){const t=s();i[t]={uuid:t,node:a,name:e},r.push(t)}const o=[];for(const e of t.outputs){const t=s();u[t]={uuid:t,node:a,name:e,edges:[]},o.push(t)}const l={kind:mf.NO,uuid:s(),node:a},d={kind:yf.TRANSFORM,uuid:a,name:t.name,inputs:r,body:l.uuid,outputs:o,position:n,func:t.func};return c[l.uuid]=l,{graph:{...e,nodes:{...e.nodes,[d.uuid]:{...d,body:d.body}},inputs:i,outputs:u,bodys:c},node:a}}case bf.UPLOAD_CSV:{const r=[];for(const e of t.outputs){const t=s();u[t]={uuid:t,node:a,name:e,edges:[]},r.push(t)}const l={kind:mf.NO,uuid:s(),node:a},d={kind:yf.SOURCE,uuid:a,name:t.name,outputs:r,body:l.uuid,position:n};c[l.uuid]=l;const h=o().then((e=>new Promise((t=>{t({kind:Gf.UPLOAD_CSV,table:e,node:a})}))));return{graph:{...e,nodes:{...e.nodes,[d.uuid]:{...d,body:d.body}},inputs:i,outputs:u,bodys:c},node:a,event:h}}}},If=(e,t)=>{const n={...e.nodes},r=n[t];delete n[t];const s=[];if(r.kind===yf.TRANSFORM)for(const t of r.inputs){const n=e.inputs[t].edge;n&&s.push(n)}for(const t of r.outputs)for(const n of e.outputs[t].edges)s.push(n);const o={...e.edges},a={...e.inputs},i={...e.outputs};for(const e of s){const t=o[e],n=a[t.input];a[t.input]={...n,edge:void 0};const r=i[t.output];i[t.output]={...r,edges:r.edges.filter((t=>t!==e))},delete o[e]}if(r.kind===yf.TRANSFORM)for(const e of r.inputs)delete a[e];for(const e of r.outputs)delete i[e];const u={...e.bodys};return delete u[r.body],{nodes:n,edges:o,inputs:a,outputs:i,bodys:u}},xf=(e,t)=>{const n=e.inputs[t].edge;if(n){const t=e.edges[n],r=e.outputs[t.output],s={...e.outputs,[t.output]:{...r,edges:r.edges.filter((e=>e!==t.uuid))}},o=e.inputs[t.input],a={...e.inputs,[t.input]:{...o,edge:void 0}},i={...e.edges};delete i[n];const u={...e,outputs:s,inputs:a,edges:i};return Tf(u,o.node)}return e},Sf=(e,t)=>{const n={...e.edges},r={...e.inputs},s={...e.outputs},o=[];for(const a of e.outputs[t].edges){const t=e.edges[a],i=r[t.input];o.push(i.node),r[t.input]={...i,edge:void 0};const u=s[t.output];s[t.output]={...u,edges:u.edges.filter((e=>e!==a))},delete n[a]}const a={...e,outputs:s,inputs:r,edges:n};return o.reduce(((e,t)=>Tf(e,t)),a)},vf=(e,t)=>t.outputs.reduce(((e,t)=>e.outputs[t].edges.reduce(((e,t)=>{const n=e.edges[t].input,r=e.inputs[n].node;return Tf(e,r)}),e)),e),Tf=(e,t)=>{const n=e.nodes[t];switch(n.kind){case yf.SOURCE:return vf(e,n);case yf.TRANSFORM:{const t=n.inputs.map((t=>e.inputs[t].edge)).filter((e=>void 0!==e)).map((t=>{const n=e.edges[t],r=e.outputs[n.output];return e.nodes[r.node].body})).map((t=>e.bodys[t])).filter((e=>!(e.kind===mf.NO||e.kind===mf.ERROR))),r=(()=>{if(t.length>0&&t.length===n.inputs.length){const r=n.func(e.bodys[n.body],...t);return{...e,bodys:{...e.bodys,[r.uuid]:r}}}if(e.bodys[n.body].kind!==mf.NO){const t={kind:mf.NO,uuid:n.body,node:n.uuid};return{...e,bodys:{...e.bodys,[t.uuid]:t}}}return e})();return vf(r,n)}}},Nf=({graph:e,input:t,output:n,generateUUID:r})=>{if(((e,t,n)=>{const r=new Set;r.add(e.outputs[n].node);const s=t=>{if(r.has(t))return!0;r.add(t);for(const n of e.nodes[t].outputs){const t=e.outputs[n];for(const n of t.edges){const t=e.edges[n],r=e.inputs[t.input];if(s(r.node))return!0}}return!1};return s(e.inputs[t].node)})(e,t,n))return{graph:e};const s={uuid:r(),input:t,output:n},o={...e.inputs,[t]:{...e.inputs[t],edge:s.uuid}},a=e.outputs[n],i={...e.outputs,[n]:{...a,edges:[...a.edges,s.uuid]}},u={...e,inputs:o,outputs:i,edges:{...e.edges,[s.uuid]:s}};return{graph:Tf(u,u.inputs[t].node),edge:s.uuid}},Af=(e,t,n)=>{const r=e.nodes[t];return{...e,nodes:{...e.nodes,[t]:{...r,position:n(r.position)}}}},Rf=e=>{switch(e){case"":case"-":case".":return 0;default:return parseFloat(e)}},Mf=(e,t,n)=>{const r=e.bodys[t];if(r.kind===mf.NUMBER){const s=n(r.text),o={...e,bodys:{...e.bodys,[t]:{...r,value:Rf(s),text:s}}},a=o.bodys[t].node;return Tf(o,a)}return e};let _f;var Ff;(Ff=_f||(_f={}))[Ff.NONE=0]="NONE",Ff[Ff.INPUT=1]="INPUT",Ff[Ff.OUTPUT=2]="OUTPUT",Ff[Ff.NODE=3]="NODE",Ff[Ff.BODY=4]="BODY";const Of=e=>({...e,focus:{kind:df.NONE,pointerAction:{kind:pf.NONE},quickSelect:{kind:_f.NONE}}}),Df=(e,t,n)=>{if(e.focus.kind===df.OUTPUT){const r=e.graph.inputs[t],s=e.graph.outputs[e.focus.output];if(r.node===s.node)return{model:e};{const s=void 0!==r.edge?xf(e.graph,r.uuid):e.graph,{graph:o}=Nf({graph:s,input:t,output:e.focus.output,generateUUID:n});return{model:Of({...e,graph:o}),render:!0}}}return{model:{...e,focus:{kind:df.INPUT,input:t,quickSelect:{kind:_f.NONE}}},render:!0}},Cf=(e,t,n)=>{if(e.focus.kind===df.INPUT){const r=e.graph.inputs[e.focus.input];if(e.graph.outputs[t].node===r.node)return{model:e};{const s=void 0!==r.edge?xf(e.graph,r.uuid):e.graph,{graph:o}=Nf({graph:s,input:e.focus.input,output:t,generateUUID:n});return{model:Of({...e,graph:o}),render:!0}}}return{model:{...e,focus:{kind:df.OUTPUT,output:t,quickSelect:{kind:_f.NONE}}},render:!0}},Bf=(e,t,n)=>{switch(n){case"i":{const n={};return Object.keys(e.graph.inputs).forEach(((e,t)=>{n[e]=String.fromCharCode(97+t)})),{model:{...e,focus:{...t,quickSelect:{kind:_f.INPUT,hotkeys:n}}},render:!0}}case"o":{const n={};return Object.keys(e.graph.outputs).forEach(((e,t)=>{n[e]=String.fromCharCode(97+t)})),{model:{...e,focus:{...t,quickSelect:{kind:_f.OUTPUT,hotkeys:n}}},render:!0}}case"n":{const n={};return Object.keys(e.graph.nodes).forEach(((e,t)=>{n[e]=String.fromCharCode(97+t)})),{model:{...e,focus:{...t,quickSelect:{kind:_f.NODE,hotkeys:n}}},render:!0}}case"b":{const n={};return Object.values(e.graph.bodys).filter((e=>[mf.NUMBER,mf.TEXT].includes(e.kind))).forEach(((e,t)=>n[e.uuid]=String.fromCharCode(97+t))),{model:{...e,focus:{...t,quickSelect:{kind:_f.BODY,hotkeys:n}}},render:!0}}default:return{model:e}}},Uf=(e,t,n,r)=>{const s=Object.entries(t.hotkeys).find((([e,t])=>t===n));if(void 0!==s){const[t,n]=s;return Df(e,t,r)}return{model:{...e,focus:{...e.focus,quickSelect:{kind:_f.NONE}}},render:!0}},$f=(e,t,n,r)=>{const s=Object.entries(t.hotkeys).find((([e,t])=>t===n));if(void 0!==s){const[t,n]=s;return Cf(e,t,r)}return{model:{...e,focus:{...e.focus,quickSelect:{kind:_f.NONE}}},render:!0}},Pf=(e,t,n)=>{const r=Object.entries(t.hotkeys).find((([e,t])=>t===n));if(void 0!==r){const[t,n]=r;return{model:{...e,focus:{kind:df.NODE,node:t,drag:!1,move:{left:!1,up:!1,down:!1,right:!1,now:0},quickSelect:{kind:_f.NONE}}},render:!0}}return{model:{...e,focus:{...e.focus,quickSelect:{kind:_f.NONE}}},render:!0}},Lf=(e,t,n)=>{const r=Object.entries(t.hotkeys).find((([e,t])=>t===n));if(void 0===r)return{model:{...e,focus:{...e.focus,quickSelect:{kind:_f.NONE}}},render:!0};{const[t,n]=r;switch(e.graph.bodys[t].kind){case mf.NUMBER:return{model:{...e,focus:{kind:df.BODY_NUMBER,body:t,quickSelect:{kind:_f.NONE}}},render:!0};case mf.TEXT:return{model:{...e,focus:{kind:df.BODY_TEXT,body:t,quickSelect:{kind:_f.NONE},uppercase:!1}},render:!0}}}},zf=(e,{key:t,ctrl:n},r)=>{const s=()=>{const{left:t,down:n,up:s,right:o}=e.panCamera;return!(t||n||s||o)?{now:r(),dispatch:[{kind:Gf.PAN_CAMERA}],cursor:!1}:{now:e.panCamera.now}},o=()=>!(e.zoomCamera.in||e.zoomCamera.out)?{now:r(),dispatch:[{kind:Gf.ZOOM_CAMERA}]}:{now:e.zoomCamera.now},a={x:e.window.width/2,y:e.window.height/2,show:!0};switch(t){case"h":case"ArrowLeft":{const{now:t,dispatch:n,cursor:r}=s();return{model:{...e,panCamera:{...e.panCamera,left:!0,now:t},nodePlacementLocation:a},dispatch:n,cursor:r}}case"j":case"ArrowDown":if(n){const{now:t,dispatch:n}=o();return{model:{...e,zoomCamera:{...e.zoomCamera,out:!0,now:t},panCamera:{...e.panCamera,up:!1,down:!1},nodePlacementLocation:a},dispatch:n}}{const{now:t,dispatch:n,cursor:r}=s();return{model:{...e,zoomCamera:{...e.zoomCamera,in:!1,out:!1},panCamera:{...e.panCamera,down:!0,now:t},nodePlacementLocation:a},dispatch:n,cursor:r}}case"k":case"ArrowUp":if(n){const{now:t,dispatch:n}=o();return{model:{...e,zoomCamera:{...e.zoomCamera,in:!0,now:t},panCamera:{...e.panCamera,up:!1,down:!1},nodePlacementLocation:a},dispatch:n}}{const{now:t,dispatch:n,cursor:r}=s();return{model:{...e,zoomCamera:{...e.zoomCamera,in:!1,out:!1},panCamera:{...e.panCamera,up:!0,now:t},nodePlacementLocation:a},dispatch:n,cursor:r}}case"l":case"ArrowRight":{const{now:t,dispatch:n,cursor:r}=s();return{model:{...e,panCamera:{...e.panCamera,right:!0,now:t},nodePlacementLocation:a},dispatch:n,cursor:r}}default:return{model:e}}},Wf=(e,t)=>{const{left:n,down:r,up:s,right:o}=e.panCamera;if(n||r||s||o){const a=(n?-1:0)+(o?1:0),i=(s?-1:0)+(r?1:0),u=Math.max(Math.sqrt(Math.pow(Math.abs(a),2)+Math.pow(Math.abs(i),2)),1),c=t(),l=.5*(c-e.panCamera.now);return{model:{...e,panCamera:{...e.panCamera,now:c},camera:af(e.camera,sf(a/u*l,i/u*l))},render:!0,schedule:[{after:{milliseconds:10},event:{kind:Gf.PAN_CAMERA}}]}}return{model:e}},Hf=(e,t)=>{if(e.zoomCamera.in||e.zoomCamera.out){const n=t(),r=(n-e.zoomCamera.now)*((e.zoomCamera.in?-1:0)+(e.zoomCamera.out?1:0)),{x:s,y:o}=e.nodePlacementLocation,a=sf(s,o),i=Math.pow(2,.01*r),u=sf(-s,-o),c=af(e.camera,a,of(i,i),u);return{model:{...e,zoomCamera:{...e.zoomCamera,now:n},camera:c},render:!0,schedule:[{after:{milliseconds:10},event:{kind:Gf.ZOOM_CAMERA}}]}}return{model:e}},qf=(e,t,n,r)=>{const{left:s,down:o,up:a,right:i}=t.move,u=!(s||o||a||i),{now:c,dispatch:l}=u?{now:r(),dispatch:[{kind:Gf.MOVE_NODE}]}:{now:t.move.now},d={...e.nodePlacementLocation,show:!1};switch(n){case"h":case"ArrowLeft":return{model:{...e,focus:{...t,move:{...t.move,left:!0,now:c}},nodePlacementLocation:d},dispatch:l};case"j":case"ArrowDown":return{model:{...e,focus:{...t,move:{...t.move,down:!0,now:c}},nodePlacementLocation:d},dispatch:l};case"k":case"ArrowUp":return{model:{...e,focus:{...t,move:{...t.move,up:!0,now:c}},nodePlacementLocation:d},dispatch:l};case"l":case"ArrowRight":return{model:{...e,focus:{...t,move:{...t.move,right:!0,now:c}},nodePlacementLocation:d},dispatch:l};default:return{model:e}}},Kf=(e,t)=>{if(e.focus.kind===df.NODE){const{left:n,down:r,up:s,right:o}=e.focus.move;if(n||r||s||o){const a=(n?-1:0)+(o?1:0),i=(s?-1:0)+(r?1:0),u=Math.max(Math.sqrt(Math.pow(Math.abs(a),2)+Math.pow(Math.abs(i),2)),1),c=t(),l=.5*(c-e.focus.move.now)/lf(uf(cf(e.camera),[0,1,0])),d=Af(e.graph,e.focus.node,(e=>({x:e.x+a/u*l,y:e.y+i/u*l})));return{model:{...e,focus:{...e.focus,move:{...e.focus.move,now:c}},graph:d},render:!0,schedule:[{after:{milliseconds:10},event:{kind:Gf.MOVE_NODE}}]}}return{model:e}}return{model:e}};let Gf;var jf;(jf=Gf||(Gf={}))[jf.POINTER_MOVE=0]="POINTER_MOVE",jf[jf.POINTER_DOWN=1]="POINTER_DOWN",jf[jf.POINTER_UP=2]="POINTER_UP",jf[jf.CLICKED_NODE=3]="CLICKED_NODE",jf[jf.WHEEL=4]="WHEEL",jf[jf.CLICKED_INPUT=5]="CLICKED_INPUT",jf[jf.CLICKED_OUTPUT=6]="CLICKED_OUTPUT",jf[jf.OPEN_FINDER_TIMEOUT=7]="OPEN_FINDER_TIMEOUT",jf[jf.KEYDOWN=8]="KEYDOWN",jf[jf.KEYUP=9]="KEYUP",jf[jf.CLICKED_FINDER_OPTION=10]="CLICKED_FINDER_OPTION",jf[jf.CLICKED_BODY=11]="CLICKED_BODY",jf[jf.CLICKED_BACKGROUND=12]="CLICKED_BACKGROUND",jf[jf.CHANGE_NODE=13]="CHANGE_NODE",jf[jf.DELETE_NODE=14]="DELETE_NODE",jf[jf.DELETE_INPUT_EDGE=15]="DELETE_INPUT_EDGE",jf[jf.DELETE_OUTPUT_EDGES=16]="DELETE_OUTPUT_EDGES",jf[jf.PAN_CAMERA=17]="PAN_CAMERA",jf[jf.ZOOM_CAMERA=18]="ZOOM_CAMERA",jf[jf.RESET_CAMERA=19]="RESET_CAMERA",jf[jf.MOVE_NODE=20]="MOVE_NODE",jf[jf.UPLOAD_TABLE=21]="UPLOAD_TABLE",jf[jf.UPLOAD_CSV=22]="UPLOAD_CSV";const Vf=(e,t)=>Object.keys(e).filter((e=>nf({haystack:e,needle:t}))),Yf=e=>({...e,focus:{kind:df.FINDER_INSERT,search:"",options:Object.keys(e.operations),selectedIndex:0,quickSelect:{kind:_f.NONE},uppercase:!1},openFinderFirstClick:!1}),Zf=(e,t)=>({...e,focus:{kind:df.FINDER_CHANGE,search:"",options:Object.keys(e.operations),selectedIndex:0,quickSelect:{kind:_f.NONE},node:t,uppercase:!1},openFinderFirstClick:!1}),Xf=(e,t,n)=>{const r=e.operations[t],[s,o,a]=uf(e.camera,[e.nodePlacementLocation.x,e.nodePlacementLocation.y,1]),{model:i,event:u}=tm({model:e,operation:r,position:{x:s,y:o},effects:n});return{model:Of(i),render:!0,promise:u}},Jf=(e,t,n,r)=>{const s=e.operations[t];if(s.kind===bf.TRANSFORM){const t=e.graph.nodes[n];switch(t.kind){case yf.TRANSFORM:const o=[],a=[],i=(()=>{const n={...e.graph.inputs};if(t.inputs.length===s.inputs.length)s.inputs.forEach(((r,s)=>{const a=e.graph.inputs[t.inputs[s]];n[a.uuid]={...a,name:r},o.push(a.uuid)}));else if(t.inputs.length<s.inputs.length){t.inputs.forEach(((r,a)=>{const i=e.graph.inputs[t.inputs[a]];n[i.uuid]={...i,name:s.inputs[a]},o.push(i.uuid)}));s.inputs.slice(t.inputs.length).forEach((e=>{const s=r();n[s]={uuid:s,node:t.uuid,name:e},o.push(s)}))}else{s.inputs.forEach(((r,s)=>{const a=e.graph.inputs[t.inputs[s]];n[a.uuid]={...a,name:r},o.push(a.uuid)}));t.inputs.slice(s.inputs.length).forEach((e=>{delete n[e],a.push(e)}))}return n})(),u=(()=>{const n={...e.graph.outputs};return t.outputs.length===s.outputs.length&&s.outputs.forEach(((r,s)=>{const o=e.graph.outputs[t.outputs[s]];n[o.uuid]={...o,name:r}})),n})(),c={...e.graph.bodys,[t.body]:{kind:mf.NO,uuid:t.body,node:t.uuid}},l={...e.graph.nodes,[t.uuid]:{...t,name:s.name,func:s.func,inputs:o}};let d=e.graph;for(const e of a)d=xf(d,e);const h={...d,nodes:l,bodys:c,inputs:i,outputs:u},p=Tf(h,n);return{model:Of({...e,graph:p}),render:!0};case yf.SOURCE:return{model:Of(e),render:!0}}}return{model:Of(e),render:!0}},Qf=(e,t,n)=>{const r=n(t.search);return{model:{...e,focus:{...t,options:Vf(e.operations,r),search:r}},render:!0}},em=(e,t,n)=>({model:{...e,graph:Mf(e.graph,t,n)},render:!0}),tm=({model:e,operation:t,position:n,effects:r})=>{const{graph:s,node:o,event:a}=Ef({graph:e.graph,operation:t,position:n,effects:r});return{model:{...e,graph:s,nodeOrder:[...e.nodeOrder,o]},node:o,event:a}},nm=(e,t)=>{const n=Of({...e,graph:If(e.graph,t),nodeOrder:e.nodeOrder.filter((e=>e!==t))});return e.graph.nodes[t].outputs.reduce(((t,n)=>e.graph.outputs[n].edges.reduce(((t,n)=>{const r=e.graph.edges[n].input,s=e.graph.inputs[r].node,o=Tf(t.graph,s);return{...t,graph:o}}),t)),n)},rm=(e,t,n)=>{const r=n(e.graph.bodys[t]),s={...e.graph,bodys:{...e.graph.bodys,[t]:r}},o=s.bodys[t].node;return{model:{...e,graph:Tf(s,o)},render:!0}},sm=(e,t,n)=>{const{generateUUID:r,currentTime:s}=n,{key:o}=t;switch(e.focus.quickSelect.kind){case _f.INPUT:return Uf(e,e.focus.quickSelect,o,r);case _f.OUTPUT:return $f(e,e.focus.quickSelect,o,r);case _f.NODE:return Pf(e,e.focus.quickSelect,o);case _f.BODY:return Lf(e,e.focus.quickSelect,o);case _f.NONE:switch(e.focus.kind){case df.FINDER_INSERT:case df.FINDER_CHANGE:switch(o){case"Backspace":return Qf(e,e.focus,(e=>e.slice(0,-1)));case"Shift":case"Alt":case"Control":case"Meta":case"Tab":return{model:e};case"Enter":if(!(e.focus.options.length>0))return{model:Of(e),render:!0};{const t=e.focus.options[e.focus.selectedIndex];switch(e.focus.kind){case df.FINDER_INSERT:return Xf(e,t,n);case df.FINDER_CHANGE:return Jf(e,t,e.focus.node,r)}}case"Escape":return{model:Of(e),render:!0};case"ArrowUp":return{model:{...e,focus:{...e.focus,selectedIndex:Math.max(0,e.focus.selectedIndex-1)}},render:!0};case"ArrowDown":return{model:{...e,focus:{...e.focus,selectedIndex:Math.min(e.focus.selectedIndex+1,e.focus.options.length-1,9)}},render:!0};default:if(!t.ctrl)return Qf(e,e.focus,(e=>e+o));switch(o){case"j":return{model:{...e,focus:{...e.focus,selectedIndex:Math.min(e.focus.selectedIndex+1,e.focus.options.length-1,9)}},render:!0};case"k":return{model:{...e,focus:{...e.focus,selectedIndex:Math.max(0,e.focus.selectedIndex-1)}},render:!0};default:return Qf(e,e.focus,(e=>e+o))}}case df.BODY_NUMBER:switch(o){case"Backspace":return em(e,e.focus.body,(e=>{const t=e.slice(0,-1);return""===t?"0":t}));case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"0":return em(e,e.focus.body,(e=>"0"===e?o:"-0"===e?`-${o}`:e+o));case".":return em(e,e.focus.body,(e=>e.includes(".")?e:e+o));case"-":case"+":return em(e,e.focus.body,(e=>e.length&&"-"===e[0]?e.slice(1):"-"+e));case"c":return em(e,e.focus.body,(()=>"0"));case"Enter":case"Escape":return{model:Of(e),render:!0};default:return Bf(e,e.focus,o)}case df.BODY_TEXT:{const t=e.graph.bodys[e.focus.body];switch(o){case"Enter":case"Escape":return{model:Of(e),render:!0};case"Shift":return{model:e};case"sft":return{model:{...e,focus:{...e.focus,uppercase:!e.focus.uppercase}},render:!0};case"Backspace":return rm(e,t.uuid,(e=>{const t=e;return{...t,value:t.value.slice(0,-1)}}));default:return rm(e,t.uuid,(e=>{const t=e;return{...t,value:t.value+o}}))}}case df.NODE:switch(o){case"f":return{model:Yf(e),render:!0};case"c":return{model:Zf(e,e.focus.node),render:!0};case"d":case"Backspace":case"Delete":return{model:nm(e,e.focus.node),render:!0};case"Escape":return{model:Of(e),render:!0};default:const t=Bf(e,e.focus,o);return t.render?t:qf(t.model,e.focus,o,s)}case df.INPUT:switch(o){case"f":return{model:Yf(e),render:!0};case"d":case"Backspace":case"Delete":return{model:Of({...e,graph:xf(e.graph,e.focus.input)}),render:!0};case"Escape":return{model:Of(e),render:!0};default:return Bf(e,e.focus,o)}case df.OUTPUT:switch(o){case"f":return{model:Yf(e),render:!0};case"d":case"Backspace":case"Delete":return{model:Of({...e,graph:Sf(e.graph,e.focus.output)}),render:!0};case"Escape":return{model:Of(e),render:!0};default:return Bf(e,e.focus,o)}case df.NONE:switch(o){case"f":return{model:Yf(e),render:!0};case"z":return{model:{...e,camera:[1,0,0,0,1,0,0,0,1]},render:!0};default:const n=Bf(e,e.focus,o);return n.render?n:zf(n.model,t,s)}}}},om=(e,t)=>{switch(e.graph.bodys[t].kind){case mf.NUMBER:return{...e,focus:{kind:df.BODY_NUMBER,body:t,quickSelect:{kind:_f.NONE}}};case mf.TEXT:return{...e,focus:{kind:df.BODY_TEXT,body:t,quickSelect:{kind:_f.NONE},uppercase:!1}}}},am=({x0:e,y0:t,x1:n,y1:r},s)=>e<=s.position.x&&s.position.x<=n&&t<=s.position.y&&s.position.y<=r,im=(e,t)=>{for(let n=e.clickHandlers.length;n>0;--n)for(const{onClick:r,worldSpace:s}of e.clickHandlers[n-1])if(am(s,t))return e.dispatch(r),e;return e},um=e=>({triangles:{vertices:[],colors:[],vertexIndices:[],textureIndex:e,textureCoordinates:[],cameraIndex:[]},lines:{vertices:[],colors:[]}});function*cm(e,t,n,r){const s=(t.x0+t.x1)/2,o=(t.y0+t.y1)/2,a=s+r,i=o,u=(n.x0+n.x1)/2,c=(n.y0+n.y1)/2,l=u-r,d=c;let h=0,p=0,f=!0;for(const t of e){const e=t*t,n=e*t,r=1-t,m=r*r,g=m*r,y=3*m*t,k=3*r*e,b=g*s+y*a+k*l+n*u,w=g*o+y*i+k*d+n*c;f?(yield b,yield w,f=!1):(yield h,yield p),yield b,yield w,h=b,p=w}}const lm=(e,t,n)=>{const r=((e,t,n)=>{const r=(t-e)/(n-1);return Array.from({length:n},((t,n)=>e+r*n))})(0,1,20),s=[];let o=um(0),a=o.triangles.textureIndex.toString();return e.forEach(((e,i)=>{for(const[t,n]of Object.entries(e)){a!==t&&(0!==o.triangles.vertices.length&&s.push(o),o=um(parseInt(t)),a=t);for(const e of n){const t=o.triangles.vertices.length/2;o.triangles.vertices.push(...e.vertices),o.triangles.colors.push(...e.colors);for(const n of e.vertexIndices)o.triangles.vertexIndices.push(n+t);o.triangles.textureCoordinates.push(...e.textureCoordinates),o.triangles.cameraIndex.push(...e.cameraIndex)}}if(t.length>i){for(const{connections:e,scale:s}of t[i]){const t=50*s;for(const{from:s,to:a,color:i}of e){for(const e of cm(r,n[s],n[a],t))o.lines.vertices.push(e);const{red:e,green:u,blue:c,alpha:l}=i;for(let t=0;t<40;++t)o.lines.colors.push(e,u,c,l)}}0!==o.lines.vertices.length&&(s.push(o),o=um(0))}})),0!==o.triangles.vertices.length&&s.push(o),s},dm=(e,t)=>{const n=e.cameras.length;e.cameras.push(t),e.stack.push(n),e.transform=cf(t)},hm=e=>e.stack.slice(-1)[0],pm=e=>{e.stack.pop(),e.transform=cf(e.cameras[hm(e)])},fm=(e,t)=>{const[n,r,s]=uf(e.transform,[t.x0,t.y0,1]),[o,a,i]=uf(e.transform,[t.x1,t.y1,1]);return{x0:n,y0:r,x1:o,y1:a}},mm=(e,t,n)=>{const r=Jm(e.child,t,n);return{size:{width:t.maxWidth,height:t.maxHeight},child:r}},gm=(e,t,n,r)=>{const s=fm(r,{x0:n.x,y0:n.y,x1:n.x+t.size.width,y1:n.y+t.size.height}),o=t.child,a={x:n.x+t.size.width/2-o.size.width/2,y:n.y+t.size.height/2-o.size.height/2};return{worldSpace:s,child:Qm(e.child,o,a,r)}};function*ym(e,t,n,r){yield*eg(e.child,t.child,n.child,r+1)}let km;var bm;let wm;var Em;function Im(...e){const[t,n]=e[0]instanceof Array?[{},e[0]]:[e[0],e[1]];return{kind:Zm.COLUMN,mainAxisAlignment:t.mainAxisAlignment??km.START,crossAxisAlignment:t.crossAxisAlignment??wm.START,children:n}}(bm=km||(km={}))[bm.START=0]="START",bm[bm.CENTER=1]="CENTER",bm[bm.END=2]="END",bm[bm.SPACE_EVENLY=3]="SPACE_EVENLY",bm[bm.SPACE_BETWEEN=4]="SPACE_BETWEEN",(Em=wm||(wm={}))[Em.START=0]="START",Em[Em.CENTER=1]="CENTER",Em[Em.END=2]="END";const xm=(e,t,n)=>{const r={children:[],width:0,totalChildHeight:0},s=e.children.reduce(((e,r)=>{const s=Jm(r,t,n);return e.children.push(s),e.totalChildHeight+=s.size.height,e.width=Math.max(e.width,s.size.width),e}),r),{children:o,width:a,totalChildHeight:i}=s;return{size:{width:a,height:e.mainAxisAlignment==km.START?i:t.maxHeight},totalChildHeight:i,children:o}},Sm=(e,t,n,r)=>{const s=t.size.height-t.totalChildHeight,o={children:[],y:(()=>{switch(e.mainAxisAlignment){case km.START:return n.y;case km.CENTER:return n.y+s/2;case km.END:return n.y+s;case km.SPACE_EVENLY:return n.y+s/(e.children.length+1);case km.SPACE_BETWEEN:return n.y}})()},a=e=>e.size.height,i=e=>e.size.height,u=e=>e.size.height,c=t=>t.size.height+s/(e.children.length+1),l=t=>t.size.height+s/(e.children.length-1),d=(()=>{switch(e.mainAxisAlignment){case km.START:return a;case km.CENTER:return i;case km.END:return u;case km.SPACE_EVENLY:return c;case km.SPACE_BETWEEN:return l}})(),h=e=>n.x,p=e=>n.x+t.size.width/2-e.size.width/2,f=e=>n.x+t.size.width-e.size.width,m=(()=>{switch(e.crossAxisAlignment){case wm.START:return h;case wm.CENTER:return p;case wm.END:return f}})(),g=e.children.reduce(((e,n,s)=>{const o=t.children[s],a={x:m(o),y:e.y},i=Qm(n,o,a,r);return e.children.push(i),e.y+=d(o),e}),o);return{worldSpace:fm(r,{x0:n.x,y0:n.y,x1:n.x+t.size.width,y1:n.y+t.size.height}),children:g.children}};function*vm(e,t,n,r){yield{ui:e,layout:t,geometry:n,z:r};const s=r+1;let o=0;for(const r of e.children)yield*eg(r,t.children[o],n.children[o],s),o+=1}const Tm=e=>e?"number"==typeof e?{top:e,right:e,bottom:e,left:e}:e:{top:0,right:0,bottom:0,left:0},Nm=({padding:e,width:t,height:n,color:r,x:s,y:o,onClick:a,id:i},u)=>({kind:Zm.CONTAINER,padding:Tm(e),width:t,height:n,x:s,y:o,color:r,onClick:a,id:i,child:u}),Am=(e,t,n)=>{const{top:r,right:s,bottom:o,left:a}=e.padding;if(e.child){const i=Jm(e.child,t,n);return{size:{width:e.width??i.size.width+a+s,height:e.height??i.size.height+r+o},child:i}}return{size:{width:e.width?e.width+a+s:t.maxWidth,height:e.height?e.height+r+o:t.maxHeight}}},Rm=(e,t,n,r)=>{const s=n.x+(e.x??0),o=s+t.size.width,a=n.y+(e.y??0),i=a+t.size.height,u=fm(r,{x0:s,x1:o,y0:a,y1:i}),c=(()=>{if(e.child){const n=t.child,o={x:s+e.padding.left,y:a+e.padding.top};return Qm(e.child,n,o,r)}})();if(e.color){const{red:t,green:n,blue:l,alpha:d}=e.color;return{worldSpace:u,vertices:[s,a,s,i,o,a,o,i],colors:[t,n,l,d,t,n,l,d,t,n,l,d,t,n,l,d],vertexIndices:[0,1,2,1,2,3],cameraIndex:Array(4).fill(hm(r)),textureIndex:0,textureCoordinates:Array(8).fill(0),child:c}}return{worldSpace:u,vertices:[],colors:[],vertexIndices:[],cameraIndex:[],textureIndex:0,textureCoordinates:[],child:c}};function*Mm(e,t,n,r){if(yield{ui:e,layout:t,geometry:n,z:r},e.child){const s=t.child,o=n.child;yield*eg(e.child,s,o,r+1)}}function _m(...e){const[t,n]=e[0]instanceof Array?[{},e[0]]:[e[0],e[1]];return{kind:Zm.ROW,mainAxisAlignment:t.mainAxisAlignment??km.START,crossAxisAlignment:t.crossAxisAlignment??wm.START,children:n}}const Fm=(e,t,n)=>{const r={children:[],totalChildWidth:0,height:0},s=e.children.reduce(((e,r)=>{const s=Jm(r,t,n);return e.children.push(s),e.totalChildWidth+=s.size.width,e.height=Math.max(e.height,s.size.height),e}),r),{children:o,totalChildWidth:a,height:i}=s;return{size:{width:e.mainAxisAlignment==km.START?a:t.maxWidth,height:i},totalChildWidth:a,children:o}},Om=(e,t,n,r)=>{const s=t.size.width-t.totalChildWidth,o={children:[],x:(()=>{switch(e.mainAxisAlignment){case km.START:return n.x;case km.CENTER:return n.x+s/2;case km.END:return n.x+s;case km.SPACE_EVENLY:return n.x+s/(e.children.length+1);case km.SPACE_BETWEEN:return n.x}})()},a=e=>e.size.width,i=e=>e.size.width,u=e=>e.size.width,c=t=>t.size.width+s/(e.children.length+1),l=t=>t.size.width+s/(e.children.length-1),d=(()=>{switch(e.mainAxisAlignment){case km.START:return a;case km.CENTER:return i;case km.END:return u;case km.SPACE_EVENLY:return c;case km.SPACE_BETWEEN:return l}})(),h=e=>n.y,p=e=>n.y+t.size.height/2-e.size.height/2,f=e=>n.y+t.size.height-e.size.height,m=(()=>{switch(e.crossAxisAlignment){case wm.START:return h;case wm.CENTER:return p;case wm.END:return f}})(),g=e.children.reduce(((e,n,s)=>{const o=t.children[s],a={x:e.x,y:m(o)},i=Qm(n,o,a,r);return e.children.push(i),e.x+=d(o),e}),o);return{worldSpace:fm(r,{x0:n.x,y0:n.y,x1:n.x+t.size.width,y1:n.y+t.size.height}),children:g.children}};function*Dm(e,t,n,r){yield{ui:e,layout:t,geometry:n,z:r};const s=r+1;let o=0;for(const r of e.children)yield*eg(r,t.children[o],n.children[o],s),o+=1}const Cm=({id:e,onClick:t,camera:n,children:r,connections:s})=>({id:e,onClick:t,kind:Zm.SCENE,camera:n,children:r,connections:s??[]}),Bm=(e,t,n)=>{const r=e.children.map((e=>Jm(e,t,n)));return{size:{width:t.maxWidth,height:t.maxHeight},children:r}},Um=(e,t,n,r)=>{const s=fm(r,{x0:n.x,y0:n.y,x1:n.x+t.size.width,y1:n.y+t.size.height});dm(r,e.camera);const o=e.children.map(((e,s)=>Qm(e,t.children[s],n,r)));return pm(r),{worldSpace:s,children:o}};function*$m(e,t,n,r){yield{ui:e,layout:t,geometry:n,z:r};let s=0;for(const o of e.children){for(const e of eg(o,t.children[s],n.children[s],r))yield e,r=Math.max(r,e.z);s++,r++}}const Pm=e=>({kind:Zm.STACK,children:e}),Lm=(e,t,n)=>{const r=e.children.map((e=>Jm(e,t,n)));return{size:{width:t.maxWidth,height:t.maxHeight},children:r}},zm=(e,t,n,r)=>{const s=e.children.map(((e,s)=>Qm(e,t.children[s],n,r)));return{worldSpace:fm(r,{x0:n.x,y0:n.y,x1:n.x+t.size.width,y1:n.y+t.size.height}),children:s}};function*Wm(e,t,n,r){yield{ui:e,layout:t,geometry:n,z:r};let s=0;for(const o of e.children){for(const e of eg(o,t.children[s],n.children[s],r))yield e,r=Math.max(r,e.z);s+=1,r+=1}}function Hm(...e){const[t,n]="string"==typeof e[0]?[{},e[0]]:[e[0],e[1]];return{kind:Zm.TEXT,font:{family:t.font??"monospace",size:t.size??14},color:t.color??{red:255,green:255,blue:255,alpha:255},str:n}}const qm=({font:e,str:t},n,r)=>{const s=r(e,t),o=0===s.widths.length?0:s.widths.reduce(((e,t)=>e+t));return{measurements:s,size:{width:o,height:e.size}}},Km=(e,t,n)=>{const r=[];let s=n.x;const o=n.y,a=n.y+t;for(const t of e){const e=s,n=s+t;r.push(e,o,e,a,n,o,n,a),s+=t}return r},Gm=(e,{red:t,green:n,blue:r,alpha:s})=>{const o=[];for(let a=0;a<e;++a)o.push(t,n,r,s,t,n,r,s,t,n,r,s,t,n,r,s);return o},jm=e=>{const t=[];let n=0;for(let r=0;r<e;++r)t.push(n,n+1,n+2,n+1,n+2,n+3),n+=4;return t},Vm=(e,t,n,r)=>{const s=t,{measurements:o}=s,{textureIndex:a,textureCoordinates:i,widths:u}=o;return{worldSpace:fm(r,{x0:n.x,y0:n.y,x1:n.x+t.size.width,y1:n.y+t.size.height}),textureIndex:a,textureCoordinates:i.flat(),colors:Gm(u.length,e.color),vertices:Km(u,e.font.size,n),vertexIndices:jm(u.length),cameraIndex:Array(4*u.length).fill(hm(r))}};function*Ym(e,t,n,r){yield{ui:e,layout:t,geometry:n,z:r}}let Zm;var Xm;(Xm=Zm||(Zm={}))[Xm.CENTER=0]="CENTER",Xm[Xm.COLUMN=1]="COLUMN",Xm[Xm.CONTAINER=2]="CONTAINER",Xm[Xm.ROW=3]="ROW",Xm[Xm.SCENE=4]="SCENE",Xm[Xm.STACK=5]="STACK",Xm[Xm.TEXT=6]="TEXT";const Jm=(e,t,n)=>{switch(e.kind){case Zm.CENTER:return mm(e,t,n);case Zm.COLUMN:return xm(e,t,n);case Zm.CONTAINER:return Am(e,t,n);case Zm.ROW:return Fm(e,t,n);case Zm.SCENE:return Bm(e,t,n);case Zm.STACK:return Lm(e,t,n);case Zm.TEXT:return qm(e,0,n)}},Qm=(e,t,n,r)=>{switch(e.kind){case Zm.CENTER:return gm(e,t,n,r);case Zm.COLUMN:return Sm(e,t,n,r);case Zm.CONTAINER:return Rm(e,t,n,r);case Zm.ROW:return Om(e,t,n,r);case Zm.SCENE:return Um(e,t,n,r);case Zm.STACK:return zm(e,t,n,r);case Zm.TEXT:return Vm(e,t,n,r)}};function*eg(e,t,n,r){switch(e.kind){case Zm.CENTER:yield*ym(e,t,n,r);break;case Zm.COLUMN:yield*vm(e,t,n,r);break;case Zm.CONTAINER:yield*Mm(e,t,n,r);break;case Zm.ROW:yield*Dm(e,t,n,r);break;case Zm.SCENE:yield*$m(e,t,n,r);break;case Zm.STACK:yield*Wm(e,t,n,r);break;case Zm.TEXT:yield*Ym(e,t,n,r)}}const tg=(e,t,n,r)=>{const s=r.initial();for(const o of eg(e,t,n,0))r.combine(s,o);return s};var ng={};e(ng,"initial",(()=>ig)),e(ng,"combine",(()=>ug));const rg=(e,t)=>{if(void 0===t.ui.onClick)return e;const n=t.z-e.length+1;for(let t=0;t<n;++t)e.push([]);return e[t.z].push({onClick:t.ui.onClick,worldSpace:t.geometry.worldSpace}),e},sg=(e,t)=>t.ui.id?(e[t.ui.id]=t.geometry.worldSpace,e):e,og=(e,t)=>{switch(t.ui.kind){case Zm.CONTAINER:case Zm.TEXT:const n=t.geometry;if(0==n.vertices.length)return e;const r=t.z-e.length+1;for(let t=0;t<r;++t)e.push({});const s=e[t.z];return(()=>{const e=s[n.textureIndex];if(e)return e;const t=[];return s[n.textureIndex]=t,t})().push(n),e;default:return e}},ag=(e,t)=>{if(t.ui.kind==Zm.SCENE){if(0===t.ui.connections.length)return e;const n=t.z-e.length+1;for(let t=0;t<n;++t)e.push([]);return e[t.z].push({connections:t.ui.connections,scale:lf(uf(cf(t.ui.camera),[0,1,0]))}),e}return e},ig=()=>({layers:[],clickHandlers:[],idToWorldSpace:{},connections:[]}),ug=(e,t)=>({layers:og(e.layers,t),clickHandlers:rg(e.clickHandlers,t),idToWorldSpace:sg(e.idToWorldSpace,t),connections:ag(e.connections,t)}),cg=(e,t)=>{const{width:n,height:r}=e.size;e.clear();const s=Jm(t,{minWidth:0,maxWidth:n,minHeight:0,maxHeight:r},e.measureText),o={cameras:[[1,0,0,0,1,0,0,0,1]],stack:[0],transform:cf([1,0,0,0,1,0,0,0,1])},a=Qm(t,s,{x:0,y:0},o),{layers:i,clickHandlers:u,connections:c,idToWorldSpace:l}=tg(t,s,a,ng),d=lm(i,c,l);e.cameras=o.cameras,e.clickHandlers=u;for(const t of d)e.draw(t);return e};let lg;var dg;(dg=lg||(lg={}))[dg.DATA=0]="DATA",dg[dg.ERROR=1]="ERROR";class hg{constructor(e,t,n,r,s,o,a,i,u){this.window=e,this.document=t,this.canvas=n,this.gl=r,this.program=s,this.textures=o,this.textMeasurementsCache=a,this.clickHandlers=i,this.dispatch=u,this.kind=lg.DATA,this.clear=()=>{const{gl:e}=this;e.clear(e.COLOR_BUFFER_BIT)},this.draw=({triangles:e,lines:t})=>{const{gl:n,program:r,textures:s}=this,{attributes:o}=r;{const{vertices:t,colors:r,vertexIndices:a,textureCoordinates:i,textureIndex:u,cameraIndex:c}=e;if(0!==t.length){const e=s[u];n.bindTexture(n.TEXTURE_2D,e),n.bindBuffer(n.ARRAY_BUFFER,o.vertices.buffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array(t),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,o.colors.buffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array(r),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,o.textureCoordinates.buffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array(i),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,o.cameraIndex.buffer),n.bufferData(n.ARRAY_BUFFER,new Uint8Array(c),n.STATIC_DRAW),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,o.vertexIndices),n.bufferData(n.ELEMENT_ARRAY_BUFFER,new Uint16Array(a),n.STATIC_DRAW),n.drawElements(n.TRIANGLES,a.length,n.UNSIGNED_SHORT,0)}}{const{vertices:e,colors:r}=t;if(0!==e.length){const t=s[0],a=e.length/2;n.bindTexture(n.TEXTURE_2D,t),n.bindBuffer(n.ARRAY_BUFFER,o.vertices.buffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array(e),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,o.colors.buffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array(r),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,o.textureCoordinates.buffer),n.bufferData(n.ARRAY_BUFFER,new Float32Array(Array(2*a).fill(0)),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,o.cameraIndex.buffer),n.bufferData(n.ARRAY_BUFFER,new Uint8Array(Array(a).fill(0)),n.STATIC_DRAW),n.drawArrays(n.LINES,0,a)}}},this.getTextureMeasurements=(e,t)=>{const{document:n,gl:r}=this,s=`${t} ${e.size} ${e.family}`,o=this.textMeasurementsCache.get(s);if(o)return o;const{texture:a,widths:i,textureCoordinates:u}=((e,t,n,r)=>{const s=e.createElement("canvas"),o=s.getContext("2d"),a=Math.sqrt(256),i=(e=>{let t=1;for(;t<e;)t<<=1;return t})(n.size*a),u=i/a;s.width=i*r,s.height=i*r,s.style.width=`${i}px`,s.style.height=`${i}px`,o.scale(r,r),o.textAlign="left",o.textBaseline="top",o.font=`${n.size}px ${n.family}`,o.fillStyle="white",o.clearRect(0,0,o.canvas.width,o.canvas.height);const c=n.size,l=[],d=[];for(let e=0;e<256;++e){const t=String.fromCharCode(e),n=o.measureText(t),r=Math.ceil(n.width),s=e%a*u,h=Math.floor(e/a)*u;o.fillText(t,s,h),l.push(r);const p=s/i,f=(s+r)/i,m=h/i,g=(h+c)/i;d.push([p,m,p,g,f,m,f,g])}const h=t.createTexture();return t.bindTexture(t.TEXTURE_2D,h),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,s),t.generateMipmap(t.TEXTURE_2D),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),{widths:l,textureCoordinates:d,texture:h}})(n,r,e,t),c=this.textures.length;this.textures.push(a);const l={widths:i,textureIndex:c,textureCoordinates:u};return this.textMeasurementsCache.set(s,l),l},this.measureText=(e,t)=>{const{window:n}=this,r=n.devicePixelRatio,{widths:s,textureIndex:o,textureCoordinates:a}=this.getTextureMeasurements(e,r),i=((e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(t(e[r],r));return n})(t,(e=>e.charCodeAt(0)));return{widths:i.map((e=>s[e])),textureIndex:o,textureCoordinates:i.map((e=>a[e]))}},this._size={width:0,height:0},this._cameras=[]}set size(e){const{gl:t,program:n,window:r}=this,{uniforms:s}=n,{canvas:o}=t;t.uniformMatrix3fv(s.projection,!0,rf(e)),o.width=e.width*r.devicePixelRatio,o.height=e.height*r.devicePixelRatio,o.style.width=`${e.width}px`,o.style.height=`${e.height}px`,o.style.display="block",t.viewport(0,0,o.width,o.height),this._size=e}get size(){return this._size}set cameras(e){const{gl:t,program:n}=this,{uniforms:r}=n,s=[];for(const t of e)s.push(...t);t.uniformMatrix3fv(r.cameras,!0,s),this._cameras=e}get cameras(){return this._cameras}}const pg=({width:e,height:t,document:n,window:r,dispatch:s})=>{const o=n.createElement("canvas");o.style.touchAction="none",o.style.userSelect="none";const a=o.getContext("webgl2");a.enable(a.BLEND),a.blendFunc(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA),a.depthMask(!1),a.activeTexture(a.TEXTURE0),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),a.clearColor(0,0,0,1);const i=(e=>{const t={vertices:{location:0,buffer:e.createBuffer()},colors:{location:1,buffer:e.createBuffer()},textureCoordinates:{location:2,buffer:e.createBuffer()},cameraIndex:{location:3,buffer:e.createBuffer()},vertexIndices:e.createBuffer()},n=((e,t)=>{const{vertices:n,colors:r,textureCoordinates:s,cameraIndex:o}=t,a=`#version 300 es\n  uniform mat3 u_projection;\n  uniform mat3 u_cameras[8];\n\n  layout(location = ${n.location}) in vec2 a_vertex;\n  layout(location = ${r.location}) in vec4 a_color;\n  layout(location = ${s.location}) in vec2 a_textureCoordinates;\n  layout(location = ${o.location}) in uint a_cameraIndex;\n\n  out vec4 v_color;\n  out vec2 v_textureCoordinates;\n\n  void main() {\n    mat3 camera = u_cameras[a_cameraIndex];\n    mat3 transform = u_projection * inverse(camera);\n    gl_Position = vec4((transform * vec3(a_vertex, 1)).xy, 0, 1);\n    v_color = a_color / 255.0;\n    v_textureCoordinates = a_textureCoordinates;\n  }\n  `,i=e.createShader(e.VERTEX_SHADER);return e.shaderSource(i,a),e.compileShader(i),i})(e,t),r=(e=>{const t=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(t,"#version 300 es\n  precision highp float;\n\n  uniform sampler2D u_texture;\n\n  in vec4 v_color;\n  in vec2 v_textureCoordinates;\n\n  out vec4 fragColor;\n  \n  void main() {\n    fragColor = texture(u_texture, v_textureCoordinates) * v_color;\n  }\n  "),e.compileShader(t),t})(e),s=e.createProgram();if(e.attachShader(s,n),e.attachShader(s,r),e.linkProgram(s),!e.getProgramParameter(s,e.LINK_STATUS))return{kind:lg.ERROR,vertexInfoLog:e.getShaderInfoLog(n),fragmentInfoLog:e.getShaderInfoLog(r)};e.useProgram(s);const o=e.createVertexArray();e.bindVertexArray(o),((e,t,{location:n,buffer:r})=>{e.bindAttribLocation(t,n,"a_vertex"),e.enableVertexAttribArray(n),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0)})(e,s,t.vertices),((e,t,{location:n,buffer:r})=>{e.bindAttribLocation(t,n,"a_color"),e.enableVertexAttribArray(n),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(n,4,e.FLOAT,!1,0,0)})(e,s,t.colors),((e,t,{location:n,buffer:r})=>{e.bindAttribLocation(t,n,"a_textureCoordinates"),e.enableVertexAttribArray(n),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(n,2,e.FLOAT,!1,0,0)})(e,s,t.textureCoordinates),((e,t,{location:n,buffer:r})=>{e.bindAttribLocation(t,n,"a_cameraIndex"),e.enableVertexAttribArray(n),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribIPointer(n,1,e.UNSIGNED_BYTE,0,0)})(e,s,t.cameraIndex);const a={projection:e.getUniformLocation(s,"u_projection"),texture:e.getUniformLocation(s,"u_texture"),cameras:e.getUniformLocation(s,"u_cameras")};return{kind:lg.DATA,vertexShader:n,fragmentShader:r,program:s,attributes:t,uniforms:a}})(a);if(i.kind==lg.ERROR)return i;const u=a.createTexture();a.bindTexture(a.TEXTURE_2D,u),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,1,1,0,a.RGBA,a.UNSIGNED_BYTE,new Uint8Array([255,255,255,255]));const c=new hg(r,n,o,a,i,[u],new Map,[],s??(()=>{}));return c.size={width:e,height:t},c},fg=e=>({id:e.pointerId,position:{x:e.clientX,y:e.clientY}}),mg=({items:e,backgroundColor:t})=>Im({mainAxisAlignment:km.END},[_m({mainAxisAlignment:km.END},[Nm({padding:4,color:t},Im(e.map((({name:e,shortcut:t,onClick:n})=>Nm({padding:10,onClick:n},Hm({size:18},`(${t}) ${e}`))))))])]),gg=e=>Nm({width:e,height:e}),yg=(e,t)=>{const n=[e[0]];for(const r of e.slice(1))n.push(t,r);return n},kg=(e,t)=>{switch(e.kind){case df.BODY_NUMBER:case df.BODY_TEXT:return e.body===t;case df.INPUT:return e.input===t;case df.NODE:return e.node===t;case df.OUTPUT:return e.output===t;default:return!1}},bg=(e,t,n)=>Im(yg(t.map((t=>((e,{name:t,uuid:n},r)=>Nm({onClick:{kind:Gf.CLICKED_INPUT,input:n}},_m({crossAxisAlignment:wm.CENTER},[Nm({id:n,color:kg(r,n)?e.focusInput:e.input,padding:{top:2,right:4,bottom:2,left:4}},Hm({color:e.background},r.quickSelect.kind===_f.INPUT?r.quickSelect.hotkeys[n]:" ")),gg(4),Hm(t)])))(e,t,n))),gg(4))),wg=(e,t,n)=>Im(yg(t.map((t=>((e,{name:t,uuid:n},r)=>{const s=r.quickSelect.kind===_f.OUTPUT?r.quickSelect.hotkeys[n]:" ";return Nm({onClick:{kind:Gf.CLICKED_OUTPUT,output:n}},_m({crossAxisAlignment:wm.CENTER},[Hm(t),gg(4),Nm({id:n,color:kg(r,n)?e.focusInput:e.input,padding:{top:2,right:4,bottom:2,left:4}},Hm({color:e.background},s))]))})(e,t,n))),gg(4))),Eg=e=>{switch(typeof e){case"string":return e;case"number":return Number.isInteger(e)?e.toString():e.toFixed(2)}},Ig=(e,t,n,r)=>{const s=n.nodes[t],o=[];s.kind===yf.TRANSFORM&&(o.push(bg(e,s.inputs.map((e=>n.inputs[e])),r)),o.push(gg(15)));const a=n.bodys[s.body];switch(a.kind){case mf.NUMBER:o.push(((e,t,n)=>{const r=n.quickSelect.kind===_f.BODY?n.quickSelect.hotkeys[t.uuid]:t.text;return Nm({color:kg(n,t.uuid)?e.focusInput:e.background,padding:5,onClick:{kind:Gf.CLICKED_BODY,body:t.uuid}},Hm(r))})(e,a,r),gg(15));break;case mf.TEXT:o.push(((e,t,n)=>{const r=n.quickSelect.kind===_f.BODY?n.quickSelect.hotkeys[t.uuid]:t.value;return Nm({color:kg(n,t.uuid)?e.focusInput:e.background,padding:5,onClick:{kind:Gf.CLICKED_BODY,body:t.uuid}},Hm(r))})(e,a,r),gg(15));break;case mf.TABLE:o.push(((e,t)=>{const n=Object.keys(t.value.columns),r=n.length,s=t.value.columns[n[0]].length;return Im([Nm({padding:5},Hm(`${r} columns ${s} rows`)),Nm({color:e.background},_m(Object.entries(t.value.columns).map((([e,t])=>Nm({padding:5},Im({crossAxisAlignment:wm.END},[Nm({padding:5},Hm(e)),...t.slice(0,10).map((e=>Nm({padding:5},Hm(void 0===e?"NULL":e.toString()))))]))))))])})(e,a),gg(15));break;case mf.COLUMN:o.push(((e,t)=>{const n=t.value.length;return Im([Nm({padding:5},Hm(`${n} rows`)),Nm({color:e.background},Im({crossAxisAlignment:wm.END},t.value.slice(0,10).map((e=>Nm({padding:5},Hm(void 0===e?"NULL":e.toString()))))))])})(e,a),gg(15));break;case mf.TENSOR:o.push(((e,t)=>{switch(t.rank){case 0:{const n=Eg(t.value);return Nm({color:e.background,padding:5},Hm(n))}case 1:{const n=t.value,r=n.length;return Im([Nm({padding:5},Hm(`${r} rows`)),Nm({color:e.background},Im({crossAxisAlignment:wm.END},n.slice(0,10).map((e=>Nm({padding:5},Hm(Eg(e)))))))])}case 2:{const n=t.value,r=n.length,s=n[0].length;return Im([Nm({padding:5},Hm(`${s} columns ${r} rows`)),Nm({color:e.background},_m(n[0].map(((e,t)=>Nm({padding:5},Im({crossAxisAlignment:wm.END},n.slice(0,10).map((e=>Nm({padding:5},Hm(Eg(e[t])))))))))))])}default:return Hm("no view for this rank yet")}})(e,a),gg(15));break;case mf.SCATTER:o.push(((e,t)=>Nm({width:300,height:300,color:e.background},Pm(t.x.map(((n,r)=>Nm({x:n,y:290-t.y[r],width:10,height:10,color:e.focusInput}))))))(e,a),gg(15))}o.push(wg(e,s.outputs.map((e=>n.outputs[e])),r));const i=r.quickSelect.kind===_f.NODE?r.quickSelect.hotkeys[s.uuid]:s.name,u=kg(r,s.uuid)?e.focusNode:a.kind===mf.ERROR?e.error:e.node;return Nm({color:u,padding:4,x:s.position.x,y:s.position.y,onClick:{kind:Gf.CLICKED_NODE,node:s.uuid}},Im({crossAxisAlignment:wm.CENTER},[Hm(i),gg(4),_m(o)]))},xg=e=>{const{display:t,event:n}="string"==typeof e?{display:e,event:e}:e;return Nm({padding:10,onClick:{kind:Gf.KEYDOWN,key:n,ctrl:!1}},Hm({size:24},t))},Sg=e=>_m(e.map(xg)),vg=(e,t)=>t?(e=>Im({mainAxisAlignment:km.END},[_m({mainAxisAlignment:km.SPACE_BETWEEN},[Nm({padding:4,color:e.node},Im([Sg(["!","@","#","$","%"]),Sg(["Q","W","E","R","T"]),Sg(["A","S","D","F","G"]),Sg(["Z","X","C","V"]),Sg(["sft",{display:"space",event:" "}])])),Nm({padding:4,color:e.node},Im({crossAxisAlignment:wm.END},[Sg(["^","&","*","(",")"]),Sg(["Y","U","I","O","P"]),Sg(["H","J","K","L"]),Sg(["B","N","M",{display:"del",event:"Backspace"}]),Sg([{display:"space",event:" "},{display:"ret",event:"Enter"}])]))])]))(e):(e=>Im({mainAxisAlignment:km.END},[_m({mainAxisAlignment:km.SPACE_BETWEEN},[Nm({padding:4,color:e.node},Im([Sg(["1","2","3","4","5"]),Sg(["q","w","e","r","t"]),Sg(["a","s","d","f","g"]),Sg(["z","x","c","v"]),Sg(["sft",{display:"space",event:" "}])])),Nm({padding:4,color:e.node},Im({crossAxisAlignment:wm.END},[Sg(["6","7","8","9","0"]),Sg(["y","u","i","o","p"]),Sg(["h","j","k","l"]),Sg(["b","n","m",{display:"del",event:"Backspace"}]),Sg([{display:"space",event:" "},{display:"ret",event:"Enter"}])]))])]))(e),Tg=[1,0,0,0,1,0,0,0,1],Ng=e=>({graph:{nodes:{},edges:{},inputs:{},bodys:{},outputs:{}},nodeOrder:[],pointers:[],camera:[1,0,0,0,1,0,0,0,1],focus:{kind:df.NONE,pointerAction:{kind:pf.NONE},quickSelect:{kind:_f.NONE}},openFinderFirstClick:!1,nodePlacementLocation:{x:e.width/2,y:e.height/2,show:!1},window:e,operations:{},panCamera:{left:!1,down:!1,up:!1,right:!1,now:0},zoomCamera:{in:!1,out:!1,now:0},theme:{background:{red:2,green:22,blue:39,alpha:255},node:{red:41,green:95,blue:120,alpha:255},nodePlacementLocation:{red:41,green:95,blue:120,alpha:50},focusNode:{red:23,green:54,blue:69,alpha:255},input:{red:188,green:240,blue:192,alpha:255},focusInput:{red:175,green:122,blue:208,alpha:255},connection:{red:255,green:255,blue:255,alpha:255},error:{red:199,green:56,blue:65,alpha:255}}}),Ag=(e,[t,n])=>{const[r,s]=e.reduce((([e,t],n)=>[Math.min(e,n),Math.max(t,n)]),[1/0,-1/0]),o=s-r,a=n-t;return e.map((e=>(e-r)/o*a+t))},Rg=e=>({uuid:t,node:n},...r)=>{const s=r.filter((e=>[mf.TENSOR,mf.NUMBER,mf.TEXT,mf.COLUMN].includes(e.kind))).map((e=>e.value));try{const r=e(...s);return{kind:mf.TENSOR,uuid:t,node:n,value:r.arraySync(),rank:r.rank,shape:r.shape}}catch(e){return{kind:mf.ERROR,uuid:t,node:n}}},Mg={number:{kind:bf.NUMBER,name:"number",outputs:["out"]},text:{kind:bf.TEXT,name:"text",outputs:["out"]},abs:{kind:bf.TRANSFORM,name:"abs",inputs:["x"],outputs:["out"],func:Rg(Oi)},acos:{kind:bf.TRANSFORM,name:"acos",inputs:["x"],outputs:["out"],func:Rg(cu)},acosh:{kind:bf.TRANSFORM,name:"acosh",inputs:["x"],outputs:["out"],func:Rg(lu)},add:{kind:bf.TRANSFORM,name:"add",inputs:["x","y"],outputs:["out"],func:Rg(Ei)},all:{kind:bf.TRANSFORM,name:"all",inputs:["x"],outputs:["out"],func:Rg(du)},any:{kind:bf.TRANSFORM,name:"any",inputs:["x"],outputs:["out"],func:Rg(hu)},"arg max":{kind:bf.TRANSFORM,name:"arg max",inputs:["x"],outputs:["out"],func:Rg(pu)},"arg min":{kind:bf.TRANSFORM,name:"arg min",inputs:["x"],outputs:["out"],func:Rg(fu)},asin:{kind:bf.TRANSFORM,name:"asin",inputs:["x"],outputs:["out"],func:Rg(mu)},asinh:{kind:bf.TRANSFORM,name:"asinh",inputs:["x"],outputs:["out"],func:Rg(gu)},atan:{kind:bf.TRANSFORM,name:"atan",inputs:["x"],outputs:["out"],func:Rg(yu)},atanh:{kind:bf.TRANSFORM,name:"atanh",inputs:["x"],outputs:["out"],func:Rg(ku)},ceil:{kind:bf.TRANSFORM,name:"ceil",inputs:["x"],outputs:["out"],func:Rg(bu)},clip:{kind:bf.TRANSFORM,name:"clip",inputs:["x","min","max"],outputs:["out"],func:Rg(wu)},complex:{kind:bf.TRANSFORM,name:"complex",inputs:["real","imag"],outputs:["out"],func:Rg(bn)},concat:{kind:bf.TRANSFORM,name:"concat",inputs:["x","y"],outputs:["out"],func:Rg(((e,t)=>Ja([e,t])))},cos:{kind:bf.TRANSFORM,name:"cos",inputs:["x"],outputs:["out"],func:Rg(Eu)},cosh:{kind:bf.TRANSFORM,name:"cosh",inputs:["x"],outputs:["out"],func:Rg(Iu)},column:{kind:bf.TRANSFORM,name:"column",inputs:["table","column"],outputs:["data"],func:({uuid:e,node:t},...n)=>{const r=n[0],s=n[1],o=()=>({kind:mf.ERROR,uuid:e,node:t});if(r.kind!==mf.TABLE||s.kind!==mf.TEXT)return o();const a=r.value.columns[s.value];return void 0===a?o():{kind:mf.COLUMN,uuid:e,node:t,name:s.value,value:a}}},cumsum:{kind:bf.TRANSFORM,name:"cumsum",inputs:["x"],outputs:["out"],func:Rg(Su)},cumprod:{kind:bf.TRANSFORM,name:"cumprod",inputs:["x"],outputs:["out"],func:Rg(xu)},diag:{kind:bf.TRANSFORM,name:"diag",inputs:["x"],outputs:["out"],func:Rg(vu)},div:{kind:bf.TRANSFORM,name:"div",inputs:["x","y"],outputs:["out"],func:Rg(xi)},"div no nan":{kind:bf.TRANSFORM,name:"div no nan",inputs:["x","y"],outputs:["out"],func:Rg(Nu)},dot:{kind:bf.TRANSFORM,name:"dot",inputs:["x","y"],outputs:["out"],func:Rg(Au)},elu:{kind:bf.TRANSFORM,name:"elu",inputs:["x"],outputs:["out"],func:Rg(Eo)},erf:{kind:bf.TRANSFORM,name:"erf",inputs:["x"],outputs:["out"],func:Rg(Ru)},equal:{kind:bf.TRANSFORM,name:"equal",inputs:["x","y"],outputs:["out"],func:Rg(Tu)},euclideanNorm:{kind:bf.TRANSFORM,name:"euclideanNorm",inputs:["x"],outputs:["out"],func:Rg(Mu)},exp:{kind:bf.TRANSFORM,name:"exp",inputs:["x"],outputs:["out"],func:Rg(ou)},expm1:{kind:bf.TRANSFORM,name:"expm1",inputs:["x"],outputs:["out"],func:Rg(_u)},eye:{kind:bf.TRANSFORM,name:"eye",inputs:["size"],outputs:["out"],func:Rg(Ki)},fill:{kind:bf.TRANSFORM,name:"fill",inputs:["shape","value"],outputs:["out"],func:Rg(pi)},floor:{kind:bf.TRANSFORM,name:"floor",inputs:["x"],outputs:["out"],func:Rg(Fu)},"floor div":{kind:bf.TRANSFORM,name:"floor div",inputs:["x","y"],outputs:["out"],func:Rg(Ii)},gather:{kind:bf.TRANSFORM,name:"gather",inputs:["x","indices"],outputs:["out"],func:Rg(Ou)},greater:{kind:bf.TRANSFORM,name:"greater",inputs:["x","y"],outputs:["out"],func:Rg(wi)},"greater equal":{kind:bf.TRANSFORM,name:"greater equal",inputs:["x","y"],outputs:["out"],func:Rg(Ri)},imag:{kind:bf.TRANSFORM,name:"imag",inputs:["x"],outputs:["out"],func:Rg(Qa)},"is finite":{kind:bf.TRANSFORM,name:"is finite",inputs:["x"],outputs:["out"],func:Rg(Du)},"is inf":{kind:bf.TRANSFORM,name:"is inf",inputs:["x"],outputs:["out"],func:Rg(Cu)},"is nan":{kind:bf.TRANSFORM,name:"is nan",inputs:["x"],outputs:["out"],func:Rg(Bu)},"leaky relu":{kind:bf.TRANSFORM,name:"leaky relu",inputs:["x"],outputs:["out"],func:Rg(Io)},less:{kind:bf.TRANSFORM,name:"less",inputs:["x","y"],outputs:["out"],func:Rg(Uu)},"less equal":{kind:bf.TRANSFORM,name:"less equal",inputs:["x","y"],outputs:["out"],func:Rg(bi)},linspace:{kind:bf.TRANSFORM,name:"linspace",inputs:["start","stop","num"],outputs:["out"],func:Rg((function(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ln.runKernel("LinSpace",{},r)}))},log:{kind:bf.TRANSFORM,name:"log",inputs:["x"],outputs:["out"],func:Rg(ru)},log1p:{kind:bf.TRANSFORM,name:"log1p",inputs:["x"],outputs:["out"],func:Rg(au)},"log sigmoid":{kind:bf.TRANSFORM,name:"log sigmoid",inputs:["x"],outputs:["out"],func:Rg(Pu)},"log softmax":{kind:bf.TRANSFORM,name:"log softmax",inputs:["x"],outputs:["out"],func:Rg(Lu)},"log sum exp":{kind:bf.TRANSFORM,name:"log sum exp",inputs:["x"],outputs:["out"],func:Rg(uu)},and:{kind:bf.TRANSFORM,name:"and",inputs:["x","y"],outputs:["out"],func:Rg(Mi)},not:{kind:bf.TRANSFORM,name:"not",inputs:["x"],outputs:["out"],func:Rg(zu)},oneHot:{kind:bf.TRANSFORM,name:"oneHot",inputs:["indices","depth"],outputs:["out"],func:Rg(ju)},ones:{kind:bf.TRANSFORM,name:"ones",inputs:["shape"],outputs:["out"],func:Rg(eu)},"ones like":{kind:bf.TRANSFORM,name:"ones like",inputs:["x"],outputs:["out"],func:Rg(Vu)},or:{kind:bf.TRANSFORM,name:"or",inputs:["x","y"],outputs:["out"],func:Rg(Wu)},xor:{kind:bf.TRANSFORM,name:"xor",inputs:["x","y"],outputs:["out"],func:Rg(Hu)},"mat mul":{kind:bf.TRANSFORM,name:"mat mul",inputs:["x","y"],outputs:["out"],func:Rg(Gi)},max:{kind:bf.TRANSFORM,name:"max",inputs:["x"],outputs:["out"],func:Rg(Di)},maximum:{kind:bf.TRANSFORM,name:"maximum",inputs:["x","y"],outputs:["out"],func:Rg(qu)},minimum:{kind:bf.TRANSFORM,name:"minimum",inputs:["x","y"],outputs:["out"],func:Rg(nu)},min:{kind:bf.TRANSFORM,name:"min",inputs:["x"],outputs:["out"],func:Rg(Ci)},mean:{kind:bf.TRANSFORM,name:"mean",inputs:["x"],outputs:["out"],func:Rg(Ji)},mod:{kind:bf.TRANSFORM,name:"mod",inputs:["x","y"],outputs:["out"],func:Rg(Ku)},mul:{kind:bf.TRANSFORM,name:"mul",inputs:["x","y"],outputs:["out"],func:Rg(xo)},multinomial:{kind:bf.TRANSFORM,name:"multinomial",inputs:["logits","num samples"],outputs:["out"],func:Rg(Gu)},neg:{kind:bf.TRANSFORM,name:"neg",inputs:["x"],outputs:["out"],func:Rg(ji)},"not equal":{kind:bf.TRANSFORM,name:"not equal",inputs:["x","y"],outputs:["out"],func:Rg(Qi)},norm:{kind:bf.TRANSFORM,name:"norm",inputs:["x"],outputs:["out"],func:Rg(Li)},"outer product":{kind:bf.TRANSFORM,name:"outer product",inputs:["x","y"],outputs:["out"],func:Rg(Yu)},pow:{kind:bf.TRANSFORM,name:"pow",inputs:["base","exp"],outputs:["out"],func:Rg(Bi)},prelu:{kind:bf.TRANSFORM,name:"prelu",inputs:["x","alpha"],outputs:["out"],func:Rg(So)},prod:{kind:bf.TRANSFORM,name:"prod",inputs:["x"],outputs:["out"],func:Rg(Zu)},range:{kind:bf.TRANSFORM,name:"range",inputs:["start","stop","step"],outputs:["out"],func:Rg(Ai)},reciprocal:{kind:bf.TRANSFORM,name:"reciprocal",inputs:["x"],outputs:["out"],func:Rg(Xu)},real:{kind:bf.TRANSFORM,name:"real",inputs:["x"],outputs:["out"],func:Rg(ei)},relu:{kind:bf.TRANSFORM,name:"relu",inputs:["x"],outputs:["out"],func:Rg(vo)},relu6:{kind:bf.TRANSFORM,name:"relu6",inputs:["x"],outputs:["out"],func:Rg(To)},reverse:{kind:bf.TRANSFORM,name:"reverse",inputs:["x"],outputs:["out"],func:Rg(ui)},round:{kind:bf.TRANSFORM,name:"round",inputs:["x"],outputs:["out"],func:Rg(vi)},rsqrt:{kind:bf.TRANSFORM,name:"rsqrt",inputs:["x"],outputs:["out"],func:Rg(Ju)},scatter:{kind:bf.TRANSFORM,name:"scatter",inputs:["x","y"],outputs:["plot"],func:({uuid:e,node:t},...n)=>{const r=Ag(n[0].value,[10,280]),s=Ag(n[1].value,[10,280]);return{kind:mf.SCATTER,uuid:e,node:t,x:r,y:s}}},selu:{kind:bf.TRANSFORM,name:"selu",inputs:["x"],outputs:["out"],func:Rg(Qu)},sigmoid:{kind:bf.TRANSFORM,name:"sigmoid",inputs:["x"],outputs:["out"],func:Rg(Ao)},sign:{kind:bf.TRANSFORM,name:"sign",inputs:["x"],outputs:["out"],func:Rg(ec)},sin:{kind:bf.TRANSFORM,name:"sin",inputs:["x"],outputs:["out"],func:Rg(tc)},sinh:{kind:bf.TRANSFORM,name:"sinh",inputs:["x"],outputs:["out"],func:Rg(tc)},slice:{kind:bf.TRANSFORM,name:"slice",inputs:["x","begin","size"],outputs:["out"],func:Rg(ti)},softplus:{kind:bf.TRANSFORM,name:"softplus",inputs:["x"],outputs:["out"],func:Rg($u)},sqrt:{kind:bf.TRANSFORM,name:"sqrt",inputs:["x"],outputs:["out"],func:Rg(Ui)},square:{kind:bf.TRANSFORM,name:"square",inputs:["x"],outputs:["out"],func:Rg($i)},"squared difference":{kind:bf.TRANSFORM,name:"squared difference",inputs:["x","y"],outputs:["out"],func:Rg(su)},sub:{kind:bf.TRANSFORM,name:"sub",inputs:["x","y"],outputs:["out"],func:Rg(Si)},sum:{kind:bf.TRANSFORM,name:"sum",inputs:["x"],outputs:["out"],func:Rg(Mo)},stack:{kind:bf.TRANSFORM,name:"stack",inputs:["x","y"],outputs:["out"],func:Rg(((e,t)=>_i([e,t],1)))},step:{kind:bf.TRANSFORM,name:"step",inputs:["x","alpha"],outputs:["out"],func:Rg(Ro)},tan:{kind:bf.TRANSFORM,name:"tan",inputs:["x"],outputs:["out"],func:Rg(nc)},tanh:{kind:bf.TRANSFORM,name:"tanh",inputs:["x"],outputs:["out"],func:Rg(rc)},tile:{kind:bf.TRANSFORM,name:"tile",inputs:["x","reps"],outputs:["out"],func:Rg(((e,t)=>gi(e,[t])))},transpose:{kind:bf.TRANSFORM,name:"transpose",inputs:["x"],outputs:["out"],func:Rg(Vi)},"upload csv":{kind:bf.UPLOAD_CSV,name:"upload csv",outputs:["table"]},where:{kind:bf.TRANSFORM,name:"where",inputs:["condition","true","false"],outputs:["out"],func:Rg(Ni)},zeros:{kind:bf.TRANSFORM,name:"zeros",inputs:["shape"],outputs:["out"],func:Rg(ri)},"zeros like":{kind:bf.TRANSFORM,name:"zeros like",inputs:["x"],outputs:["out"],func:Rg(si)}},_g={currentTime:()=>performance.now(),generateUUID:()=>crypto.randomUUID(),promptUserForTable:()=>new Promise((e=>{const t=document.createElement("input");t.type="file",t.accept=".csv",t.addEventListener("change",(t=>{const n=t.target.files[0];e(n)})),t.click()})).then((e=>new Promise((t=>{tf.parse(e,{worker:!0,header:!0,dynamicTyping:!0,complete:async n=>{const r={};for(const e of n.meta.fields)r[e]=[];const s=n.errors.map((e=>e.row));n.data.forEach(((e,t)=>{if(!s.includes(t))for(const[t,n]of Object.entries(e))r[t].push(n??void 0)})),t({name:e.name,columns:r})}})}))))},Fg=(e=>{let{model:t,view:n,update:r,window:s,document:o,requestAnimationFrame:a,setTimeout:i,effects:u}=e;const c=pg({width:s.innerWidth,height:s.innerHeight,window:s,document:o});switch(c.kind){case lg.ERROR:return c;case lg.DATA:let l=c,d=!1;const h=()=>{d||(d=!0,a((()=>{l=cg(l,n(t)),d=!1})))},p=async e=>{const{model:n,render:s,schedule:a,dispatch:c,promise:l,cursor:d}=r(u,t,e);t=n,s&&h();for(const{after:e,event:t}of a??[]){const{milliseconds:n}=e;i((()=>p(t)),n)}for(const e of c??[])p(e);void 0!==d&&(o.body.style.cursor=d?"auto":"none"),void 0!==l&&await l.then(p)};return l.dispatch=p,o.body.appendChild(l.canvas),o.addEventListener("pointerdown",(t=>{const n=fg(t);e.pointerDown(p,n),l=im(l,n)})),s.addEventListener("resize",(()=>{l.size={width:s.innerWidth,height:s.innerHeight},h()})),h(),{kind:lg.DATA,dispatch:p}}})({model:((e,t)=>{const n={...Ng(e),operations:Mg},{graph:r,node:s}=Ef({graph:n.graph,operation:n.operations.number,position:{x:25,y:20},effects:t}),o=Mf(r,r.nodes[s].body,(()=>"-5")),{graph:a,node:i}=Ef({graph:o,operation:n.operations.number,position:{x:25,y:90},effects:t}),u=Mf(a,a.nodes[i].body,(()=>"9")),{graph:c,node:l}=Ef({graph:u,operation:n.operations.number,position:{x:25,y:160},effects:t}),d=Mf(c,c.nodes[l].body,(()=>"10")),{graph:h,node:p}=Ef({graph:d,operation:n.operations.linspace,position:{x:175,y:20},effects:t}),{graph:f}=Nf({graph:h,input:h.nodes[p].inputs[0],output:h.nodes[s].outputs[0],generateUUID:t.generateUUID}),{graph:m}=Nf({graph:f,input:f.nodes[p].inputs[1],output:f.nodes[i].outputs[0],generateUUID:t.generateUUID}),{graph:g}=Nf({graph:m,input:m.nodes[p].inputs[2],output:m.nodes[l].outputs[0],generateUUID:t.generateUUID}),{graph:y,node:k}=Ef({graph:g,operation:n.operations.square,position:{x:450,y:350},effects:t}),{graph:b}=Nf({graph:y,input:y.nodes[k].inputs[0],output:y.nodes[p].outputs[0],generateUUID:t.generateUUID}),{graph:w,node:E}=Ef({graph:b,operation:n.operations.scatter,position:{x:700,y:20},effects:t}),{graph:I}=Nf({graph:w,input:w.nodes[E].inputs[0],output:w.nodes[p].outputs[0],generateUUID:t.generateUUID}),{graph:x}=Nf({graph:I,input:I.nodes[E].inputs[1],output:I.nodes[k].outputs[0],generateUUID:t.generateUUID}),{graph:S,node:v}=Ef({graph:x,operation:n.operations.stack,position:{x:750,y:400},effects:t}),{graph:T}=Nf({graph:S,input:S.nodes[v].inputs[0],output:S.nodes[p].outputs[0],generateUUID:t.generateUUID}),{graph:N}=Nf({graph:T,input:T.nodes[v].inputs[1],output:T.nodes[k].outputs[0],generateUUID:t.generateUUID});return{...n,graph:N,nodeOrder:[s,i,l,p,k,E,v]}})({width:window.innerWidth,height:window.innerHeight},_g),view:e=>{const t=e.nodeOrder.map((t=>Ig(e.theme,t,e.graph,e.focus))),n=Object.values(e.graph.edges).map((({input:t,output:n})=>({from:n,to:t,color:e.theme.connection}))),r=[Nm({color:e.theme.background,onClick:{kind:Gf.CLICKED_BACKGROUND}}),Cm({camera:e.camera,children:t,connections:n})];switch(e.nodePlacementLocation.show&&r.push(Cm({camera:Tg,children:[Nm({color:e.theme.nodePlacementLocation,width:10,height:10,x:e.nodePlacementLocation.x,y:e.nodePlacementLocation.y})],connections:[]})),e.focus.kind){case df.FINDER_INSERT:case df.FINDER_CHANGE:r.push((({search:e,options:t,selectedIndex:n},r)=>{const s={red:255,green:255,blue:255,alpha:255};return Im({crossAxisAlignment:wm.CENTER},[Nm({height:10}),Nm({color:r.node,padding:4},Im([Nm({color:r.background,width:300,padding:4},Hm({color:r.input,size:24},e.length?e:"Search ...")),Nm({width:10,height:10}),...t.slice(0,10).map(((e,t)=>Nm({width:300,padding:4,onClick:{kind:Gf.CLICKED_FINDER_OPTION,option:e}},Hm({size:18,color:t==n?r.input:s},e))))]))])})(e.focus,e.theme),vg(e.theme,e.focus.uppercase));break;case df.BODY_NUMBER:{const t=e.graph.bodys[e.focus.body].value>=0?"-":"+";r.push(((e,t)=>Im({mainAxisAlignment:km.END},[_m({mainAxisAlignment:km.END},[Nm({padding:4,color:e.node},Im({crossAxisAlignment:wm.END},[Sg(["1","2","3",{display:"clr",event:"c"}]),Sg(["4","5","6",{display:"del",event:"Backspace"}]),Sg(["7","8","9","   "]),Sg([t,"0",".",{display:"ret",event:"Enter"}])]))])]))(e.theme,t));break}case df.BODY_TEXT:r.push(vg(e.theme,e.focus.uppercase));break;case df.NODE:r.push(mg({items:[{name:"Change Node",shortcut:"c",onClick:{kind:Gf.CHANGE_NODE,node:e.focus.node}},{name:"Delete Node",shortcut:"d",onClick:{kind:Gf.DELETE_NODE,node:e.focus.node}}],backgroundColor:e.theme.node}));break;case df.INPUT:e.graph.inputs[e.focus.input].edge&&r.push(mg({items:[{name:"Delete Edge",shortcut:"d",onClick:{kind:Gf.DELETE_INPUT_EDGE,input:e.focus.input}}],backgroundColor:e.theme.node}));break;case df.OUTPUT:e.graph.outputs[e.focus.output].edges.length>0&&r.push(mg({items:[{name:"Delete Edge",shortcut:"d",onClick:{kind:Gf.DELETE_OUTPUT_EDGES,output:e.focus.output}}],backgroundColor:e.theme.node}));break;case df.NONE:r.push(mg({items:[{name:"Reset Zoom",shortcut:"z",onClick:{kind:Gf.RESET_CAMERA}}],backgroundColor:e.theme.node}))}return Pm(r)},update:(e,t,n)=>{switch(n.kind){case Gf.POINTER_DOWN:return((e,t)=>{const n=[...e.pointers,t.pointer];if(e.focus.kind!==df.NONE)return{model:{...e,pointers:n}};if(n.length>1){const t=2===n.length?{kind:pf.ZOOM,pointerCenter:{x:0,y:0},pointerDistance:0}:{kind:pf.NONE};return{model:{...e,openFinderFirstClick:!1,focus:{kind:df.NONE,pointerAction:t,quickSelect:{kind:_f.NONE}},pointers:n}}}return{model:{...e,focus:{kind:df.NONE,pointerAction:{kind:pf.PAN},quickSelect:{kind:_f.NONE}},pointers:n}}})(t,n);case Gf.POINTER_UP:return((e,t)=>{const n=e.pointers.filter((e=>e.id!==t.pointer.id));switch(e.focus.kind){case df.NONE:switch(n.length){case 1:return{model:{...e,pointers:n,focus:{kind:df.NONE,pointerAction:{kind:pf.PAN},quickSelect:{kind:_f.NONE}}}};case 0:return{model:{...e,pointers:n,focus:{kind:df.NONE,pointerAction:{kind:pf.NONE},quickSelect:{kind:_f.NONE}}}};default:return{model:{...e,pointers:n}}}case df.NODE:if(0===n.length){const t={...e.focus,drag:!1};return{model:{...e,pointers:n,focus:t}}}return{model:{...e,pointers:n}};default:return{model:{...e,pointers:n}}}})(t,n);case Gf.POINTER_MOVE:return((e,t)=>({...(()=>{const n=e.pointers.findIndex((e=>e.id===t.pointer.id)),r=e.pointers[n],s=-1===n?e.pointers:(o=e.pointers,a=n,i=t.pointer,[...o.slice(0,a),i,...o.slice(a+1)]);var o,a,i;const u={x:t.pointer.position.x,y:t.pointer.position.y,show:!1};switch(e.focus.kind){case df.NONE:const n=e.focus.pointerAction;switch(n.kind){case pf.NONE:const o=!!e.nodePlacementLocation.show||void 0;return{model:{...e,nodePlacementLocation:u,pointers:s},render:o};case pf.PAN:const a=t.pointer.position.x-r.position.x,i=t.pointer.position.y-r.position.y,c=af(e.camera,sf(-a,-i));return{model:{...e,pointers:s,camera:c},render:!0};case pf.ZOOM:const[l,d]=[s[0],s[1]],{x:h,y:p}=l.position,{x:f,y:m}=d.position,g=(l.position.x+d.position.x)/2,y=(l.position.y+d.position.y)/2,k={kind:pf.ZOOM,pointerDistance:Math.sqrt(Math.pow(f-h,2)+Math.pow(m-p,2)),pointerCenter:{x:g,y:y}},b={kind:df.NONE,pointerAction:k,quickSelect:{kind:_f.NONE}};if(n.pointerDistance>0){const t=sf(g,y),r=Math.pow(2,.01*(n.pointerDistance-k.pointerDistance)),o=sf(-g,-y),a=g-n.pointerCenter.x,i=y-n.pointerCenter.y,u=af(e.camera,t,of(r,r),o,sf(-a,-i));return{model:{...e,focus:b,pointers:s,camera:u},render:!0}}return{model:{...e,focus:b,pointers:s}}}case df.NODE:if(e.focus.drag){const n=t.pointer.position.x-r.position.x,o=t.pointer.position.y-r.position.y,a=lf(uf(e.camera,[0,1,0])),i=Af(e.graph,e.focus.node,(e=>({x:e.x+n*a,y:e.y+o*a})));return{model:{...e,pointers:s,graph:i},render:!0}}return{model:{...e,pointers:s,nodePlacementLocation:u}};case df.BODY_NUMBER:case df.BODY_TEXT:case df.INPUT:case df.OUTPUT:return{model:{...e,pointers:s,nodePlacementLocation:u}};case df.FINDER_INSERT:case df.FINDER_CHANGE:return{model:{...e,pointers:s}}}})(),cursor:!0}))(t,n);case Gf.CLICKED_NODE:return((e,t)=>{const n=e.nodeOrder.filter((e=>e!==t.node));return n.push(t.node),{model:{...e,focus:{kind:df.NODE,node:t.node,drag:!0,quickSelect:{kind:_f.NONE},move:{left:!1,up:!1,down:!1,right:!1,now:0}},nodeOrder:n},render:!0}})(t,n);case Gf.WHEEL:return((e,t)=>{const n=sf(t.position.x,t.position.y),r=Math.pow(2,.01*t.deltaY),s=sf(-t.position.x,-t.position.y),o=af(e.camera,n,of(r,r),s);return{model:{...e,camera:o},render:!0}})(t,n);case Gf.CLICKED_INPUT:return((e,t,n)=>Df(e,t.input,n))(t,n,e.generateUUID);case Gf.CLICKED_OUTPUT:return((e,t,n)=>Cf(e,t.output,n))(t,n,e.generateUUID);case Gf.OPEN_FINDER_TIMEOUT:return((e,t)=>({model:{...e,openFinderFirstClick:!1}}))(t);case Gf.KEYDOWN:return sm(t,n,e);case Gf.KEYUP:return((e,t)=>{switch(e.focus.kind){case df.NONE:return((e,{key:t,ctrl:n})=>{switch(t){case"h":case"ArrowLeft":return{model:{...e,panCamera:{...e.panCamera,left:!1}}};case"j":case"ArrowDown":return n?{model:{...e,zoomCamera:{...e.zoomCamera,out:!1},panCamera:{...e.panCamera,up:!1,down:!1}}}:{model:{...e,zoomCamera:{...e.zoomCamera,in:!1,out:!1},panCamera:{...e.panCamera,down:!1}}};case"k":case"ArrowUp":return n?{model:{...e,zoomCamera:{...e.zoomCamera,in:!1},panCamera:{...e.panCamera,up:!1,down:!1}}}:{model:{...e,zoomCamera:{...e.zoomCamera,in:!1,out:!1},panCamera:{...e.panCamera,up:!1}}};case"l":case"ArrowRight":return{model:{...e,panCamera:{...e.panCamera,right:!1}}};default:return{model:e}}})(e,t);case df.NODE:return((e,t,n)=>{switch(n){case"h":case"ArrowLeft":return{model:{...e,focus:{...t,move:{...t.move,left:!1}}}};case"j":case"ArrowDown":return{model:{...e,focus:{...t,move:{...t.move,down:!1}}}};case"k":case"ArrowUp":return{model:{...e,focus:{...t,move:{...t.move,up:!1}}}};case"l":case"ArrowRight":return{model:{...e,focus:{...t,move:{...t.move,right:!1}}}};default:return{model:e}}})(e,e.focus,t.key);default:return{model:e}}})(t,n);case Gf.CLICKED_FINDER_OPTION:return((e,{option:t},n)=>{const r=e.focus;switch(r.kind){case df.FINDER_INSERT:return Xf(e,t,n);case df.FINDER_CHANGE:return Jf(e,t,r.node,n.generateUUID)}})(t,n,e);case Gf.CLICKED_BODY:return((e,{body:t})=>({model:om(Of(e),t),render:!0}))(t,n);case Gf.CLICKED_BACKGROUND:return(e=>{if([df.FINDER_INSERT,df.FINDER_CHANGE].includes(e.focus.kind))return{model:Of(e),render:!0};if(e.openFinderFirstClick){const{x:t,y:n}=e.pointers[0].position;return{model:Yf({...e,nodePlacementLocation:{x:t,y:n,show:!1}}),render:!0}}{const t=e.focus.kind===df.NONE?e.focus:{kind:df.NONE,pointerAction:{kind:pf.PAN},quickSelect:{kind:_f.NONE}};return{model:{...e,openFinderFirstClick:1==e.pointers.length,focus:t},schedule:[{after:{milliseconds:300},event:{kind:Gf.OPEN_FINDER_TIMEOUT}}],render:!0}}})(t);case Gf.CHANGE_NODE:return((e,{node:t})=>({model:Zf(e,t),render:!0}))(t,n);case Gf.DELETE_NODE:return((e,{node:t})=>({model:nm(e,t),render:!0}))(t,n);case Gf.DELETE_INPUT_EDGE:return((e,{input:t},n)=>({model:Of({...e,graph:xf(e.graph,t)}),render:!0}))(t,n,e.generateUUID);case Gf.DELETE_OUTPUT_EDGES:return((e,{output:t})=>({model:Of({...e,graph:Sf(e.graph,t)}),render:!0}))(t,n);case Gf.PAN_CAMERA:return Wf(t,e.currentTime);case Gf.ZOOM_CAMERA:return Hf(t,e.currentTime);case Gf.RESET_CAMERA:return(e=>({model:{...e,camera:[1,0,0,0,1,0,0,0,1]},render:!0}))(t);case Gf.MOVE_NODE:return Kf(t,e.currentTime);case Gf.UPLOAD_TABLE:return((e,t,n)=>{const r=n(),s={uuid:n(),node:r,name:"table",edges:[]},o={kind:mf.TABLE,uuid:n(),node:r,value:t.table},[a,i]=uf(e.camera,[t.position.x,t.position.y,1]),u={kind:yf.SOURCE,uuid:r,name:t.table.name,outputs:[s.uuid],body:o.uuid,position:{x:a,y:i}};return{model:{...e,graph:{...e.graph,nodes:{...e.graph.nodes,[u.uuid]:u},bodys:{...e.graph.bodys,[o.uuid]:o},outputs:{...e.graph.outputs,[s.uuid]:s}},nodeOrder:[...e.nodeOrder,u.uuid]},render:!0}})(t,n,e.generateUUID);case Gf.UPLOAD_CSV:return((e,t)=>{const n={...e.graph.nodes[t.node],name:t.table.name},r={kind:mf.TABLE,uuid:n.body,node:n.uuid,value:t.table};return{model:{...e,graph:{...e.graph,nodes:{...e.graph.nodes,[n.uuid]:n},bodys:{...e.graph.bodys,[r.uuid]:r}}},render:!0}})(t,n)}},window:window,document:document,requestAnimationFrame:requestAnimationFrame,setTimeout:setTimeout,pointerDown:(e,t)=>{e({kind:Gf.POINTER_DOWN,pointer:t})},effects:_g});if(Fg.kind==lg.ERROR)throw Fg;const Og=Fg.dispatch;"function"==typeof PointerEvent.prototype.getCoalescedEvents?document.addEventListener("pointermove",(e=>{e.getCoalescedEvents().forEach((e=>{Og({kind:Gf.POINTER_MOVE,pointer:fg(e)})}))})):document.addEventListener("pointermove",(e=>Og({kind:Gf.POINTER_MOVE,pointer:fg(e)}))),document.addEventListener("pointerup",(e=>{Og({kind:Gf.POINTER_UP,pointer:fg(e)})})),document.addEventListener("wheel",(e=>{e.preventDefault(),Og({kind:Gf.WHEEL,position:{x:e.clientX,y:e.clientY},deltaY:e.deltaY})}),{passive:!1}),document.addEventListener("contextmenu",(e=>{e.preventDefault()})),document.addEventListener("keydown",(e=>{if(e.ctrlKey)switch(e.key){case"h":case"j":case"k":e.preventDefault();break;case"l":return}Og({kind:Gf.KEYDOWN,key:e.key,ctrl:e.ctrlKey})})),document.addEventListener("keyup",(e=>{Og({kind:Gf.KEYUP,key:e.key,ctrl:e.ctrlKey})}));var Dg;Dg=new URL(o("27Lyk").resolve("g0Phv"),import.meta.url).toString(),"serviceWorker"in navigator&&navigator.serviceWorker.register(Dg),document.addEventListener("dragover",(e=>{e.preventDefault()})),document.addEventListener("drop",(async e=>{if(e.preventDefault(),!e.dataTransfer)return;if(1!==e.dataTransfer.items.length)return;const t=e.dataTransfer.files[0];tf.parse(t,{worker:!0,header:!0,dynamicTyping:!0,complete:async n=>{const r={};for(const e of n.meta.fields)r[e]=[];const s=n.errors.map((e=>e.row));n.data.forEach(((e,t)=>{if(!s.includes(t))for(const[t,n]of Object.entries(e))r[t].push(n??void 0)})),Og({kind:Gf.UPLOAD_TABLE,table:{name:t.name,columns:r},position:{x:e.clientX,y:e.clientY}})}})}));
//# sourceMappingURL=index.6a7c928b.js.map

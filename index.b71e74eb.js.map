{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-b272447300f8803f.js","src/index.ts","src/studio.ts","src/systems/index.ts","src/systems/render.ts","src/renderer.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/components.ts","src/systems/layout.ts","src/systems/geometry.ts","src/layers.ts","src/linear_algebra.ts","src/ui/index.ts","src/ui/text.ts","src/ui/center.ts","src/ui/column.ts","src/ui/row.ts","src/ui/container.ts","src/ui/scene.ts","src/ui/connection.ts","src/ecs.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, importScripts */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else if ('reload' in location) {\n        location.reload();\n      } else {\n        // Web extension context\n        var ext = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n        if (ext && ext.runtime && ext.runtime.reload) {\n          ext.runtime.reload();\n        }\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        if (asset.type === 'js') {\n          if (typeof document !== 'undefined') {\n            let script = document.createElement('script');\n            script.src = asset.url;\n            return new Promise((resolve, reject) => {\n              var _document$head;\n\n              script.onload = () => resolve(script);\n\n              script.onerror = reject;\n              (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n            });\n          } else if (typeof importScripts === 'function') {\n            return new Promise((resolve, reject) => {\n              try {\n                importScripts(asset.url);\n              } catch (err) {\n                reject(err);\n              }\n            });\n          }\n        }\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import * as Studio from './studio'\r\nconst { ECS, Renderer } = Studio\r\nconst { UIRoot, Alignment, Translate } = Studio.components\r\nconst { text, center, column, row, container, scene, connection } = Studio.ui\r\nconst { render } = Studio.systems\r\n\r\nconst ecs = new ECS()\r\nconst renderer = new Renderer(window.innerWidth, window.innerHeight)\r\n\r\nconst sourceOut = container(ecs, { width: 18, height: 18, color: { h: 70, s: 1, l: 0.7, a: 1 } })\r\nconst source = container(ecs, { color: { h: 110, s: 1, l: 0.3, a: 1 }, padding: 10, x: 25, y: 200 },\r\n    column(ecs, { crossAxisAlignment: Alignment.CENTER }, [\r\n        container(ecs, { padding: 5 }, text(ecs, \"Source\")),\r\n        container(ecs, { height: 10 }),\r\n        row(ecs, [\r\n            column(ecs, [\r\n                row(ecs, [\r\n                    container(ecs, { width: 18, height: 18, color: { h: 70, s: 1, l: 0.7, a: 1 } }),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"in 0\")),\r\n                ]),\r\n                row(ecs, [\r\n                    container(ecs, { width: 18, height: 18, color: { h: 70, s: 1, l: 0.7, a: 1 } }),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"in 1\")),\r\n                ]),\r\n            ]),\r\n            container(ecs, { width: 30 }),\r\n            column(ecs, { crossAxisAlignment: Alignment.END }, [\r\n                row(ecs, [\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"out 0\")),\r\n                    container(ecs, { width: 5 }),\r\n                    sourceOut\r\n                ]),\r\n                row(ecs, [\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"out 1\")),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { width: 18, height: 18, color: { h: 70, s: 1, l: 0.7, a: 1 } })\r\n                ]),\r\n            ])\r\n        ])\r\n    ])\r\n)\r\n\r\nconst transformIn = container(ecs, { width: 18, height: 18, color: { h: 170, s: 1, l: 0.7, a: 1 } })\r\nconst transformOut = container(ecs, { width: 18, height: 18, color: { h: 170, s: 1, l: 0.7, a: 1 } })\r\nconst transform = container(ecs, { color: { h: 210, s: 1, l: 0.3, a: 1 }, padding: 10, x: 300, y: 100 },\r\n    column(ecs, { crossAxisAlignment: Alignment.CENTER }, [\r\n        container(ecs, { padding: 5 }, text(ecs, \"Transform\")),\r\n        container(ecs, { height: 10 }),\r\n        row(ecs, [\r\n            column(ecs, [\r\n                row(ecs, [\r\n                    transformIn,\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"in 0\")),\r\n                ]),\r\n                row(ecs, [\r\n                    container(ecs, { width: 18, height: 18, color: { h: 170, s: 1, l: 0.7, a: 1 } }),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"in 1\")),\r\n                ]),\r\n            ]),\r\n            container(ecs, { width: 30 }),\r\n            column(ecs, { crossAxisAlignment: Alignment.END }, [\r\n                row(ecs, [\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"out 0\")),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { width: 18, height: 18, color: { h: 170, s: 1, l: 0.7, a: 1 } })\r\n                ]),\r\n                row(ecs, [\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"out 1\")),\r\n                    container(ecs, { width: 5 }),\r\n                    transformOut\r\n                ]),\r\n            ])\r\n        ])\r\n    ])\r\n)\r\n\r\nconst sinkIn = container(ecs, { width: 18, height: 18, color: { h: 270, s: 1, l: 0.7, a: 1 } })\r\nconst sink = container(ecs, { color: { h: 310, s: 1, l: 0.3, a: 1 }, padding: 10, x: 550, y: 250 },\r\n    column(ecs, { crossAxisAlignment: Alignment.CENTER }, [\r\n        container(ecs, { padding: 5 }, text(ecs, \"Sink\")),\r\n        container(ecs, { height: 10 }),\r\n        row(ecs, [\r\n            column(ecs, [\r\n                row(ecs, [\r\n                    container(ecs, { width: 18, height: 18, color: { h: 270, s: 1, l: 0.7, a: 1 } }),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"in 0\")),\r\n                ]),\r\n                row(ecs, [\r\n                    sinkIn,\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"in 1\")),\r\n                ]),\r\n            ]),\r\n            container(ecs, { width: 30 }),\r\n            column(ecs, { crossAxisAlignment: Alignment.END }, [\r\n                row(ecs, [\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"out 0\")),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { width: 18, height: 18, color: { h: 270, s: 1, l: 0.7, a: 1 } })\r\n                ]),\r\n                row(ecs, [\r\n                    container(ecs, { padding: 2 }, text(ecs, { fontSize: 18 }, \"out 1\")),\r\n                    container(ecs, { width: 5 }),\r\n                    container(ecs, { width: 18, height: 18, color: { h: 270, s: 1, l: 0.7, a: 1 } })\r\n                ]),\r\n            ])\r\n        ])\r\n    ])\r\n)\r\n\r\nconst camera = ecs.entity(new Translate(0, 0))\r\n\r\nconst root = scene(ecs, {\r\n    camera,\r\n    children: [source, transform, sink],\r\n    connections: [\r\n        connection(ecs, { from: sourceOut, to: transformIn }),\r\n        connection(ecs, { from: transformOut, to: sinkIn }),\r\n    ]\r\n})\r\n\r\necs.set(renderer, new UIRoot(root))\r\n\r\nconsole.log(render(ecs))\r\n\r\nlet mouseDown = false\r\ndocument.addEventListener('mousedown', () => mouseDown = true)\r\ndocument.addEventListener('mousemove', (e) => {\r\n    if (!mouseDown) return\r\n    camera.update(Translate, translate => {\r\n        translate.x -= e.movementX\r\n        translate.y -= e.movementY\r\n    })\r\n    console.log(render(ecs))\r\n})\r\ndocument.addEventListener('mouseup', () => mouseDown = false)\r\n\r\nwindow.addEventListener('resize', () => {\r\n    renderer.setSize(window.innerWidth, window.innerHeight)\r\n    console.log(render(ecs))\r\n})\r\n\r\ndocument.body.appendChild(renderer.canvas)","export { ECS, Entity } from './ecs'\r\nexport { Renderer } from './renderer'\r\nexport * as systems from './systems'\r\nexport * as components from './components'\r\nexport * as ui from './ui'\r\nexport { Layers } from './layers'","export { render } from './render'\r\nexport { layout } from './layout'\r\nexport { geometry } from './geometry'","import { Renderer } from \"../renderer\";\r\nimport { ECS } from \"../ecs\";\r\nimport { CameraIndices, Colors, TextureCoordinates, VertexIndices, Vertices } from \"../components\";\r\nimport { Layers } from \"../layers\";\r\nimport { layout, geometry } from './'\r\n\r\nconst renderTriangles = (renderer: Renderer, layers: Layers) => {\r\n    const { gl } = renderer\r\n    let vertices: number[] = []\r\n    let colors: number[] = []\r\n    let textureCoordinates: number[] = []\r\n    let vertexIndices: number[] = []\r\n    let cameraIndices: number[] = []\r\n    let previousTexture: number = -1\r\n    for (const layer of layers.layers) {\r\n        for (const [texture, entities] of layer) {\r\n            if (texture != previousTexture) {\r\n                if (vertices.length) {\r\n                    renderer.draw({ vertices, colors, textureCoordinates, vertexIndices, cameraIndices })\r\n                    vertices = []\r\n                    colors = []\r\n                    textureCoordinates = []\r\n                    vertexIndices = []\r\n                    cameraIndices = []\r\n                }\r\n                previousTexture = texture\r\n                gl.bindTexture(gl.TEXTURE_2D, renderer.textures[texture])\r\n            }\r\n            for (const entity of entities) {\r\n                const offset = vertices.length / 2\r\n                vertices.push(...entity.get(Vertices)!.data)\r\n                colors.push(...entity.get(Colors)!.data)\r\n                textureCoordinates.push(...entity.get(TextureCoordinates)!.data)\r\n                for (const index of entity.get(VertexIndices)!.data) {\r\n                    vertexIndices.push(offset + index)\r\n                }\r\n                cameraIndices.push(...entity.get(CameraIndices)!.data)\r\n            }\r\n        }\r\n    }\r\n    if (vertices.length == 0) return\r\n    renderer.draw({ vertices, colors, textureCoordinates, vertexIndices, cameraIndices })\r\n}\r\n\r\nconst renderLines = (renderer: Renderer, layers: Layers) => {\r\n    const { gl } = renderer\r\n    let vertices: number[] = []\r\n    let colors: number[] = []\r\n    let textureCoordinates: number[] = []\r\n    let cameraIndices: number[] = []\r\n    gl.bindTexture(gl.TEXTURE_2D, renderer.textures[0])\r\n    for (const entity of layers.lines) {\r\n        vertices.push(...entity.get(Vertices)!.data)\r\n        colors.push(...entity.get(Colors)!.data)\r\n        textureCoordinates.push(...entity.get(TextureCoordinates)!.data)\r\n        cameraIndices.push(...entity.get(CameraIndices)!.data)\r\n    }\r\n    if (vertices.length == 0) return\r\n    renderer.drawLines({ vertices, colors, textureCoordinates, cameraIndices })\r\n}\r\n\r\n\r\nexport const render = (ecs: ECS) => {\r\n    const begin = performance.now()\r\n    layout(ecs)\r\n    const layers = geometry(ecs)\r\n    const renderer = ecs.get(Renderer)!\r\n    renderer.setCameras(layers.cameras)\r\n    renderer.clear()\r\n    renderTriangles(renderer, layers)\r\n    renderLines(renderer, layers)\r\n    const end = performance.now()\r\n    return end - begin\r\n}","import { Mat3 } from \"./linear_algebra\"\r\n\r\nclass DefaultProgram {\r\n    positionBuffer: WebGLBuffer\r\n    colorBuffer: WebGLBuffer\r\n    textureCoordinatesBuffer: WebGLBuffer\r\n    indexBuffer: WebGLBuffer\r\n    resolutionLocation: WebGLUniformLocation\r\n    devicePixelRatioLocation: WebGLUniformLocation\r\n    cameraLocation: WebGLUniformLocation\r\n    cameraIndexBuffer: WebGLBuffer\r\n\r\n    constructor(gl: WebGL2RenderingContext) {\r\n        const aPositionLocation = 0\r\n        const aTextureCoordinatesLocation = 1\r\n        const aColorLocation = 2\r\n        const aCameraIndexLocation = 3\r\n\r\n        const vertexShaderSource = `#version 300 es\r\n  uniform vec2 u_resolution;\r\n  uniform float u_devicePixelRatio;\r\n  uniform mat3 u_cameras[256];\r\n\r\n  layout(location = ${aPositionLocation}) in vec2 a_position;\r\n  layout(location = ${aTextureCoordinatesLocation}) in vec2 a_textureCoordinates;\r\n  layout(location = ${aColorLocation}) in vec4 a_color;\r\n  layout(location = ${aCameraIndexLocation}) in uint a_cameraIndex;\r\n\r\n  out vec2 v_textureCoordinates;\r\n  out vec4 v_color;\r\n\r\n  void main() {\r\n    mat3 camera = inverse(u_cameras[a_cameraIndex]);\r\n    vec3 position = camera * vec3(a_position.xy, 1);\r\n    vec2 zeroToOne = position.xy * u_devicePixelRatio / u_resolution;\r\n    vec2 zeroToTwo = zeroToOne * 2.0;\r\n    vec2 clipSpace = zeroToTwo - 1.0;\r\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\r\n    v_textureCoordinates = a_textureCoordinates * u_devicePixelRatio;\r\n    v_color = a_color;\r\n  }\r\n  `\r\n        const fragmentShaderSource = `#version 300 es\r\n  precision highp float;\r\n\r\n  uniform sampler2D u_texture;\r\n\r\n  in vec2 v_textureCoordinates;\r\n  in vec4 v_color;\r\n\r\n  out vec4 fragColor;\r\n  \r\n  vec4 hslToRgb(in vec4 hsl) {\r\n    float h = hsl.x / 360.0;\r\n    vec3 rgb = clamp(abs(mod(h * 6.0 + vec3(0.0,4.0,2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\r\n    return vec4(hsl.z + hsl.y * (rgb - 0.5) * (1.0 - abs(2.0 * hsl.z - 1.0)), hsl.w);\r\n  }\r\n\r\n  void main() {\r\n    ivec2 size = textureSize(u_texture, 0);\r\n    vec2 coordinate = v_textureCoordinates / vec2(float(size.x), float(size.y));\r\n    fragColor = texture(u_texture, coordinate) * hslToRgb(v_color);\r\n  }\r\n  `\r\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER)!\r\n        gl.shaderSource(vertexShader, vertexShaderSource)\r\n        gl.compileShader(vertexShader)\r\n\r\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!\r\n        gl.shaderSource(fragmentShader, fragmentShaderSource)\r\n        gl.compileShader(fragmentShader)\r\n\r\n        const program = gl.createProgram()!\r\n        gl.attachShader(program, vertexShader)\r\n        gl.attachShader(program, fragmentShader)\r\n        gl.linkProgram(program)\r\n\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            console.log(gl.getShaderInfoLog(vertexShader))\r\n            console.log(gl.getShaderInfoLog(fragmentShader))\r\n        }\r\n\r\n        gl.useProgram(program)\r\n\r\n        const vertexArrayObject = gl.createVertexArray()!\r\n        gl.bindVertexArray(vertexArrayObject)\r\n\r\n        this.positionBuffer = gl.createBuffer()!\r\n        gl.bindAttribLocation(program, aPositionLocation, 'a_position')\r\n        gl.enableVertexAttribArray(aPositionLocation)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.positionBuffer)\r\n        gl.vertexAttribPointer(\r\n            aPositionLocation,\r\n        /*size*/2,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n        )\r\n\r\n        this.textureCoordinatesBuffer = gl.createBuffer()!\r\n        gl.bindAttribLocation(program, aTextureCoordinatesLocation, 'a_textureCoordinates')\r\n        gl.enableVertexAttribArray(aTextureCoordinatesLocation)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.textureCoordinatesBuffer)\r\n        gl.vertexAttribPointer(\r\n            aTextureCoordinatesLocation,\r\n        /*size*/2,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n        )\r\n\r\n        this.colorBuffer = gl.createBuffer()!\r\n        gl.bindAttribLocation(program, aColorLocation, 'a_color')\r\n        gl.enableVertexAttribArray(aColorLocation)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer)\r\n        gl.vertexAttribPointer(\r\n            aColorLocation,\r\n        /*size*/4,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n        )\r\n\r\n        this.cameraIndexBuffer = gl.createBuffer()!\r\n        gl.bindAttribLocation(program, aCameraIndexLocation, 'a_cameraIndex')\r\n        gl.enableVertexAttribArray(aCameraIndexLocation)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.cameraIndexBuffer)\r\n        gl.vertexAttribIPointer(\r\n            aCameraIndexLocation,\r\n        /*size*/1,\r\n        /*type*/gl.UNSIGNED_BYTE,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n        )\r\n\r\n        this.indexBuffer = gl.createBuffer()!\r\n        this.resolutionLocation = gl.getUniformLocation(program, 'u_resolution')!\r\n        this.devicePixelRatioLocation = gl.getUniformLocation(program, 'u_devicePixelRatio')!\r\n        this.cameraLocation = gl.getUniformLocation(program, 'u_cameras')!\r\n    }\r\n}\r\n\r\nconst nearestPowerOfTwo = (x: number): number => {\r\n    let current = 1\r\n    while (current < x) {\r\n        current <<= 1\r\n    }\r\n    return current\r\n}\r\n\r\ninterface Metric {\r\n    x: number\r\n    y: number\r\n    width: number\r\n    height: number\r\n}\r\n\r\nclass FontAtlas {\r\n    constructor(\r\n        public texture: number,\r\n        public metrics: Metric[],\r\n        public fontFamily: string,\r\n        public fontSize: number,\r\n    ) { }\r\n\r\n    metric = (c: string) => this.metrics[c.charCodeAt(0)]\r\n}\r\n\r\ninterface DrawData {\r\n    vertices: number[]\r\n    colors: number[]\r\n    textureCoordinates: number[]\r\n    vertexIndices: number[]\r\n    cameraIndices: number[]\r\n}\r\n\r\ninterface DrawLineData {\r\n    vertices: number[]\r\n    colors: number[]\r\n    textureCoordinates: number[]\r\n    cameraIndices: number[]\r\n}\r\n\r\nconst createFontMetrics = (gl: WebGL2RenderingContext, texture: WebGLTexture, font: string, fontSize: number) => {\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')!\r\n    const totalCells = 256\r\n    const rows = Math.sqrt(totalCells)\r\n    const size = nearestPowerOfTwo(fontSize * rows)\r\n    const cellSize = size / rows\r\n    canvas.width = size * window.devicePixelRatio\r\n    canvas.height = size * window.devicePixelRatio\r\n    canvas.style.width = `${size}px`\r\n    canvas.style.height = `${size}px`\r\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio)\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n    ctx.font = font\r\n    ctx.fillStyle = 'white'\r\n    const ascii = Array.from({ length: totalCells }, (v, i) => i)\r\n    const chars = ascii.map(c => String.fromCharCode(c))\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    const metrics = chars.map((c, i) => {\r\n        const metric = ctx.measureText(c)\r\n        const width = Math.ceil(metric.width)\r\n        const height = fontSize\r\n        const x = i % rows * cellSize\r\n        const y = Math.floor(i / rows) * cellSize\r\n        ctx.fillText(c, x, y)\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        }\r\n    })\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n      /*mipLevel*/0,\r\n      /*internalformat*/gl.RGBA,\r\n      /*srcFormat*/gl.RGBA,\r\n      /*srcType*/gl.UNSIGNED_BYTE,\r\n      /*source*/canvas)\r\n    gl.generateMipmap(gl.TEXTURE_2D)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n    return metrics\r\n\r\n}\r\n\r\nexport class Renderer {\r\n    gl: WebGL2RenderingContext\r\n    canvas: HTMLCanvasElement\r\n    program: DefaultProgram\r\n    width: number\r\n    height: number\r\n    fontAtlasses: Map<string, FontAtlas>\r\n    textures: WebGLTexture[]\r\n    devicePixelRatio: number\r\n\r\n    constructor(width: number, height: number) {\r\n        const canvas = document.createElement('canvas')\r\n        const gl = canvas.getContext('webgl2')!\r\n        gl.clearColor(0.0, 0.0, 0.0, 1.0)\r\n        gl.enable(gl.BLEND)\r\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n        gl.depthMask(false)\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true)\r\n        gl.activeTexture(gl.TEXTURE0)\r\n        this.gl = gl\r\n        this.canvas = canvas\r\n        this.program = new DefaultProgram(gl)\r\n        this.fontAtlasses = new Map()\r\n        this.textures = []\r\n        this.devicePixelRatio = window.devicePixelRatio\r\n        this.setSize(width, height)\r\n        const texture = gl.createTexture()!\r\n        gl.bindTexture(gl.TEXTURE_2D, texture)\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D,\r\n      /*mipLevel*/0,\r\n      /*internalformat*/gl.RGBA,\r\n      /*width*/1,\r\n      /*height*/1,\r\n      /*border*/0,\r\n      /*srcFormat*/gl.RGBA,\r\n      /*srcType*/gl.UNSIGNED_BYTE,\r\n      /*data*/new Uint8Array([255, 255, 255, 255]))\r\n        this.textures.push(texture)\r\n    }\r\n\r\n    setSize = (width: number, height: number) => {\r\n        const { gl, canvas } = this\r\n        canvas.width = width * window.devicePixelRatio\r\n        canvas.height = height * window.devicePixelRatio\r\n        canvas.style.width = `${width}px`\r\n        canvas.style.height = `${height}px`\r\n        gl.uniform2f(this.program.resolutionLocation, canvas.width, canvas.height)\r\n        gl.uniform1f(this.program.devicePixelRatioLocation, window.devicePixelRatio)\r\n        gl.viewport(0, 0, canvas.width, canvas.height)\r\n        this.width = width\r\n        this.height = height\r\n        if (this.devicePixelRatio == window.devicePixelRatio) return\r\n        this.devicePixelRatio = window.devicePixelRatio\r\n        this.recreateFontAtlasses()\r\n    }\r\n\r\n    clear = () => {\r\n        const { gl } = this\r\n        gl.clear(gl.COLOR_BUFFER_BIT)\r\n    }\r\n\r\n    setCameras = (cameras: Mat3[]) => {\r\n        const { gl } = this\r\n        const data: number[] = []\r\n        for (const camera of cameras) {\r\n            data.push(...camera.data)\r\n        }\r\n        gl.uniformMatrix3fv(this.program.cameraLocation, /*transpose*/true, /*data*/data)\r\n    }\r\n\r\n    draw = ({ vertices, colors, textureCoordinates, vertexIndices, cameraIndices }: DrawData) => {\r\n        const { gl, program } = this\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.positionBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.colorBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.textureCoordinatesBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, program.indexBuffer)\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.cameraIndexBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Uint8Array(cameraIndices), gl.STATIC_DRAW)\r\n        gl.drawElements(gl.TRIANGLES, /*count*/vertexIndices.length, /*type*/gl.UNSIGNED_SHORT, /*offset*/0)\r\n    }\r\n\r\n    drawLines = ({ vertices, colors, textureCoordinates, cameraIndices }: DrawLineData) => {\r\n        const { gl, program } = this\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.positionBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.colorBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.textureCoordinatesBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, program.indexBuffer)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, program.cameraIndexBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Uint8Array(cameraIndices), gl.STATIC_DRAW)\r\n        gl.drawArrays(gl.LINES, 0, vertices.length / 2)\r\n    }\r\n\r\n    recreateFontAtlasses = () => {\r\n        for (const [font, fontAtlas] of this.fontAtlasses) {\r\n            const texture = this.textures[fontAtlas.texture]\r\n            const metrics = createFontMetrics(this.gl, texture, font, fontAtlas.fontSize)\r\n            fontAtlas.metrics = metrics\r\n        }\r\n    }\r\n\r\n    fontAtlas = (fontFamily: string, fontSize: number): FontAtlas => {\r\n        const font = `${fontSize}px ${fontFamily}`\r\n        const atlas = this.fontAtlasses.get(font)\r\n        if (atlas) return atlas\r\n        const { gl } = this\r\n        const texture = gl.createTexture()!\r\n        const metrics = createFontMetrics(gl, texture, font, fontSize)\r\n        const textureIndex = this.textures.length\r\n        this.textures.push(texture)\r\n        const newAtlas = new FontAtlas(textureIndex, metrics, fontFamily, fontSize)\r\n        this.fontAtlasses.set(font, newAtlas)\r\n        return newAtlas\r\n    }\r\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import { Entity } from \"./ecs\";\r\nimport { Layers } from \"./layers\";\r\n\r\nexport class UIRoot { constructor(public entity: Entity) { } }\r\n\r\nexport class Text { constructor(public value: string) { } }\r\n\r\nexport class FontSize { constructor(public value: number) { } }\r\n\r\nexport class FontFamily { constructor(public value: string) { } }\r\n\r\nexport class Child { constructor(public entity: Entity) { } }\r\n\r\nexport class Children { constructor(public entities: Entity[]) { } }\r\n\r\nexport class Connections { constructor(public entities: Entity[]) { } }\r\n\r\nexport class Camera { constructor(public entity: Entity) { } }\r\n\r\nexport enum Alignment { START, CENTER, END }\r\n\r\nexport class CrossAxisAlignment { constructor(public alignment: Alignment) { } }\r\n\r\nexport class Width { constructor(public value: number) { } }\r\n\r\nexport class Height { constructor(public value: number) { } }\r\n\r\nexport class Translate { constructor(public x: number, public y: number) { } }\r\n\r\nexport class From { constructor(public entity: Entity) { } }\r\n\r\nexport class To { constructor(public entity: Entity) { } }\r\n\r\nexport interface Hsla {\r\n    h: number\r\n    s: number\r\n    l: number\r\n    a: number\r\n}\r\n\r\nexport class Color {\r\n    h: number\r\n    s: number\r\n    l: number\r\n    a: number\r\n\r\n    constructor({ h, s, l, a }: Hsla) {\r\n        this.h = h\r\n        this.s = s\r\n        this.l = l\r\n        this.a = a\r\n    }\r\n}\r\n\r\nexport class Padding { constructor(public value: number) { } }\r\n\r\nexport class Constraints {\r\n    constructor(\r\n        public minWidth: number,\r\n        public maxWidth: number,\r\n        public minHeight: number,\r\n        public maxHeight: number\r\n    ) { }\r\n}\r\n\r\nexport class Size {\r\n    constructor(\r\n        public width: number,\r\n        public height: number,\r\n    ) { }\r\n}\r\n\r\nexport class Offset {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n    ) { }\r\n\r\n    add = (other: Offset) => new Offset(this.x + other.x, this.y + other.y)\r\n}\r\n\r\nexport class Layout {\r\n    constructor(\r\n        private impl: (self: Entity, constraints: Constraints) => Size\r\n    ) { }\r\n\r\n    layout = (self: Entity, constraints: Constraints) =>\r\n        this.impl(self, constraints)\r\n}\r\n\r\nexport class WorldSpace {\r\n    constructor(\r\n        public x: number,\r\n        public y: number,\r\n        public width: number,\r\n        public height: number\r\n    ) { }\r\n}\r\n\r\nexport class Vertices { constructor(public data: number[]) { } }\r\n\r\nexport class TextureCoordinates { constructor(public data: number[]) { } }\r\n\r\nexport class Colors { constructor(public data: number[]) { } }\r\n\r\nexport class VertexIndices { constructor(public data: number[]) { } }\r\n\r\nexport class CameraIndices { constructor(public data: number[]) { } }\r\n\r\nexport class Geometry {\r\n    constructor(\r\n        private impl: (self: Entity, parentOffset: Offset, layers: Layers, z: number) => void\r\n    ) { }\r\n\r\n    geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) =>\r\n        this.impl(self, parentOffset, layers, z)\r\n}","import { Constraints, Layout, UIRoot } from \"../components\";\r\nimport { ECS } from \"../ecs\";\r\nimport { Renderer } from \"../renderer\";\r\n\r\nexport const layout = (ecs: ECS) => {\r\n    const { width, height } = ecs.get(Renderer)!\r\n    const ui = ecs.get(UIRoot)!.entity\r\n    const constraints = new Constraints(0, width, 0, height)\r\n    ui.get(Layout)!.layout(ui, constraints)\r\n}","import { UIRoot, Geometry, Offset } from \"../components\";\r\nimport { ECS } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\n\r\nexport const geometry = (ecs: ECS): Layers => {\r\n    const layers = new Layers()\r\n    const ui = ecs.get(UIRoot)!.entity\r\n    ui.get(Geometry)!.geometry(ui, new Offset(0, 0), layers, 0)\r\n    return layers\r\n}","import { Entity } from \"./ecs\";\r\nimport { Mat3 } from \"./linear_algebra\";\r\n\r\ninterface Data {\r\n    z: number\r\n    texture: number\r\n    entity: Entity\r\n}\r\n\r\nexport class Layers {\r\n    layers: Map<number, Entity[]>[]\r\n    lines: Entity[]\r\n    cameras: Mat3[]\r\n    activeCamera: number\r\n\r\n    constructor() {\r\n        this.layers = []\r\n        this.lines = []\r\n        this.cameras = [Mat3.identity()]\r\n        this.activeCamera = 0\r\n    }\r\n\r\n    pushAndSetActiveCamera = (camera: Mat3) => {\r\n        this.activeCamera = this.cameras.length\r\n        this.cameras.push(camera)\r\n    }\r\n\r\n    push = ({ z, texture, entity }: Data): void => {\r\n        for (let i = this.layers.length; i < z + 1; ++i) {\r\n            this.layers.push(new Map())\r\n        }\r\n        const layer = this.layers[z]\r\n        const entities = layer.get(texture)\r\n        if (entities) {\r\n            entities.push(entity)\r\n            return\r\n        }\r\n        layer.set(texture, [entity])\r\n    }\r\n}","export class Mat3 {\r\n    constructor(public data: number[]) { }\r\n\r\n    static identity = () => new Mat3([\r\n        1, 0, 0,\r\n        0, 1, 0,\r\n        0, 0, 1,\r\n    ])\r\n}","export { text } from './text'\r\nexport { center } from './center'\r\nexport { column } from './column'\r\nexport { row } from './row'\r\nexport { container } from './container'\r\nexport { scene } from './scene'\r\nexport { connection } from './connection'","import {\r\n    Layout,\r\n    Text,\r\n    FontSize,\r\n    FontFamily,\r\n    Constraints,\r\n    Color,\r\n    Offset,\r\n    Geometry,\r\n    Size,\r\n    Vertices,\r\n    TextureCoordinates,\r\n    Colors,\r\n    VertexIndices,\r\n    Hsla,\r\n    WorldSpace,\r\n    CameraIndices\r\n} from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\nimport { Renderer } from \"../renderer\";\r\n\r\nconst textSize = (renderer: Renderer, entity: Entity) => {\r\n    const text = entity.get(Text)!.value\r\n    const fontSize = entity.get(FontSize)!.value\r\n    const fontFamily = entity.get(FontFamily)!.value\r\n    const atlas = renderer.fontAtlas(fontFamily, fontSize)\r\n    let size = new Size(0, 0)\r\n    for (const c of text) {\r\n        const metric = atlas.metric(c)\r\n        size.width += metric.width\r\n        size.height = Math.max(metric.height, size.height)\r\n    }\r\n    return size\r\n}\r\n\r\nconst textGeometry = (renderer: Renderer, entity: Entity, offset: Offset, layers: Layers): number => {\r\n    const text = entity.get(Text)!.value\r\n    const fontSize = entity.get(FontSize)!.value\r\n    const fontFamily = entity.get(FontFamily)!.value\r\n    const { h, s, l, a } = entity.get(Color)!\r\n    const atlas = renderer.fontAtlas(fontFamily, fontSize)\r\n    let x = 0\r\n    let indexOffset = 0\r\n    const vertices: number[] = []\r\n    const textureCoordinates: number[] = []\r\n    const colors: number[] = []\r\n    const indices: number[] = []\r\n    for (const c of text) {\r\n        const metric = atlas.metric(c)\r\n        const x0 = offset.x + x\r\n        const x1 = x0 + metric.width\r\n        const y0 = offset.y\r\n        const y1 = y0 + metric.height\r\n        vertices.push(\r\n            x0, y0,\r\n            x0, y1,\r\n            x1, y0,\r\n            x1, y1,\r\n        )\r\n        textureCoordinates.push(\r\n            metric.x, metric.y,\r\n            metric.x, metric.y + metric.height,\r\n            metric.x + metric.width, metric.y,\r\n            metric.x + metric.width, metric.y + metric.height,\r\n        )\r\n        colors.push(\r\n            h, s, l, a,\r\n            h, s, l, a,\r\n            h, s, l, a,\r\n            h, s, l, a,\r\n        )\r\n        indices.push(\r\n            indexOffset + 0, indexOffset + 1, indexOffset + 2,\r\n            indexOffset + 1, indexOffset + 2, indexOffset + 3,\r\n        )\r\n        x += metric.width\r\n        indexOffset += 4\r\n    }\r\n    entity.set(\r\n        new Vertices(vertices),\r\n        new TextureCoordinates(textureCoordinates),\r\n        new Colors(colors),\r\n        new VertexIndices(indices),\r\n        new CameraIndices(Array(indexOffset).fill(layers.activeCamera))\r\n    )\r\n    return atlas.texture\r\n}\r\n\r\nconst layout = (self: Entity, constraints: Constraints) => {\r\n    const size = textSize(self.ecs.get(Renderer)!, self)\r\n    self.set(constraints, size, new Offset(0, 0))\r\n    return size\r\n}\r\n\r\nconst geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) => {\r\n    const { width, height } = self.get(Size)!\r\n    const offset = parentOffset.add(self.get(Offset)!)\r\n    const texture = textGeometry(self.ecs.get(Renderer)!, self, offset, layers)\r\n    layers.push({ z, entity: self, texture })\r\n    self.set(new WorldSpace(offset.x, offset.y, width, height))\r\n}\r\n\r\ninterface Properties {\r\n    fontSize?: number\r\n    fontFamily?: number\r\n    color?: Hsla\r\n}\r\n\r\ntype Overload = {\r\n    (ecs: ECS, data: string): Entity\r\n    (ecs: ECS, properties: Properties, data: string): Entity\r\n}\r\n\r\nexport const text: Overload = (ecs: ECS, ...args: any[]): Entity => {\r\n    const [properties, data] = (() => {\r\n        if (typeof args[0] === 'string') return [{}, args[0]]\r\n        return [args[0], args[1]]\r\n    })()\r\n    return ecs.entity(\r\n        new Text(data),\r\n        new FontSize(properties.fontSize ?? 24),\r\n        new FontFamily(properties.fontFamily ?? \"monospace\"),\r\n        new Color(properties.color ?? { h: 0, s: 1, l: 1, a: 1 }),\r\n        new Layout(layout),\r\n        new Geometry(geometry),\r\n    )\r\n}","import {\r\n    Layout,\r\n    Constraints,\r\n    Geometry,\r\n    Size,\r\n    Child,\r\n    Offset,\r\n    WorldSpace,\r\n} from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\n\r\nconst layout = (self: Entity, constraints: Constraints) => {\r\n    const child = self.get(Child)!.entity\r\n    const childSize = child.get(Layout)!.layout(child, constraints)\r\n    child.update(Offset, offset => {\r\n        offset.x = constraints.maxWidth / 2 - childSize.width / 2\r\n        offset.y = constraints.maxHeight / 2 - childSize.height / 2\r\n    })\r\n    const size = new Size(constraints.maxWidth, constraints.maxHeight)\r\n    self.set(constraints, size, new Offset(0, 0))\r\n    return size\r\n}\r\n\r\nconst geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) => {\r\n    const { width, height } = self.get(Size)!\r\n    const offset = parentOffset.add(self.get(Offset)!)\r\n    const child = self.get(Child)!.entity\r\n    child.get(Geometry)!.geometry(child, offset, layers, z)\r\n    self.set(new WorldSpace(offset.x, offset.y, width, height))\r\n}\r\n\r\nexport const center = (ecs: ECS, child: Entity) =>\r\n    ecs.entity(\r\n        new Layout(layout),\r\n        new Geometry(geometry),\r\n        new Child(child)\r\n    )","import {\r\n    Layout,\r\n    Constraints,\r\n    Geometry,\r\n    Size,\r\n    Offset,\r\n    Children,\r\n    Alignment,\r\n    CrossAxisAlignment,\r\n    WorldSpace,\r\n} from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\n\r\nconst layout = (self: Entity, constraints: Constraints) => {\r\n    let width = 0\r\n    let height = 0\r\n    const children = self.get(Children)!.entities\r\n    for (const child of children) {\r\n        const size = child.get(Layout)!.layout(child, constraints)\r\n        child.update(Offset, offset => offset.y = height)\r\n        height += size.height\r\n        width = Math.max(width, size.width)\r\n    }\r\n    switch (self.get(CrossAxisAlignment)!.alignment) {\r\n        case Alignment.START:\r\n            break\r\n        case Alignment.CENTER:\r\n            for (const child of children) {\r\n                const childWidth = child.get(Size)!.width\r\n                child.update(Offset, offset => offset.x = width / 2 - childWidth / 2)\r\n            }\r\n            break\r\n        case Alignment.END:\r\n            for (const child of children) {\r\n                const childWidth = child.get(Size)!.width\r\n                child.update(Offset, offset => offset.x = width - childWidth)\r\n            }\r\n            break\r\n    }\r\n    const size = new Size(width, height)\r\n    self.set(constraints, size, new Offset(0, 0))\r\n    return size\r\n}\r\n\r\nconst geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) => {\r\n    const { width, height } = self.get(Size)!\r\n    const offset = parentOffset.add(self.get(Offset)!)\r\n    for (const child of self.get(Children)!.entities) {\r\n        child.get(Geometry)!.geometry(child, offset, layers, z)\r\n    }\r\n    self.set(new WorldSpace(offset.x, offset.y, width, height))\r\n}\r\n\r\ninterface Properties {\r\n    crossAxisAlignment?: Alignment\r\n}\r\n\r\ntype Overload = {\r\n    (ecs: ECS, children: Entity[]): Entity\r\n    (ecs: ECS, properties: Properties, children: Entity[]): Entity\r\n}\r\n\r\nexport const column: Overload = (ecs: ECS, ...args: any[]): Entity => {\r\n    const [properties, children] = (() => {\r\n        if (args[0] instanceof Array) return [{}, args[0]]\r\n        return [args[0], args[1]]\r\n    })()\r\n    return ecs.entity(\r\n        new Layout(layout),\r\n        new Geometry(geometry),\r\n        new Children(children),\r\n        new CrossAxisAlignment(properties.crossAxisAlignment ?? Alignment.START)\r\n    )\r\n}","import {\r\n    Layout,\r\n    Constraints,\r\n    Geometry,\r\n    Size,\r\n    Offset,\r\n    Children,\r\n    Alignment,\r\n    CrossAxisAlignment,\r\n    WorldSpace,\r\n} from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\n\r\nconst layout = (self: Entity, constraints: Constraints) => {\r\n    let width = 0\r\n    let height = 0\r\n    const children = self.get(Children)!.entities\r\n    for (const child of children) {\r\n        const size = child.get(Layout)!.layout(child, constraints)\r\n        child.update(Offset, offset => offset.x = width)\r\n        width += size.width\r\n        height = Math.max(height, size.height)\r\n    }\r\n    switch (self.get(CrossAxisAlignment)!.alignment) {\r\n        case Alignment.START:\r\n            break\r\n        case Alignment.CENTER:\r\n            for (const child of children) {\r\n                const childHeight = child.get(Size)!.height\r\n                child.update(Offset, offset => offset.y = height / 2 - childHeight / 2)\r\n            }\r\n            break\r\n        case Alignment.END:\r\n            for (const child of children) {\r\n                const childHeight = child.get(Size)!.height\r\n                child.update(Offset, offset => offset.y = height - childHeight)\r\n            }\r\n            break\r\n    }\r\n    const size = new Size(width, height)\r\n    self.set(constraints, size, new Offset(0, 0))\r\n    return size\r\n}\r\n\r\nconst geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) => {\r\n    const { width, height } = self.get(Size)!\r\n    const offset = parentOffset.add(self.get(Offset)!)\r\n    for (const child of self.get(Children)!.entities) {\r\n        child.get(Geometry)!.geometry(child, offset, layers, z)\r\n    }\r\n    self.set(new WorldSpace(offset.x, offset.y, width, height))\r\n}\r\n\r\ninterface Properties {\r\n    crossAxisAlignment?: Alignment\r\n}\r\n\r\ntype Overload = {\r\n    (ecs: ECS, children: Entity[]): Entity\r\n    (ecs: ECS, properties: Properties, children: Entity[]): Entity\r\n}\r\n\r\nexport const row: Overload = (ecs: ECS, ...args: any[]): Entity => {\r\n    const [properties, children] = (() => {\r\n        if (args[0] instanceof Array) return [{}, args[0]]\r\n        return [args[0], args[1]]\r\n    })()\r\n    return ecs.entity(\r\n        new Layout(layout),\r\n        new Geometry(geometry),\r\n        new Children(children),\r\n        new CrossAxisAlignment(properties.crossAxisAlignment ?? Alignment.START)\r\n    )\r\n}","import {\r\n    Layout,\r\n    Constraints,\r\n    Geometry,\r\n    Size,\r\n    Child,\r\n    Offset,\r\n    Hsla,\r\n    Color,\r\n    Vertices,\r\n    TextureCoordinates,\r\n    Colors,\r\n    VertexIndices,\r\n    Padding,\r\n    Width,\r\n    Height,\r\n    WorldSpace,\r\n    Translate,\r\n    CameraIndices\r\n} from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\n\r\nconst clamp = (value: number, min: number, max: number): number =>\r\n    Math.max(Math.min(value, max), min)\r\n\r\nconst layout = (self: Entity, constraints: Constraints) => {\r\n    const padding = self.get(Padding)!.value\r\n    const child = self.get(Child)\r\n    const { x, y } = self.get(Translate)!\r\n    const offset = new Offset(x, y)\r\n    if (child) {\r\n        const childSize = child.entity.get(Layout)!.layout(child.entity, constraints)\r\n        const size = new Size(\r\n            Math.min(constraints.maxWidth, childSize.width + 2 * padding),\r\n            Math.min(constraints.maxHeight, childSize.height + 2 * padding),\r\n        )\r\n        child.entity.update(Offset, offset => {\r\n            offset.x = padding\r\n            offset.y = padding\r\n        })\r\n        self.set(constraints, size, offset)\r\n        return size\r\n    }\r\n    const size = new Size(\r\n        clamp(self.get(Width)!.value, constraints.minWidth, constraints.maxWidth),\r\n        clamp(self.get(Height)!.value, constraints.minHeight, constraints.maxHeight),\r\n    )\r\n    self.set(constraints, size, offset)\r\n    return size\r\n}\r\n\r\nconst geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) => {\r\n    const offset = parentOffset.add(self.get(Offset)!)\r\n    const { width, height } = self.get(Size)!\r\n    const x0 = offset.x\r\n    const x1 = x0 + width\r\n    const y0 = offset.y\r\n    const y1 = y0 + height\r\n    const color = self.get(Color)\r\n    if (color) {\r\n        const { h, s, l, a } = color\r\n        self.set(\r\n            new Vertices([\r\n                x0, y0,\r\n                x0, y1,\r\n                x1, y0,\r\n                x1, y1,\r\n            ]),\r\n            new TextureCoordinates([\r\n                0, 0,\r\n                0, 0,\r\n                0, 0,\r\n                0, 0,\r\n            ]),\r\n            new Colors([\r\n                h, s, l, a,\r\n                h, s, l, a,\r\n                h, s, l, a,\r\n                h, s, l, a,\r\n            ]),\r\n            new VertexIndices([\r\n                0, 1, 2,\r\n                1, 2, 3,\r\n            ]),\r\n            new CameraIndices(Array(4).fill(layers.activeCamera))\r\n        )\r\n        layers.push({ z, texture: 0, entity: self })\r\n    }\r\n    const child = self.get(Child)\r\n    if (child) {\r\n        child.entity.get(Geometry)!.geometry(child.entity, offset, layers, z)\r\n    }\r\n    self.set(new WorldSpace(x0, y0, width, height))\r\n}\r\n\r\ninterface Properties {\r\n    color?: Hsla\r\n    padding?: number\r\n    width?: number\r\n    height?: number\r\n    x?: number\r\n    y?: number\r\n}\r\n\r\ntype Overload = {\r\n    (ecs: ECS, properties: Properties): Entity\r\n    (ecs: ECS, properties: Properties, child: Entity): Entity\r\n}\r\n\r\nexport const container: Overload = (ecs: ECS, properties: Properties, child?: Entity) => {\r\n    const entity = ecs.entity(\r\n        new Layout(layout),\r\n        new Geometry(geometry),\r\n        new Padding(properties.padding ?? 0),\r\n        new Width(properties.width ?? 0),\r\n        new Height(properties.height ?? 0),\r\n        new Translate(properties.x ?? 0, properties.y ?? 0)\r\n    )\r\n    if (properties.color) entity.set(new Color(properties.color))\r\n    if (child) entity.set(new Child(child))\r\n    return entity\r\n}","import {\r\n    Layout,\r\n    Constraints,\r\n    Geometry,\r\n    Size,\r\n    Offset,\r\n    Children,\r\n    Connections,\r\n    WorldSpace,\r\n    Camera,\r\n    Translate,\r\n} from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\nimport { Mat3 } from \"../linear_algebra\";\r\nimport { geometry as connectionGeometry } from './connection'\r\n\r\nconst layout = (self: Entity, constraints: Constraints) => {\r\n    for (const child of self.get(Children)!.entities) {\r\n        child.get(Layout)!.layout(child, constraints)\r\n    }\r\n    const size = new Size(constraints.maxWidth, constraints.maxHeight)\r\n    self.set(constraints, size, new Offset(0, 0))\r\n    return size\r\n}\r\n\r\nconst geometry = (self: Entity, parentOffset: Offset, layers: Layers, z: number) => {\r\n    const { x, y } = self.get(Camera)!.entity.get(Translate)!\r\n    layers.pushAndSetActiveCamera(new Mat3([\r\n        1, 0, x,\r\n        0, 1, y,\r\n        0, 0, 1\r\n    ]))\r\n    const { width, height } = self.get(Size)!\r\n    const offset = parentOffset.add(self.get(Offset)!)\r\n    for (const child of self.get(Children)!.entities) {\r\n        child.get(Geometry)!.geometry(child, offset, layers, z)\r\n    }\r\n    connectionGeometry(self.get(Connections)!.entities, layers)\r\n    self.set(new WorldSpace(offset.x, offset.y, width, height))\r\n}\r\n\r\ninterface Properties {\r\n    camera: Entity,\r\n    children: Entity[],\r\n    connections: Entity[],\r\n}\r\n\r\nexport const scene = (ecs: ECS, properties: Properties) =>\r\n    ecs.entity(\r\n        new Layout(layout),\r\n        new Geometry(geometry),\r\n        new Children(properties.children),\r\n        new Connections(properties.connections),\r\n        new Camera(properties.camera),\r\n    )","import { CameraIndices, Color, Colors, From, Hsla, TextureCoordinates, To, Vertices, WorldSpace } from \"../components\";\r\nimport { ECS, Entity } from \"../ecs\";\r\nimport { Layers } from \"../layers\";\r\n\r\nconst linspace = (start: number, stop: number, num: number): number[] => {\r\n    const step = (stop - start) / (num - 1)\r\n    return Array.from({ length: num }, (_, i) => start + step * i)\r\n}\r\n\r\nconst cubicBezier = (ts: number[], from: WorldSpace, to: WorldSpace): number[] => {\r\n    const p0x = from.x + from.width / 2\r\n    const p0y = from.y + from.height / 2\r\n    const p1x = p0x + 50\r\n    const p1y = p0y\r\n    const p3x = to.x + to.width / 2\r\n    const p3y = to.y + to.height / 2\r\n    const p2x = p3x - 50\r\n    const p2y = p3y\r\n    const result: number[] = []\r\n    let lastX = 0\r\n    let lastY = 0\r\n    for (const t of ts) {\r\n        const tSquared = t * t\r\n        const tCubed = tSquared * t\r\n        const oneMinusT = 1 - t\r\n        const oneMinusTSquared = oneMinusT * oneMinusT\r\n        const oneMinusTCubed = oneMinusTSquared * oneMinusT\r\n        const a = oneMinusTCubed\r\n        const b = 3 * oneMinusTSquared * t\r\n        const c = 3 * oneMinusT * tSquared\r\n        const d = tCubed\r\n        const x = a * p0x + b * p1x + c * p2x + d * p3x\r\n        const y = a * p0y + b * p1y + c * p2y + d * p3y\r\n        if (result.length) result.push(lastX, lastY)\r\n        else result.push(x, y)\r\n        result.push(x, y)\r\n        lastX = x\r\n        lastY = y\r\n    }\r\n    return result\r\n}\r\n\r\nexport const geometry = (connections: Entity[], layers: Layers) => {\r\n    const samples = 20\r\n    const ts = linspace(0, 1, samples)\r\n    const textureCoordinates = Array(samples * 4).fill(0)\r\n    for (const entity of connections) {\r\n        const from = entity.get(From)!.entity.get(WorldSpace)!\r\n        const to = entity.get(To)!.entity.get(WorldSpace)!\r\n        const vertices = cubicBezier(ts, from, to)\r\n        const { h, s, l, a } = entity.get(Color)!\r\n        const colors: number[] = []\r\n        for (let i = 0; i < samples * 2; ++i) colors.push(h, s, l, a)\r\n        entity.set(\r\n            new Vertices(vertices),\r\n            new TextureCoordinates(textureCoordinates),\r\n            new Colors(colors),\r\n            new CameraIndices(Array(vertices.length / 2).fill(layers.activeCamera))\r\n        )\r\n        layers.lines.push(entity)\r\n    }\r\n}\r\n\r\ninterface Properties {\r\n    from: Entity\r\n    to: Entity\r\n    color?: Hsla\r\n}\r\n\r\nexport const connection = (ecs: ECS, properties: Properties): Entity =>\r\n    ecs.entity(\r\n        new From(properties.from),\r\n        new To(properties.to),\r\n        new Color(properties.color ?? { h: 0, s: 1, l: 1, a: 1 }),\r\n    )","type Component<T> = { new(...args: any[]): T }\r\n\r\nclass Storage<T> {\r\n  lookup: Map<number, number>\r\n  data: T[]\r\n  inverses: number[]\r\n\r\n  constructor() {\r\n    this.clear()\r\n  }\r\n\r\n  get = (entity: Entity): T | undefined => {\r\n    const index = this.lookup.get(entity.id)\r\n    return index != undefined ? this.data[index] : undefined\r\n  }\r\n\r\n  hasId = (id: number): boolean => {\r\n    return this.lookup.has(id)\r\n  }\r\n\r\n  set = (entity: Entity, component: T): void => {\r\n    const index = this.lookup.get(entity.id)\r\n    if (index) {\r\n      this.data[index] = component\r\n      this.inverses[index] = entity.id\r\n      return\r\n    }\r\n    this.lookup.set(entity.id, this.data.length)\r\n    this.data.push(component)\r\n    this.inverses.push(entity.id)\r\n  }\r\n\r\n  clear = (): void => {\r\n    this.lookup = new Map()\r\n    this.data = []\r\n    this.inverses = []\r\n  }\r\n}\r\n\r\nexport class Entity {\r\n  constructor(public id: number, public ecs: ECS) { }\r\n\r\n  set = (...components: any): Entity => {\r\n    for (const component of components) {\r\n      const Type = component.constructor\r\n      let storage = this.ecs.storages.get(Type)\r\n      if (!storage) {\r\n        storage = new Storage()\r\n        this.ecs.storages.set(Type, storage)\r\n      }\r\n      storage.set(this, component)\r\n    }\r\n    return this\r\n  }\r\n\r\n  get = <T>(Type: Component<T>): Readonly<T> | undefined => {\r\n    const storage = this.ecs.storages.get(Type)\r\n    return storage ? storage.get(this) : undefined\r\n  }\r\n\r\n  update = <T>(Type: Component<T>, f: (T) => void): void => {\r\n    const storage = this.ecs.storages.get(Type)\r\n    if (!storage) return\r\n    const component = storage.get(this)\r\n    if (!component) return\r\n    f(component)\r\n  }\r\n}\r\n\r\nexport class ECS {\r\n  nextEntityId: number\r\n  storages: Map<Component<any>, Storage<any>>\r\n  resources: Map<Component<any>, any>\r\n\r\n  constructor() {\r\n    this.nextEntityId = 0\r\n    this.storages = new Map()\r\n    this.resources = new Map()\r\n  }\r\n\r\n  entity = (...components: any): Entity => {\r\n    const entity = new Entity(this.nextEntityId, this)\r\n    entity.set(...components)\r\n    ++this.nextEntityId\r\n    return entity\r\n  }\r\n\r\n  query = function*(...components: any): Generator<Entity> {\r\n    const primary = this.storages.get(components[0])\r\n    if (!primary) return\r\n    const secondary = components.slice(1).map(s => this.storages.get(s))\r\n    for (const id of primary.inverses) {\r\n      if (secondary.every(storage => storage.hasId(id))) {\r\n        yield new Entity(id, this)\r\n      }\r\n    }\r\n  }\r\n\r\n  set = <T>(...components: any): void => {\r\n    for (const component of components) {\r\n      const Type = component.constructor\r\n      this.resources.set(Type, component)\r\n    }\r\n  }\r\n\r\n  get = <T>(Type: Component<T>): T | undefined => {\r\n    return this.resources.get(Type)\r\n  }\r\n\r\n  unsetAll = <T>(Type: Component<T>): void => {\r\n    const storage = this.storages.get(Type)\r\n    if (!storage) return\r\n    storage.clear()\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}
{"mappings":"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","sources":["src/index.ts"],"sourcesContent":["interface Numbers {\n  xs: number[],\n  ys: number[],\n  literals: string[]\n}\n\ninterface Calls {\n  xs: number[],\n  ys: number[],\n  names: string[],\n  arguments: string[][],\n}\n\ninterface Cursor {\n  x: number,\n  y: number,\n}\n\nenum Kind {\n  NUMBER,\n}\n\ninterface Entity {\n  kind: Kind,\n  index: number,\n}\n\ninterface State {\n  numbers: Numbers,\n  calls: Calls\n  cursor: Cursor,\n  grid: number,\n  repeat: string,\n  editing?: Entity,\n}\n\nconst grid = 50\n\nconst state: State = {\n  numbers: {\n    xs: [],\n    ys: [],\n    literals: [],\n  },\n  calls: {\n    xs: [],\n    ys: [],\n    names: [],\n    arguments: [],\n  },\n  cursor: {\n    x: Math.round((window.innerWidth / 2) / grid) * grid,\n    y: Math.round((window.innerHeight / 2) / grid) * grid\n  },\n  grid,\n  repeat: ''\n}\n\n\nconst glCanvas: HTMLCanvasElement = document.querySelector('#gl')\nglCanvas.width = window.innerWidth\nglCanvas.height = window.innerHeight\nconst gl = glCanvas.getContext('webgl2')\n\ngl.enable(gl.BLEND)\ngl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\n\nconst textCanvas: HTMLCanvasElement = document.querySelector('#text')\ntextCanvas.width = window.innerWidth\ntextCanvas.height = window.innerHeight\nconst ctx = textCanvas.getContext('2d')\n\nconst vertexShaderSource = `#version 300 es\n\nin vec2 a_position;\n\nuniform vec2 u_resolution;\n\nvoid main() {\n  vec2 zeroToOne = a_position / u_resolution;\n  vec2 zeroToTwo = zeroToOne * 2.0;\n  vec2 clipSpace = zeroToTwo - 1.0;\n  gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\n}\n`\n\n\nconst fragmentShaderSource = `#version 300 es\n\nprecision highp float;\n\nuniform vec4 u_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = u_color;\n}\n`\n\n\nconst createShader = (gl: WebGL2RenderingContext, shader_type: number, source: string) => {\n  const shader = gl.createShader(shader_type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\n  if (success) {\n    return shader\n  }\n  console.log(gl.getShaderInfoLog(shader))\n  gl.deleteShader(shader)\n}\n\nconst vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\nconst fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource)\n\n\nconst createProgram = (gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader) => {\n  const program = gl.createProgram()\n  gl.attachShader(program, vertexShader)\n  gl.attachShader(program, fragmentShader)\n  gl.linkProgram(program)\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS)\n  if (success) {\n    return program\n  }\n  console.log(gl.getProgramInfoLog(program))\n  gl.deleteProgram(program)\n}\n\nconst program = createProgram(gl, vertexShader, fragmentShader)\n\nconst positionAttributeLocation = gl.getAttribLocation(program, \"a_position\")\nconst positionBuffer = gl.createBuffer()\n\n\nconst vao = gl.createVertexArray()\ngl.bindVertexArray(vao)\ngl.enableVertexAttribArray(positionAttributeLocation)\n\ngl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\n\n{\n  const size = 2\n  const dtype = gl.FLOAT\n  const normalize = false\n  const stride = 0\n  const offset = 0\n  gl.vertexAttribPointer(positionAttributeLocation, size, dtype, normalize, stride, offset)\n}\n\n\n\n\n\nconst resizeCanvasToDisplaySize = (canvas: HTMLCanvasElement) => {\n  const dpr = window.devicePixelRatio\n  const { width, height } = canvas.getBoundingClientRect()\n  const displayWidth = Math.round(width * dpr)\n  const displayHeight = Math.round(height * dpr)\n  const needResize = canvas.width != displayWidth || canvas.height != displayHeight;\n  if (needResize) {\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n  return needResize;\n}\n\nconst resoltionUniformLocation = gl.getUniformLocation(program, \"u_resolution\")\n\nresizeCanvasToDisplaySize(gl.canvas)\ngl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\ngl.clearColor(.27, .35, .39, 1)\n\n\ngl.useProgram(program)\ngl.uniform2f(resoltionUniformLocation, gl.canvas.width, gl.canvas.height)\n\ngl.bindVertexArray(vao)\n\n\nconst randomInt = (range: number) => Math.floor(Math.random() * range)\n\nconst setRectangle = (gl: WebGL2RenderingContext, x: number, y: number, width: number, height: number) => {\n  const x1 = x\n  const x2 = x + width\n  const y1 = y\n  const y2 = y + height\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n    x1, y1,\n    x2, y1,\n    x1, y2,\n    x1, y2,\n    x2, y1,\n    x2, y2,\n  ]), gl.STATIC_DRAW);\n}\n\nconst colorLocation = gl.getUniformLocation(program, \"u_color\")\n\n\nconst primitiveType = gl.TRIANGLES\nconst offset = 0\nconst count = 6\n\n\ngl.clear(gl.COLOR_BUFFER_BIT)\n\nconst width = 200\nconst height = 105\n\n\nconst renderNumbers = (state: State) => {\n  state.numbers.xs.map((x, i) => {\n    const y = state.numbers.ys[i]\n\n    // function name\n\n    setRectangle(gl, x, y, 200, 40)\n    gl.uniform4f(colorLocation, .10, .46, .82, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n    ctx.font = '22px sans-serif'\n    ctx.fillStyle = 'white'\n    ctx.fillText('Number', x + 5, y + 28)\n\n    // function body\n\n    setRectangle(gl, x, y + 40, 200, 60)\n    gl.uniform4f(colorLocation, .11, .19, .23, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n    // editing\n    if (state.editing && state.editing.index == i) {\n      setRectangle(gl, x + 10, y + 50, 150, 40)\n      gl.uniform4f(colorLocation, 1, 1, 1, 1)\n      gl.drawArrays(primitiveType, offset, count)\n\n      const literal = state.numbers.literals[i]\n      if (literal.length > 0) {\n        ctx.font = '20px sans-serif'\n        ctx.fillStyle = 'black'\n        ctx.fillText(parseInt(literal).toLocaleString(), x + 15, y + 75)\n      }\n    } else {\n      const literal = state.numbers.literals[i]\n      if (literal.length > 0) {\n        ctx.font = '20px sans-serif'\n        ctx.fillStyle = 'white'\n        ctx.fillText(parseInt(literal).toLocaleString(), x + 15, y + 75)\n      }\n    }\n\n\n    // result\n    setRectangle(gl, x + 175, y + 65, 15, 15)\n    gl.uniform4f(colorLocation, .39, .64, 1, 1)\n    gl.drawArrays(primitiveType, offset, count)\n  })\n}\n\nconst renderCalls = (calls: Calls) => {\n  calls.xs.map((x, i) => {\n    const y = calls.ys[i]\n\n    // function name\n\n    setRectangle(gl, x, y, width, 40)\n    gl.uniform4f(colorLocation, .10, .46, .82, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n    ctx.font = '22px sans-serif'\n    ctx.fillStyle = 'white'\n    ctx.fillText('Add', x + 5, y + 28)\n\n    // function body\n\n    setRectangle(gl, x, y + 40, 200, height - 40)\n    gl.uniform4f(colorLocation, .11, .19, .23, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n\n    // x\n\n    setRectangle(gl, x + 10, y + 55, 10, 10)\n    gl.uniform4f(colorLocation, .39, .64, 1, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n    ctx.font = '18px sans-serif'\n    ctx.fillStyle = 'white'\n    ctx.fillText('x', x + 30, y + 65)\n\n\n    // y\n\n    setRectangle(gl, x + 10, y + 80, 10, 10)\n    gl.uniform4f(colorLocation, .39, .64, 1, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n    ctx.font = '18px sans-serif'\n    ctx.fillStyle = 'white'\n    ctx.fillText('y', x + 30, y + 90)\n\n\n    // result\n\n    setRectangle(gl, x + 180, y + 55, 10, 10)\n    gl.uniform4f(colorLocation, .39, .64, 1, 1)\n    gl.drawArrays(primitiveType, offset, count)\n\n    ctx.font = '18px sans-serif'\n    ctx.fillStyle = 'white'\n    ctx.fillText('result', x + 125, y + 65)\n\n  })\n}\n\nconst mainLoop = () => {\n  gl.clear(gl.COLOR_BUFFER_BIT)\n  ctx.clearRect(0, 0, textCanvas.width, textCanvas.height)\n\n\n  for (let x = state.grid; x < textCanvas.width; x += state.grid) {\n    setRectangle(gl, x, 0, 1, textCanvas.height)\n    gl.uniform4f(colorLocation, 1, 1, 1, 0.1)\n    gl.drawArrays(primitiveType, offset, count)\n  }\n\n  for (let y = state.grid; y < textCanvas.height; y += state.grid) {\n    setRectangle(gl, 0, y, textCanvas.width, 1)\n    gl.uniform4f(colorLocation, 1, 1, 1, 0.1)\n    gl.drawArrays(primitiveType, offset, count)\n  }\n\n  renderNumbers(state)\n  renderCalls(state.calls)\n\n\n  // cursor\n  const x = state.cursor.x - width / 2\n  const y = state.cursor.y - height / 2\n\n  setRectangle(gl, x + width / 2 - 15, y + height / 2 - 1, 30, 2)\n  gl.uniform4f(colorLocation, 1, 1, 1, 1)\n  gl.drawArrays(primitiveType, offset, count)\n\n  setRectangle(gl, x + width / 2 - 1, y + height / 2 - 15, 2, 30)\n  gl.uniform4f(colorLocation, 1, 1, 1, 1)\n  gl.drawArrays(primitiveType, offset, count)\n\n}\n\nrequestAnimationFrame(mainLoop)\n\ndocument.addEventListener('mousemove', event => {\n  state.cursor.x = Math.round(event.clientX / state.grid) * state.grid\n  state.cursor.y = Math.round(event.clientY / state.grid) * state.grid\n  requestAnimationFrame(mainLoop)\n})\n\nconst addNumber = (state: State) => {\n  state.editing = {\n    kind: Kind.NUMBER,\n    index: state.numbers.xs.length\n  }\n  state.numbers.xs.push(state.cursor.x)\n  state.numbers.ys.push(state.cursor.y)\n  state.numbers.literals.push('')\n}\n\nconst addCall = (state: State) => {\n  state.calls.xs.push(state.cursor.x)\n  state.calls.ys.push(state.cursor.y)\n  state.calls.names.push('Add')\n  state.calls.arguments.push(['x', 'y'])\n}\n\nconst repeat = (state: State) => {\n  if (state.repeat.length > 0) {\n    const result = parseInt(state.repeat)\n    state.repeat = ''\n    return result\n  }\n  return 1\n}\n\ndocument.addEventListener('keypress', event => {\n  switch (event.key) {\n    case 'n':\n      addNumber(state);\n      requestAnimationFrame(mainLoop)\n      break\n    case 'c':\n      addCall(state);\n      requestAnimationFrame(mainLoop)\n      break\n    case 'h':\n      state.cursor.x -= state.grid * repeat(state);\n      state.editing = null\n      requestAnimationFrame(mainLoop)\n      break\n    case 'j':\n      state.cursor.y += state.grid * repeat(state);\n      state.editing = null\n      requestAnimationFrame(mainLoop)\n      break\n    case 'k':\n      state.cursor.y -= state.grid * repeat(state);\n      state.editing = null\n      requestAnimationFrame(mainLoop)\n      break\n    case 'l':\n      state.cursor.x += state.grid * repeat(state);\n      state.editing = null\n      requestAnimationFrame(mainLoop)\n      break\n    case '0':\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n      if (state.editing) {\n        state.numbers.literals[state.editing.index] += event.key\n        requestAnimationFrame(mainLoop)\n      } else {\n        state.repeat += event.key\n      }\n      break\n    default: console.log(event.key)\n  }\n})\n\nwindow.addEventListener('resize', () => {\n  gl.canvas.width = window.innerWidth\n  gl.canvas.height = window.innerHeight\n  resizeCanvasToDisplaySize(gl.canvas)\n  gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n  gl.uniform2f(resoltionUniformLocation, gl.canvas.width, gl.canvas.height)\n  textCanvas.width = window.innerWidth\n  textCanvas.height = window.innerHeight\n})\n\n\n"],"names":["$b4e14b6b8da86996$var$Kind","Kind","$b4e14b6b8da86996$var$state","numbers","xs","ys","literals","calls","names","arguments","cursor","x","Math","round","window","innerWidth","y","innerHeight","grid","repeat","$b4e14b6b8da86996$var$glCanvas","document","querySelector","width","height","$b4e14b6b8da86996$var$gl","getContext","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","$b4e14b6b8da86996$var$textCanvas","$b4e14b6b8da86996$var$ctx","$b4e14b6b8da86996$var$createShader","gl","shader_type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","deleteShader","$b4e14b6b8da86996$var$vertexShader","VERTEX_SHADER","$b4e14b6b8da86996$var$fragmentShader","FRAGMENT_SHADER","$b4e14b6b8da86996$var$program","vertexShader","fragmentShader","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","$b4e14b6b8da86996$var$createProgram","$b4e14b6b8da86996$var$positionAttributeLocation","getAttribLocation","$b4e14b6b8da86996$var$positionBuffer","createBuffer","$b4e14b6b8da86996$var$vao","createVertexArray","bindVertexArray","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","size","dtype","FLOAT","normalize","stride","offset","vertexAttribPointer","$b4e14b6b8da86996$var$resizeCanvasToDisplaySize","canvas","dpr","devicePixelRatio","getBoundingClientRect","displayWidth","displayHeight","needResize","$b4e14b6b8da86996$var$resoltionUniformLocation","getUniformLocation","viewport","clearColor","useProgram","uniform2f","$b4e14b6b8da86996$var$setRectangle","x1","x2","y1","y2","bufferData","Float32Array","STATIC_DRAW","$b4e14b6b8da86996$var$colorLocation","$b4e14b6b8da86996$var$primitiveType","TRIANGLES","clear","COLOR_BUFFER_BIT","$b4e14b6b8da86996$var$mainLoop","clearRect","uniform4f","drawArrays","state","map","i","font","fillStyle","fillText","editing","index","literal","length","parseInt","toLocaleString","$b4e14b6b8da86996$var$height","x3","$b4e14b6b8da86996$var$width","y3","requestAnimationFrame","addEventListener","event","clientX","clientY","$b4e14b6b8da86996$var$repeat","result","key","kind","NUMBER","push","$b4e14b6b8da86996$var$addCall"],"version":3,"file":"index.dc18c506.js.map"}
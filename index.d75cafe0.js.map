{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ae5dafeb2bf522f7.js","src/fuzzy_find.ts","src/linear_algebra/matrix3x3.ts","src/linear_algebra/vector3.ts","src/model/focus.ts","src/model/pointer_action.ts","src/update/graph.ts","src/model/quick_select.ts","src/update/focus.ts","src/update/quick_select.ts","src/update/move_camera.ts","src/update/move_node.ts","src/update/index.ts","src/ui/pointer_down.ts","src/ui/batch_geometry.ts","src/ui/camera_stack.ts","src/ui/center.ts","src/ui/alignment.ts","src/ui/column.ts","src/ui/container.ts","src/ui/row.ts","src/ui/scene.ts","src/ui/stack.ts","src/ui/text.ts","src/ui/index.ts","src/ui/reduce.ts","src/ui/gather_on_click_handlers.ts","src/ui/id_to_world_space.ts","src/ui/layer_geometry.ts","src/ui/gather_connections.ts","src/ui/reducer.ts","src/ui/render.ts","src/ui/webgl2.ts","src/ui/run.ts","src/view/context_menu.ts","src/view/index.ts","src/model/empty.ts","src/model/graph.ts","src/index.ts","src/model/demo.ts","node_modules/@parcel/runtime-js/lib/runtime-c631f88a77b3e252.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1LzKV\\\":\\\"index.d75cafe0.js\\\",\\\"g0Phv\\\":\\\"service_worker.js\\\"}\"));","export interface FuzzyFind {\r\n    haystack: string\r\n    needle: string\r\n}\r\n\r\nexport const fuzzyFind = ({ haystack, needle }: FuzzyFind): boolean => {\r\n    let haystackIndex = 0\r\n    let needleIndex = 0\r\n    while (needleIndex < needle.length) {\r\n        const n = needle[needleIndex].toLowerCase()\r\n        while (haystackIndex < haystack.length && n !== haystack[haystackIndex].toLowerCase()) {\r\n            ++haystackIndex\r\n        }\r\n        if (haystackIndex === haystack.length) return false\r\n        ++needleIndex\r\n    }\r\n    return true\r\n}\r\n","import { Size } from \"../ui\"\r\nimport { Vector3 } from \"./vector3\"\r\n\r\nexport type Matrix3x3 = Readonly<number[]>\r\n\r\nexport const identity = (): Matrix3x3 => [\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1,\r\n]\r\n\r\nexport const projection = ({ width, height }: Size): Matrix3x3 => [\r\n    2 / width, 0, -1,\r\n    0, -2 / height, 1,\r\n    0, 0, 1\r\n]\r\n\r\nexport const translate = (x: number, y: number): Matrix3x3 => [\r\n    1, 0, x,\r\n    0, 1, y,\r\n    0, 0, 1\r\n]\r\n\r\nexport const scale = (x: number, y: number): Matrix3x3 => [\r\n    x, 0, 0,\r\n    0, y, 0,\r\n    0, 0, 1\r\n]\r\n\r\nexport const rotate = (radians: number): Matrix3x3 => {\r\n    const c = Math.cos(radians)\r\n    const s = Math.sin(radians)\r\n    return [\r\n        c, s, 0,\r\n        -s, c, 0,\r\n        0, 0, 1\r\n    ]\r\n}\r\n\r\nexport const multiplyMatrices = (...matrices: Matrix3x3[]) => {\r\n    const [head, ...tail] = matrices\r\n    return tail.reduce((a, b) => {\r\n        const a11 = a[0]\r\n        const a12 = a[1]\r\n        const a13 = a[2]\r\n        const a21 = a[3]\r\n        const a22 = a[4]\r\n        const a23 = a[5]\r\n        const a31 = a[6]\r\n        const a32 = a[7]\r\n        const a33 = a[8]\r\n        const b11 = b[0]\r\n        const b12 = b[1]\r\n        const b13 = b[2]\r\n        const b21 = b[3]\r\n        const b22 = b[4]\r\n        const b23 = b[5]\r\n        const b31 = b[6]\r\n        const b32 = b[7]\r\n        const b33 = b[8]\r\n        const c11 = a11 * b11 + a12 * b21 + a13 * b31\r\n        const c12 = a11 * b12 + a12 * b22 + a13 * b32\r\n        const c13 = a11 * b13 + a12 * b23 + a13 * b33\r\n        const c21 = a21 * b11 + a22 * b21 + a23 * b31\r\n        const c22 = a21 * b12 + a22 * b22 + a23 * b32\r\n        const c23 = a21 * b13 + a22 * b23 + a23 * b33\r\n        const c31 = a31 * b11 + a32 * b21 + a33 * b31\r\n        const c32 = a31 * b12 + a32 * b22 + a33 * b32\r\n        const c33 = a31 * b13 + a32 * b23 + a33 * b33\r\n        return [\r\n            c11, c12, c13,\r\n            c21, c22, c23,\r\n            c31, c32, c33,\r\n        ]\r\n    }, head)\r\n}\r\n\r\nexport const multiplyMatrixVector = (a: Matrix3x3, b: Vector3): Vector3 => {\r\n    const a11 = a[0]\r\n    const a12 = a[1]\r\n    const a13 = a[2]\r\n    const a21 = a[3]\r\n    const a22 = a[4]\r\n    const a23 = a[5]\r\n    const a31 = a[6]\r\n    const a32 = a[7]\r\n    const a33 = a[8]\r\n    const b1 = b[0]\r\n    const b2 = b[1]\r\n    const b3 = b[2]\r\n    const c1 = a11 * b1 + a12 * b2 + a13 * b3\r\n    const c2 = a21 * b1 + a22 * b2 + a23 * b3\r\n    const c3 = a31 * b1 + a32 * b2 + a33 * b3\r\n    return [c1, c2, c3]\r\n}\r\n\r\nexport const inverse = (a: Matrix3x3): Matrix3x3 => {\r\n    const a11 = a[0]\r\n    const a12 = a[1]\r\n    const a13 = a[2]\r\n    const a21 = a[3]\r\n    const a22 = a[4]\r\n    const a23 = a[5]\r\n    const a31 = a[6]\r\n    const a32 = a[7]\r\n    const a33 = a[8]\r\n    const b11 = a22 * a33 - a23 * a32\r\n    const b12 = a21 * a33 - a23 * a31\r\n    const b13 = a21 * a32 - a22 * a31\r\n    const b21 = a12 * a33 - a13 * a32\r\n    const b22 = a11 * a33 - a13 * a31\r\n    const b23 = a11 * a32 - a12 * a31\r\n    const b31 = a12 * a23 - a13 * a22\r\n    const b32 = a11 * a23 - a13 * a21\r\n    const b33 = a11 * a22 - a12 * a21\r\n    const det = a31 * b31 - a32 * b32 + a33 * b33\r\n    const idet = 1 / det\r\n    return [\r\n        idet * b11, idet * -b21, idet * b31,\r\n        idet * -b12, idet * b22, idet * -b32,\r\n        idet * b13, idet * -b23, idet * b33\r\n    ]\r\n}","export type Vector3 = number[]\r\n\r\nexport const length = ([a, b, c]: Vector3) =>\r\n    Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))","import { UUID } from \"./graph\"\r\nimport { PointerAction } from \"./pointer_action\"\r\nimport { QuickSelect, QuickSelectNone } from \"./quick_select\"\r\n\r\nexport enum FocusKind {\r\n    NODE,\r\n    INPUT,\r\n    OUTPUT,\r\n    BODY,\r\n    FINDER,\r\n    NONE\r\n}\r\n\r\nexport interface MoveNode {\r\n    readonly left: boolean\r\n    readonly down: boolean\r\n    readonly up: boolean\r\n    readonly right: boolean\r\n    readonly now: number\r\n}\r\n\r\n\r\nexport interface FocusNode {\r\n    readonly kind: FocusKind.NODE\r\n    readonly node: UUID\r\n    readonly drag: boolean\r\n    readonly move: MoveNode\r\n    readonly quickSelect: QuickSelect\r\n}\r\n\r\nexport interface FocusInput {\r\n    readonly kind: FocusKind.INPUT\r\n    readonly input: UUID\r\n    readonly quickSelect: QuickSelect\r\n}\r\n\r\nexport interface FocusOutput {\r\n    readonly kind: FocusKind.OUTPUT\r\n    readonly output: UUID\r\n    readonly quickSelect: QuickSelect\r\n}\r\n\r\nexport interface FocusBody {\r\n    readonly kind: FocusKind.BODY\r\n    readonly body: UUID\r\n    readonly quickSelect: QuickSelect\r\n}\r\n\r\nexport interface FocusFinder {\r\n    readonly kind: FocusKind.FINDER,\r\n    readonly search: string\r\n    readonly options: Readonly<string[]>\r\n    readonly quickSelect: QuickSelectNone\r\n}\r\n\r\nexport interface FocusNone {\r\n    readonly kind: FocusKind.NONE\r\n    readonly pointerAction: PointerAction\r\n    readonly quickSelect: QuickSelect\r\n}\r\n\r\nexport type Focus =\r\n    | FocusNode\r\n    | FocusInput\r\n    | FocusOutput\r\n    | FocusBody\r\n    | FocusFinder\r\n    | FocusNone\r\n","import { Position } from \"./graph\"\r\n\r\nexport enum PointerActionKind { PAN, ZOOM, NONE }\r\n\r\nexport interface PointerActionPan {\r\n    readonly kind: PointerActionKind.PAN\r\n}\r\n\r\nexport interface PointerActionZoom {\r\n    readonly kind: PointerActionKind.ZOOM\r\n    readonly pointerDistance: number\r\n    readonly pointerCenter: Position\r\n}\r\n\r\nexport interface PointerActionNone {\r\n    readonly kind: PointerActionKind.NONE\r\n}\r\n\r\nexport type PointerAction =\r\n    | PointerActionPan\r\n    | PointerActionZoom\r\n    | PointerActionNone\r\n","import { Body, Edge, GenerateUUID, Graph, Inputs, Node, Operation, Outputs, Position, UUID } from \"../model/graph\"\r\n\r\ninterface AddNodeInputs {\r\n    graph: Graph\r\n    operation: Operation\r\n    position: Position\r\n    generateUUID: GenerateUUID\r\n}\r\n\r\ninterface AddNodeOutputs {\r\n    graph: Graph\r\n    node: UUID\r\n}\r\n\r\nexport const addNode = ({ graph, operation, position, generateUUID }: AddNodeInputs): AddNodeOutputs => {\r\n    const nodeUUID = generateUUID()\r\n    const inputs: Inputs = { ...graph.inputs }\r\n    const inputUUIDs = []\r\n    for (const name of operation.inputs) {\r\n        const uuid = generateUUID()\r\n        inputs[uuid] = {\r\n            uuid,\r\n            node: nodeUUID,\r\n            name\r\n        }\r\n        inputUUIDs.push(uuid)\r\n    }\r\n    const outputs: Outputs = { ...graph.outputs }\r\n    const outputUUIDs = []\r\n    for (const name of operation.outputs) {\r\n        const uuid = generateUUID()\r\n        outputs[uuid] = {\r\n            uuid,\r\n            node: nodeUUID,\r\n            name,\r\n            edges: []\r\n        }\r\n        outputUUIDs.push(uuid)\r\n    }\r\n    const node: Node = {\r\n        uuid: nodeUUID,\r\n        name: operation.name,\r\n        inputs: inputUUIDs,\r\n        outputs: outputUUIDs,\r\n        position\r\n    }\r\n    if (operation.body !== undefined) {\r\n        const body: Body = {\r\n            uuid: generateUUID(),\r\n            node: nodeUUID,\r\n            value: operation.body\r\n        }\r\n        return {\r\n            graph: {\r\n                ...graph,\r\n                nodes: { ...graph.nodes, [node.uuid]: { ...node, body: body.uuid } },\r\n                inputs,\r\n                outputs,\r\n                bodys: { ...graph.bodys, [body.uuid]: body }\r\n            },\r\n            node: nodeUUID\r\n        }\r\n    } else {\r\n        return {\r\n            graph: {\r\n                ...graph,\r\n                nodes: { ...graph.nodes, [node.uuid]: node },\r\n                inputs,\r\n                outputs\r\n            },\r\n            node: nodeUUID\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeNode = (graph: Graph, node: UUID): Graph => {\r\n    const nodes = { ...graph.nodes }\r\n    const removedNode = nodes[node]\r\n    delete nodes[node]\r\n    const edgeUUIDs: UUID[] = []\r\n    for (const input of removedNode.inputs) {\r\n        const edge = graph.inputs[input].edge\r\n        if (edge) edgeUUIDs.push(edge)\r\n    }\r\n    for (const output of removedNode.outputs) {\r\n        for (const edge of graph.outputs[output].edges) {\r\n            edgeUUIDs.push(edge)\r\n        }\r\n    }\r\n    const edges = { ...graph.edges }\r\n    const inputs = { ...graph.inputs }\r\n    const outputs = { ...graph.outputs }\r\n    for (const uuid of edgeUUIDs) {\r\n        const edge = edges[uuid]\r\n        const input = inputs[edge.input]\r\n        inputs[edge.input] = {\r\n            ...input,\r\n            edge: undefined\r\n        }\r\n        const output = outputs[edge.output]\r\n        outputs[edge.output] = {\r\n            ...output,\r\n            edges: output.edges.filter(e => e !== uuid)\r\n        }\r\n        delete edges[uuid]\r\n    }\r\n    for (const input of removedNode.inputs) delete inputs[input]\r\n    for (const output of removedNode.outputs) delete outputs[output]\r\n    return {\r\n        ...graph,\r\n        nodes,\r\n        edges,\r\n        inputs,\r\n        outputs\r\n    }\r\n}\r\n\r\nexport const removeInputEdge = (graph: Graph, input: UUID): Graph => {\r\n    const edgeUUID = graph.inputs[input].edge\r\n    if (edgeUUID) {\r\n        const edge = graph.edges[edgeUUID]\r\n        const output = graph.outputs[edge.output]\r\n        const outputs = {\r\n            ...graph.outputs,\r\n            [edge.output]: {\r\n                ...output,\r\n                edges: output.edges.filter(e => e !== edge.uuid)\r\n            }\r\n        }\r\n        const input = graph.inputs[edge.input]\r\n        const inputs = {\r\n            ...graph.inputs,\r\n            [edge.input]: {\r\n                ...input,\r\n                edge: undefined\r\n            }\r\n        }\r\n        const edges = { ...graph.edges }\r\n        delete edges[edgeUUID]\r\n        return {\r\n            ...graph,\r\n            outputs,\r\n            inputs,\r\n            edges\r\n        }\r\n    } else {\r\n        return graph\r\n    }\r\n}\r\n\r\n\r\nexport const removeOutputEdges = (graph: Graph, output: UUID): Graph => {\r\n    const edges = { ...graph.edges }\r\n    const inputs = { ...graph.inputs }\r\n    const outputs = { ...graph.outputs }\r\n    for (const uuid of graph.outputs[output].edges) {\r\n        const edge = graph.edges[uuid]\r\n        const input = inputs[edge.input]\r\n        inputs[edge.input] = {\r\n            ...input,\r\n            edge: undefined\r\n        }\r\n        const output = outputs[edge.output]\r\n        outputs[edge.output] = {\r\n            ...output,\r\n            edges: output.edges.filter(e => e !== uuid)\r\n        }\r\n        delete edges[uuid]\r\n    }\r\n    return {\r\n        ...graph,\r\n        outputs,\r\n        inputs,\r\n        edges\r\n    }\r\n}\r\n\r\n\r\ninterface AddEdgeInputs {\r\n    graph: Graph\r\n    input: UUID\r\n    output: UUID\r\n    generateUUID: GenerateUUID\r\n}\r\n\r\ninterface AddEdgeOutputs {\r\n    graph: Graph\r\n    edge: UUID\r\n}\r\n\r\nexport const addEdge = ({ graph, input, output, generateUUID }: AddEdgeInputs): AddEdgeOutputs => {\r\n    const edge: Edge = {\r\n        uuid: generateUUID(),\r\n        input,\r\n        output\r\n    }\r\n    const inputs: Inputs = {\r\n        ...graph.inputs,\r\n        [input]: {\r\n            ...graph.inputs[input],\r\n            edge: edge.uuid\r\n        }\r\n    }\r\n    const currentOutput = graph.outputs[output]\r\n    const outputs: Outputs = {\r\n        ...graph.outputs,\r\n        [output]: {\r\n            ...currentOutput,\r\n            edges: [...currentOutput.edges, edge.uuid]\r\n        }\r\n    }\r\n    return {\r\n        graph: {\r\n            ...graph,\r\n            inputs,\r\n            outputs,\r\n            edges: {\r\n                ...graph.edges,\r\n                [edge.uuid]: edge\r\n            }\r\n        },\r\n        edge: edge.uuid\r\n    }\r\n}\r\n\r\nexport const changeNodePosition = (graph: Graph, node: UUID, transform: (position: Position) => Position): Graph => {\r\n    const currentNode = graph.nodes[node]\r\n    return {\r\n        ...graph,\r\n        nodes: {\r\n            ...graph.nodes,\r\n            [node]: {\r\n                ...currentNode,\r\n                position: transform(currentNode.position)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeBodyValue = (graph: Graph, body: UUID, transform: (value: number) => number): Graph => {\r\n    const currentBody = graph.bodys[body]\r\n    return {\r\n        ...graph,\r\n        bodys: {\r\n            ...graph.bodys,\r\n            [body]: {\r\n                ...currentBody,\r\n                value: transform(currentBody.value)\r\n            }\r\n        }\r\n    }\r\n}","import { UUID } from \"./graph\"\r\n\r\nexport enum QuickSelectKind {\r\n    NONE,\r\n    INPUT,\r\n    OUTPUT,\r\n    NODE,\r\n    BODY,\r\n}\r\n\r\nexport interface QuickSelectNone {\r\n    readonly kind: QuickSelectKind.NONE\r\n}\r\n\r\nexport interface QuickSelectInput {\r\n    readonly kind: QuickSelectKind.INPUT\r\n    readonly hotkeys: Readonly<{ [input: UUID]: string }>\r\n}\r\n\r\nexport interface QuickSelectOutput {\r\n    readonly kind: QuickSelectKind.OUTPUT\r\n    readonly hotkeys: Readonly<{ [output: UUID]: string }>\r\n}\r\n\r\nexport interface QuickSelectNode {\r\n    readonly kind: QuickSelectKind.NODE\r\n    readonly hotkeys: Readonly<{ [node: UUID]: string }>\r\n}\r\n\r\nexport interface QuickSelectBody {\r\n    readonly kind: QuickSelectKind.BODY\r\n    readonly hotkeys: Readonly<{ [body: UUID]: string }>\r\n}\r\n\r\nexport type QuickSelect =\r\n    | QuickSelectNone\r\n    | QuickSelectInput\r\n    | QuickSelectOutput\r\n    | QuickSelectNode\r\n    | QuickSelectBody","import { AppEvent } from \".\"\r\nimport { Model } from \"../model\"\r\nimport { FocusKind } from \"../model/focus\"\r\nimport { GenerateUUID, UUID } from \"../model/graph\"\r\nimport { PointerActionKind } from \"../model/pointer_action\"\r\nimport { QuickSelectKind } from \"../model/quick_select\"\r\nimport { UpdateResult } from \"../ui/run\"\r\nimport { addEdge, removeInputEdge } from \"./graph\"\r\n\r\nexport const clearFocus = (model: Model): Model => ({\r\n    ...model,\r\n    focus: {\r\n        kind: FocusKind.NONE,\r\n        pointerAction: { kind: PointerActionKind.NONE },\r\n        quickSelect: { kind: QuickSelectKind.NONE }\r\n    }\r\n})\r\n\r\n\r\nexport const selectInput = (model: Model, inputUUID: UUID, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> => {\r\n    if (model.focus.kind === FocusKind.OUTPUT) {\r\n        const input = model.graph.inputs[inputUUID]\r\n        const output = model.graph.outputs[model.focus.output]\r\n        if (input.node === output.node) {\r\n            return { model }\r\n        } else {\r\n            const graph0 = input.edge !== undefined ?\r\n                removeInputEdge(model.graph, input.uuid) :\r\n                model.graph\r\n            const { graph: graph1 } = addEdge({\r\n                graph: graph0,\r\n                input: inputUUID,\r\n                output: model.focus.output,\r\n                generateUUID\r\n            })\r\n            return {\r\n                model: clearFocus({ ...model, graph: graph1 }),\r\n                render: true\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    kind: FocusKind.INPUT,\r\n                    input: inputUUID,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    }\r\n}\r\n\r\nexport const selectOutput = (model: Model, outputUUID: UUID, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> => {\r\n    if (model.focus.kind === FocusKind.INPUT) {\r\n        const input = model.graph.inputs[model.focus.input]\r\n        const output = model.graph.outputs[outputUUID]\r\n        if (output.node === input.node) {\r\n            return { model }\r\n        } else {\r\n            const graph0 = input.edge !== undefined ?\r\n                removeInputEdge(model.graph, input.uuid) :\r\n                model.graph\r\n            const { graph: graph1 } = addEdge({\r\n                graph: graph0,\r\n                input: model.focus.input,\r\n                output: outputUUID,\r\n                generateUUID\r\n            })\r\n            return {\r\n                model: clearFocus({ ...model, graph: graph1 }),\r\n                render: true\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    kind: FocusKind.OUTPUT,\r\n                    output: outputUUID,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                },\r\n            },\r\n            render: true\r\n        }\r\n    }\r\n}\r\n","import { AppEvent } from \".\";\r\nimport { Model } from \"../model\";\r\nimport { Focus, FocusFinder, FocusKind } from \"../model/focus\";\r\nimport { GenerateUUID, UUID } from \"../model/graph\";\r\nimport { QuickSelectInput, QuickSelectOutput, QuickSelectKind, QuickSelectNode, QuickSelectBody } from \"../model/quick_select\";\r\nimport { UpdateResult } from \"../ui/run\";\r\nimport { selectInput, selectOutput } from \"./focus\";\r\n\r\nexport const maybeTriggerQuickSelect = (model: Model, focus: Exclude<Focus, FocusFinder>, key: string): UpdateResult<Model, AppEvent> => {\r\n    switch (key) {\r\n        case 'i': {\r\n            const hotkeys: { [input: UUID]: string } = {}\r\n            Object.keys(model.graph.inputs).forEach((input, i) => {\r\n                hotkeys[input] = String.fromCharCode(97 + i)\r\n            })\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        quickSelect: {\r\n                            kind: QuickSelectKind.INPUT,\r\n                            hotkeys\r\n                        }\r\n                    }\r\n                },\r\n                render: true\r\n            }\r\n        }\r\n        case 'o': {\r\n            const hotkeys: { [output: UUID]: string } = {}\r\n            Object.keys(model.graph.outputs).forEach((output, i) => {\r\n                hotkeys[output] = String.fromCharCode(97 + i)\r\n            })\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        quickSelect: {\r\n                            kind: QuickSelectKind.OUTPUT,\r\n                            hotkeys\r\n                        }\r\n                    }\r\n                },\r\n                render: true\r\n            }\r\n        }\r\n        case 'n': {\r\n            const hotkeys: { [node: UUID]: string } = {}\r\n            Object.keys(model.graph.nodes).forEach((node, i) => {\r\n                hotkeys[node] = String.fromCharCode(97 + i)\r\n            })\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        quickSelect: {\r\n                            kind: QuickSelectKind.NODE,\r\n                            hotkeys\r\n                        }\r\n                    }\r\n                },\r\n                render: true\r\n            }\r\n        }\r\n        case 'b': {\r\n            const hotkeys: { [body: UUID]: string } = {}\r\n            Object.keys(model.graph.bodys).forEach((body, i) => {\r\n                hotkeys[body] = String.fromCharCode(97 + i)\r\n            })\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        quickSelect: {\r\n                            kind: QuickSelectKind.BODY,\r\n                            hotkeys\r\n                        }\r\n                    }\r\n                },\r\n                render: true\r\n            }\r\n        }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\nexport const quickSelectInput = (model: Model, quickSelect: QuickSelectInput, key: string, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> => {\r\n    const entry = Object.entries(quickSelect.hotkeys).find(([_, hotkey]) => hotkey === key)\r\n    if (entry !== undefined) {\r\n        const [input, _] = entry\r\n        return selectInput(model, input, generateUUID)\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    ...model.focus,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    }\r\n}\r\n\r\nexport const quickSelectOutput = (model: Model, quickSelect: QuickSelectOutput, key: string, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> => {\r\n    const entry = Object.entries(quickSelect.hotkeys).find(([_, hotkey]) => hotkey === key)\r\n    if (entry !== undefined) {\r\n        const [output, _] = entry\r\n        return selectOutput(model, output, generateUUID)\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    ...model.focus,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    }\r\n}\r\n\r\nexport const quickSelectNode = (model: Model, quickSelect: QuickSelectNode, key: string): UpdateResult<Model, AppEvent> => {\r\n    const entry = Object.entries(quickSelect.hotkeys).find(([_, hotkey]) => hotkey === key)\r\n    if (entry !== undefined) {\r\n        const [node, _] = entry\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    kind: FocusKind.NODE,\r\n                    node,\r\n                    drag: false,\r\n                    move: { left: false, up: false, down: false, right: false, now: 0 },\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    ...model.focus,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    }\r\n}\r\n\r\nexport const quickSelectBody = (model: Model, quickSelect: QuickSelectBody, key: string): UpdateResult<Model, AppEvent> => {\r\n    const entry = Object.entries(quickSelect.hotkeys).find(([_, hotkey]) => hotkey === key)\r\n    if (entry !== undefined) {\r\n        const [body, _] = entry\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    kind: FocusKind.BODY,\r\n                    body,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    ...model.focus,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                }\r\n            },\r\n            render: true\r\n        }\r\n    }\r\n}\r\n","import { AppEvent, EventKind, KeyDown, KeyUp } from \".\";\r\nimport { multiplyMatrices, scale, translate } from \"../linear_algebra/matrix3x3\";\r\nimport { Model, NodePlacementLocation } from \"../model\";\r\nimport { CurrentTime, UpdateResult } from \"../ui/run\";\r\n\r\nexport const maybeStartMoveCamera = (model: Model, { key, ctrl }: KeyDown, currentTime: CurrentTime): UpdateResult<Model, AppEvent> => {\r\n    interface Result {\r\n        now: number\r\n        dispatch?: AppEvent[]\r\n    }\r\n    const panDispatch = (): Result => {\r\n        const { left, down, up, right } = model.panCamera\r\n        const notMoving = !(left || down || up || right)\r\n        return notMoving ?\r\n            {\r\n                now: currentTime(),\r\n                dispatch: [{ kind: EventKind.PAN_CAMERA }]\r\n            } :\r\n            { now: model.panCamera.now }\r\n    }\r\n    const zoomDispatch = (): Result => {\r\n        const notMoving = !(model.zoomCamera.in || model.zoomCamera.out)\r\n        return notMoving ?\r\n            {\r\n                now: currentTime(),\r\n                dispatch: [{ kind: EventKind.ZOOM_CAMERA }]\r\n            } :\r\n            { now: model.zoomCamera.now }\r\n    }\r\n    const nodePlacementLocation: NodePlacementLocation = {\r\n        x: model.window.width / 2,\r\n        y: model.window.height / 2,\r\n        show: true\r\n    }\r\n    switch (key) {\r\n        case 'h':\r\n        case 'ArrowLeft': {\r\n            const { now, dispatch } = panDispatch()\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    panCamera: { ...model.panCamera, left: true, now },\r\n                    nodePlacementLocation,\r\n                },\r\n                dispatch\r\n            }\r\n        }\r\n        case 'j':\r\n        case 'ArrowDown': {\r\n            if (ctrl) {\r\n                const { now, dispatch } = zoomDispatch()\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, out: true, now },\r\n                        panCamera: { ...model.panCamera, up: false, down: false },\r\n                        nodePlacementLocation,\r\n                    },\r\n                    dispatch\r\n                }\r\n            } else {\r\n                const { now, dispatch } = panDispatch()\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, in: false, out: false },\r\n                        panCamera: { ...model.panCamera, down: true, now },\r\n                        nodePlacementLocation,\r\n                    },\r\n                    dispatch\r\n                }\r\n            }\r\n        }\r\n        case 'k':\r\n        case 'ArrowUp': {\r\n            if (ctrl) {\r\n                const { now, dispatch } = zoomDispatch()\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, in: true, now },\r\n                        panCamera: { ...model.panCamera, up: false, down: false },\r\n                        nodePlacementLocation,\r\n                    },\r\n                    dispatch\r\n                }\r\n            } else {\r\n                const { now, dispatch } = panDispatch()\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, in: false, out: false },\r\n                        panCamera: { ...model.panCamera, up: true, now },\r\n                        nodePlacementLocation,\r\n                    },\r\n                    dispatch\r\n                }\r\n            }\r\n        }\r\n        case 'l':\r\n        case 'ArrowRight': {\r\n            const { now, dispatch } = panDispatch()\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    panCamera: { ...model.panCamera, right: true, now },\r\n                    nodePlacementLocation,\r\n                },\r\n                dispatch\r\n            }\r\n        }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\n\r\nexport const maybeStopMoveCamera = (model: Model, { key, ctrl }: KeyUp): UpdateResult<Model, AppEvent> => {\r\n    switch (key) {\r\n        case 'h':\r\n        case 'ArrowLeft':\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    panCamera: { ...model.panCamera, left: false, }\r\n                },\r\n            }\r\n        case 'j':\r\n        case 'ArrowDown':\r\n            if (ctrl) {\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, out: false },\r\n                        panCamera: { ...model.panCamera, up: false, down: false }\r\n                    }\r\n                }\r\n            } else {\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, in: false, out: false },\r\n                        panCamera: { ...model.panCamera, down: false }\r\n                    },\r\n                }\r\n            }\r\n        case 'k':\r\n        case 'ArrowUp':\r\n            if (ctrl) {\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, in: false },\r\n                        panCamera: { ...model.panCamera, up: false, down: false },\r\n                    }\r\n                }\r\n            } else {\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        zoomCamera: { ...model.zoomCamera, in: false, out: false },\r\n                        panCamera: { ...model.panCamera, up: false }\r\n                    },\r\n                }\r\n            }\r\n        case 'l':\r\n        case 'ArrowRight':\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    panCamera: { ...model.panCamera, right: false }\r\n                },\r\n            }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\nexport const panCamera = (model: Model, currentTime: CurrentTime): UpdateResult<Model, AppEvent> => {\r\n    const { left, down, up, right } = model.panCamera\r\n    const moving = left || down || up || right\r\n    if (moving) {\r\n        const x = (left ? -1 : 0) + (right ? 1 : 0)\r\n        const y = (up ? -1 : 0) + (down ? 1 : 0)\r\n        const length = Math.max(Math.sqrt(Math.pow(Math.abs(x), 2) + Math.pow(Math.abs(y), 2)), 1)\r\n        const now = currentTime()\r\n        const deltaTime = now - model.panCamera.now\r\n        const speed = 0.5 * deltaTime\r\n        return {\r\n            model: {\r\n                ...model,\r\n                panCamera: { ...model.panCamera, now },\r\n                camera: multiplyMatrices(model.camera, translate(x / length * speed, y / length * speed))\r\n            },\r\n            render: true,\r\n            schedule: [{ after: { milliseconds: 10 }, event: { kind: EventKind.PAN_CAMERA } }]\r\n        }\r\n    } else {\r\n        return { model }\r\n    }\r\n}\r\n\r\nexport const zoomCamera = (model: Model, currentTime: CurrentTime): UpdateResult<Model, AppEvent> => {\r\n    const moving = model.zoomCamera.in || model.zoomCamera.out\r\n    if (moving) {\r\n        const now = currentTime()\r\n        const deltaTime = now - model.zoomCamera.now\r\n        const direction = (model.zoomCamera.in ? -1 : 0) + (model.zoomCamera.out ? 1 : 0)\r\n        const speed = deltaTime * direction\r\n        const { x, y } = model.nodePlacementLocation\r\n        const move = translate(x, y)\r\n        const zoom = Math.pow(2, speed * 0.01)\r\n        const moveBack = translate(-x, -y)\r\n        const camera = multiplyMatrices(model.camera, move, scale(zoom, zoom), moveBack)\r\n        return {\r\n            model: {\r\n                ...model,\r\n                zoomCamera: { ...model.zoomCamera, now },\r\n                camera\r\n            },\r\n            render: true,\r\n            schedule: [{ after: { milliseconds: 10 }, event: { kind: EventKind.ZOOM_CAMERA } }]\r\n        }\r\n    } else {\r\n        return { model }\r\n    }\r\n}","import { AppEvent, EventKind } from \".\";\r\nimport { inverse, multiplyMatrixVector } from \"../linear_algebra/matrix3x3\";\r\nimport { length } from \"../linear_algebra/vector3\";\r\nimport { Model, NodePlacementLocation } from \"../model\";\r\nimport { FocusKind, FocusNode } from \"../model/focus\";\r\nimport { CurrentTime, UpdateResult } from \"../ui/run\";\r\nimport { changeNodePosition } from \"./graph\";\r\n\r\nexport const maybeStartMoveNode = (model: Model, focus: FocusNode, key: string, currentTime: CurrentTime): UpdateResult<Model, AppEvent> => {\r\n    interface Result {\r\n        now: number\r\n        dispatch?: AppEvent[]\r\n    }\r\n    const { left, down, up, right } = focus.move\r\n    const notMoving = !(left || down || up || right)\r\n    const { now, dispatch }: Result = notMoving ?\r\n        {\r\n            now: currentTime(),\r\n            dispatch: [{ kind: EventKind.MOVE_NODE }]\r\n        } :\r\n        { now: focus.move.now }\r\n    const nodePlacementLocation: NodePlacementLocation = {\r\n        ...model.nodePlacementLocation,\r\n        show: false\r\n    }\r\n    switch (key) {\r\n        case 'h':\r\n        case 'ArrowLeft': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, left: true, now }\r\n                    },\r\n                    nodePlacementLocation,\r\n                },\r\n                dispatch\r\n            }\r\n        }\r\n        case 'j':\r\n        case 'ArrowDown': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, down: true, now }\r\n                    },\r\n                    nodePlacementLocation,\r\n                },\r\n                dispatch\r\n            }\r\n        }\r\n        case 'k':\r\n        case 'ArrowUp': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, up: true, now }\r\n                    },\r\n                    nodePlacementLocation,\r\n                },\r\n                dispatch\r\n            }\r\n        }\r\n        case 'l':\r\n        case 'ArrowRight': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, right: true, now }\r\n                    },\r\n                    nodePlacementLocation,\r\n                },\r\n                dispatch\r\n            }\r\n        }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\nexport const maybeStopMoveNode = (model: Model, focus: FocusNode, key: string): UpdateResult<Model, AppEvent> => {\r\n    switch (key) {\r\n        case 'h':\r\n        case 'ArrowLeft': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, left: false }\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        case 'j':\r\n        case 'ArrowDown': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, down: false }\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        case 'k':\r\n        case 'ArrowUp': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, up: false }\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        case 'l':\r\n        case 'ArrowRight': {\r\n            return {\r\n                model: {\r\n                    ...model,\r\n                    focus: {\r\n                        ...focus,\r\n                        move: { ...focus.move, right: false }\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\nexport const moveNode = (model: Model, currentTime: CurrentTime): UpdateResult<Model, AppEvent> => {\r\n    switch (model.focus.kind) {\r\n        case FocusKind.NODE:\r\n            const { left, down, up, right } = model.focus.move\r\n            const moving = left || down || up || right\r\n            if (moving) {\r\n                const x = (left ? -1 : 0) + (right ? 1 : 0)\r\n                const y = (up ? -1 : 0) + (down ? 1 : 0)\r\n                const normalized_distance = Math.max(Math.sqrt(Math.pow(Math.abs(x), 2) + Math.pow(Math.abs(y), 2)), 1)\r\n                const now = currentTime()\r\n                const deltaTime = now - model.focus.move.now\r\n                const scale = length(multiplyMatrixVector(inverse(model.camera), [0, 1, 0]))\r\n                const speed = 0.5 * deltaTime / scale\r\n                const graph = changeNodePosition(model.graph, model.focus.node, p => ({\r\n                    x: p.x + x / normalized_distance * speed,\r\n                    y: p.y + y / normalized_distance * speed,\r\n                }))\r\n                return {\r\n                    model: {\r\n                        ...model,\r\n                        focus: {\r\n                            ...model.focus,\r\n                            move: { ...model.focus.move, now }\r\n                        },\r\n                        graph\r\n                    },\r\n                    render: true,\r\n                    schedule: [{ after: { milliseconds: 10 }, event: { kind: EventKind.MOVE_NODE } }]\r\n                }\r\n            } else {\r\n                return { model }\r\n            }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n","import { fuzzyFind } from \"../fuzzy_find\"\r\nimport { multiplyMatrices, multiplyMatrixVector, scale, translate } from \"../linear_algebra/matrix3x3\"\r\nimport { length } from \"../linear_algebra/vector3\"\r\nimport { Effects, UpdateResult } from \"../ui/run\"\r\nimport { Model, NodePlacementLocation } from \"../model\"\r\nimport { Focus, FocusFinder, FocusKind } from '../model/focus'\r\nimport { PointerAction, PointerActionKind } from '../model/pointer_action'\r\nimport { GenerateUUID, Operation, Operations, Position, UUID } from '../model/graph'\r\nimport { Pointer } from \"../ui\"\r\nimport { addNode, changeBodyValue, changeNodePosition, removeInputEdge, removeNode, removeOutputEdges } from \"./graph\"\r\nimport { maybeTriggerQuickSelect, quickSelectInput, quickSelectOutput, quickSelectNode, quickSelectBody } from \"./quick_select\"\r\nimport { QuickSelectKind } from \"../model/quick_select\"\r\nimport { clearFocus, selectInput, selectOutput } from \"./focus\"\r\nimport { maybeStartMoveCamera, maybeStopMoveCamera, panCamera, zoomCamera } from \"./move_camera\"\r\nimport { maybeStartMoveNode, maybeStopMoveNode, moveNode } from \"./move_node\"\r\n\r\nexport enum EventKind {\r\n    POINTER_MOVE,\r\n    POINTER_DOWN,\r\n    POINTER_UP,\r\n    CLICKED_NODE,\r\n    WHEEL,\r\n    CLICKED_INPUT,\r\n    CLICKED_OUTPUT,\r\n    OPEN_FINDER_TIMEOUT,\r\n    KEYDOWN,\r\n    KEYUP,\r\n    VIRTUAL_KEYDOWN,\r\n    CLICKED_FINDER_OPTION,\r\n    CLICKED_BODY,\r\n    CLICKED_BACKGROUND,\r\n    DELETE_NODE,\r\n    DELETE_INPUT_EDGE,\r\n    DELETE_OUTPUT_EDGES,\r\n    PAN_CAMERA,\r\n    ZOOM_CAMERA,\r\n    MOVE_NODE,\r\n}\r\n\r\nexport interface PointerMove {\r\n    readonly kind: EventKind.POINTER_MOVE\r\n    readonly pointer: Pointer\r\n}\r\n\r\nexport interface PointerDown {\r\n    readonly kind: EventKind.POINTER_DOWN\r\n    readonly pointer: Pointer\r\n}\r\n\r\nexport interface PointerUp {\r\n    readonly kind: EventKind.POINTER_UP\r\n    readonly pointer: Pointer\r\n}\r\n\r\nexport interface ClickedNode {\r\n    readonly kind: EventKind.CLICKED_NODE\r\n    readonly node: UUID\r\n}\r\n\r\nexport interface Wheel {\r\n    readonly kind: EventKind.WHEEL\r\n    readonly position: Position\r\n    readonly deltaY: number\r\n}\r\n\r\nexport interface ClickedInput {\r\n    readonly kind: EventKind.CLICKED_INPUT\r\n    readonly input: UUID\r\n}\r\n\r\nexport interface ClickedOutput {\r\n    readonly kind: EventKind.CLICKED_OUTPUT\r\n    readonly output: UUID\r\n}\r\n\r\nexport interface OpenFinderTimeout {\r\n    readonly kind: EventKind.OPEN_FINDER_TIMEOUT\r\n}\r\n\r\nexport interface KeyUp {\r\n    readonly kind: EventKind.KEYUP\r\n    readonly key: string\r\n    readonly ctrl: boolean\r\n}\r\n\r\n\r\nexport interface KeyDown {\r\n    readonly kind: EventKind.KEYDOWN\r\n    readonly key: string\r\n    readonly ctrl: boolean\r\n}\r\n\r\nexport interface VirtualKeyDown {\r\n    readonly kind: EventKind.VIRTUAL_KEYDOWN\r\n    readonly key: string\r\n}\r\n\r\nexport interface ClickedFinderOption {\r\n    readonly kind: EventKind.CLICKED_FINDER_OPTION\r\n    readonly option: string\r\n}\r\n\r\nexport interface ClickedNumber {\r\n    readonly kind: EventKind.CLICKED_BODY,\r\n    readonly body: UUID\r\n}\r\n\r\nexport interface ClickedBackground {\r\n    readonly kind: EventKind.CLICKED_BACKGROUND,\r\n}\r\n\r\nexport interface DeleteNode {\r\n    readonly kind: EventKind.DELETE_NODE,\r\n    readonly node: UUID\r\n}\r\n\r\nexport interface DeleteInputEdge {\r\n    readonly kind: EventKind.DELETE_INPUT_EDGE,\r\n    readonly input: UUID\r\n}\r\n\r\nexport interface DeleteOutputEdges {\r\n    readonly kind: EventKind.DELETE_OUTPUT_EDGES,\r\n    readonly output: UUID\r\n}\r\n\r\nexport interface PanCamera {\r\n    readonly kind: EventKind.PAN_CAMERA,\r\n}\r\n\r\nexport interface ZoomCamera {\r\n    readonly kind: EventKind.ZOOM_CAMERA,\r\n}\r\n\r\nexport interface MoveNode {\r\n    readonly kind: EventKind.MOVE_NODE,\r\n}\r\n\r\n\r\nexport type AppEvent =\r\n    | PointerMove\r\n    | PointerDown\r\n    | PointerUp\r\n    | ClickedNode\r\n    | Wheel\r\n    | ClickedInput\r\n    | ClickedOutput\r\n    | OpenFinderTimeout\r\n    | KeyDown\r\n    | KeyUp\r\n    | VirtualKeyDown\r\n    | ClickedFinderOption\r\n    | ClickedNumber\r\n    | ClickedBackground\r\n    | DeleteNode\r\n    | DeleteInputEdge\r\n    | DeleteOutputEdges\r\n    | PanCamera\r\n    | ZoomCamera\r\n    | MoveNode\r\n\r\nconst pointerDown = (model: Model, event: PointerDown): UpdateResult<Model, AppEvent> => {\r\n    const pointers = [...model.pointers, event.pointer]\r\n    if (model.focus.kind !== FocusKind.NONE) {\r\n        return { model: { ...model, pointers } }\r\n    } else if (pointers.length > 1) {\r\n        const pointerAction: PointerAction = pointers.length === 2 ?\r\n            {\r\n                kind: PointerActionKind.ZOOM,\r\n                pointerCenter: { x: 0, y: 0 },\r\n                pointerDistance: 0\r\n            } :\r\n            { kind: PointerActionKind.NONE }\r\n        return {\r\n            model: {\r\n                ...model,\r\n                openFinderFirstClick: false,\r\n                focus: {\r\n                    kind: FocusKind.NONE,\r\n                    pointerAction,\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                },\r\n                pointers\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            model: {\r\n                ...model,\r\n                focus: {\r\n                    kind: FocusKind.NONE,\r\n                    pointerAction: { kind: PointerActionKind.PAN },\r\n                    quickSelect: { kind: QuickSelectKind.NONE }\r\n                },\r\n                pointers\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst pointerUp = (model: Model, event: PointerUp): UpdateResult<Model, AppEvent> => {\r\n    const pointers = model.pointers.filter(p => p.id !== event.pointer.id)\r\n    switch (model.focus.kind) {\r\n        case FocusKind.NONE:\r\n            switch (pointers.length) {\r\n                case 1: return {\r\n                    model: {\r\n                        ...model,\r\n                        pointers,\r\n                        focus: {\r\n                            kind: FocusKind.NONE,\r\n                            pointerAction: { kind: PointerActionKind.PAN },\r\n                            quickSelect: { kind: QuickSelectKind.NONE }\r\n                        },\r\n                    }\r\n                }\r\n                case 0: return {\r\n                    model: {\r\n                        ...model,\r\n                        pointers,\r\n                        focus: {\r\n                            kind: FocusKind.NONE,\r\n                            pointerAction: { kind: PointerActionKind.NONE },\r\n                            quickSelect: { kind: QuickSelectKind.NONE }\r\n                        },\r\n                    }\r\n                }\r\n                default: return { model: { ...model, pointers } }\r\n            }\r\n        case FocusKind.NODE:\r\n            if (pointers.length === 0) {\r\n                const focus: Focus = { ...model.focus, drag: false }\r\n                return { model: { ...model, pointers, focus } }\r\n            } else {\r\n                return { model: { ...model, pointers } }\r\n            }\r\n        default:\r\n            return { model: { ...model, pointers } }\r\n    }\r\n}\r\n\r\nexport const changeNth = <T>(xs: Readonly<T[]>, i: number, x: T): T[] =>\r\n    [...xs.slice(0, i), x, ...xs.slice(i + 1)]\r\n\r\nconst pointerMove = (model: Model, event: PointerMove): UpdateResult<Model, AppEvent> => {\r\n    const index = model.pointers.findIndex(p => p.id === event.pointer.id)\r\n    const pointer = model.pointers[index]\r\n    const pointers = index === -1 ? model.pointers : changeNth(model.pointers, index, event.pointer)\r\n    const nodePlacementLocation: NodePlacementLocation = {\r\n        x: event.pointer.position.x,\r\n        y: event.pointer.position.y,\r\n        show: false\r\n    }\r\n    switch (model.focus.kind) {\r\n        case FocusKind.NONE:\r\n            const previousPointerAction = model.focus.pointerAction\r\n            switch (previousPointerAction.kind) {\r\n                case PointerActionKind.NONE:\r\n                    const render = model.nodePlacementLocation.show ? true : undefined\r\n                    return { model: { ...model, nodePlacementLocation, pointers }, render }\r\n                case PointerActionKind.PAN:\r\n                    const dx = event.pointer.position.x - pointer.position.x\r\n                    const dy = event.pointer.position.y - pointer.position.y\r\n                    const camera = multiplyMatrices(model.camera, translate(-dx, -dy))\r\n                    return {\r\n                        model: { ...model, pointers, camera },\r\n                        render: true\r\n                    }\r\n                case PointerActionKind.ZOOM:\r\n                    const [p0, p1] = [pointers[0], pointers[1]]\r\n                    const { x: x1, y: y1 } = p0.position\r\n                    const { x: x2, y: y2 } = p1.position\r\n                    const x = (p0.position.x + p1.position.x) / 2\r\n                    const y = (p0.position.y + p1.position.y) / 2\r\n                    const pointerAction: PointerAction = {\r\n                        kind: PointerActionKind.ZOOM,\r\n                        pointerDistance: Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\r\n                        pointerCenter: { x, y },\r\n                    }\r\n                    const focus: Focus = {\r\n                        kind: FocusKind.NONE,\r\n                        pointerAction,\r\n                        quickSelect: { kind: QuickSelectKind.NONE }\r\n                    }\r\n                    if (previousPointerAction.pointerDistance > 0) {\r\n                        const move = translate(x, y)\r\n                        const zoom = Math.pow(2, (previousPointerAction.pointerDistance - pointerAction.pointerDistance) * 0.01)\r\n                        const moveBack = translate(-x, -y)\r\n                        const dx = x - previousPointerAction.pointerCenter.x\r\n                        const dy = y - previousPointerAction.pointerCenter.y\r\n                        const camera = multiplyMatrices(model.camera, move, scale(zoom, zoom), moveBack, translate(-dx, -dy))\r\n                        return {\r\n                            model: { ...model, focus, pointers, camera },\r\n                            render: true\r\n                        }\r\n                    } else {\r\n                        return { model: { ...model, focus, pointers } }\r\n                    }\r\n            }\r\n        case FocusKind.NODE:\r\n            if (model.focus.drag) {\r\n                const dx = event.pointer.position.x - pointer.position.x\r\n                const dy = event.pointer.position.y - pointer.position.y\r\n                const scaling = length(multiplyMatrixVector(model.camera, [0, 1, 0]))\r\n                const graph = changeNodePosition(model.graph, model.focus.node, p => ({\r\n                    x: p.x + dx * scaling,\r\n                    y: p.y + dy * scaling,\r\n                }))\r\n                return {\r\n                    model: { ...model, pointers, graph },\r\n                    render: true\r\n                }\r\n            } else {\r\n                return { model: { ...model, pointers, nodePlacementLocation } }\r\n            }\r\n        case FocusKind.BODY:\r\n        case FocusKind.INPUT:\r\n        case FocusKind.OUTPUT:\r\n            return { model: { ...model, pointers, nodePlacementLocation } }\r\n        case FocusKind.FINDER:\r\n            return { model: { ...model, pointers } }\r\n    }\r\n}\r\n\r\nconst clickedNode = (model: Model, event: ClickedNode): UpdateResult<Model, AppEvent> => {\r\n    const nodeOrder = model.nodeOrder.filter(uuid => uuid !== event.node)\r\n    nodeOrder.push(event.node)\r\n    return {\r\n        model: {\r\n            ...model,\r\n            focus: {\r\n                kind: FocusKind.NODE,\r\n                node: event.node,\r\n                drag: true,\r\n                quickSelect: { kind: QuickSelectKind.NONE },\r\n                move: { left: false, up: false, down: false, right: false, now: 0 }\r\n            },\r\n            nodeOrder\r\n        },\r\n        render: true\r\n    }\r\n}\r\n\r\nconst wheel = (model: Model, event: Wheel): UpdateResult<Model, AppEvent> => {\r\n    const move = translate(event.position.x, event.position.y)\r\n    const zoom = Math.pow(2, event.deltaY * 0.01)\r\n    const moveBack = translate(-event.position.x, -event.position.y)\r\n    const camera = multiplyMatrices(model.camera, move, scale(zoom, zoom), moveBack)\r\n    return {\r\n        model: { ...model, camera },\r\n        render: true\r\n    }\r\n}\r\n\r\nconst clickedInput = (model: Model, event: ClickedInput, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> =>\r\n    selectInput(model, event.input, generateUUID)\r\n\r\nconst clickedOutput = (model: Model, event: ClickedOutput, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> =>\r\n    selectOutput(model, event.output, generateUUID)\r\n\r\nconst openFinderTimeout = (model: Model, _: OpenFinderTimeout): UpdateResult<Model, AppEvent> => ({\r\n    model: {\r\n        ...model,\r\n        openFinderFirstClick: false\r\n    }\r\n})\r\n\r\nconst finderOptions = (operations: Operations, search: string): string[] =>\r\n    Object.keys(operations)\r\n        .filter(item => fuzzyFind({ haystack: item, needle: search }))\r\n\r\nexport const openFinder = (model: Model): Model => ({\r\n    ...model,\r\n    focus: {\r\n        kind: FocusKind.FINDER,\r\n        search: '',\r\n        options: Object.keys(model.operations),\r\n        quickSelect: { kind: QuickSelectKind.NONE }\r\n    },\r\n    openFinderFirstClick: false,\r\n})\r\n\r\n\r\nconst insertOperationFromFinder = (model: Model, name: string, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> => {\r\n    const operation = model.operations[name]\r\n    const [x, y, _] = multiplyMatrixVector(\r\n        model.camera,\r\n        [model.nodePlacementLocation.x, model.nodePlacementLocation.y, 1]\r\n    )\r\n    const { model: nextModel } = addNodeToGraph({ model, operation, position: { x, y }, generateUUID })\r\n    return {\r\n        model: clearFocus(nextModel),\r\n        render: true\r\n    }\r\n}\r\n\r\nconst updateFinderSearch = (model: Model, focus: FocusFinder, transform: (search: string) => string): UpdateResult<Model, AppEvent> => {\r\n    const search = transform(focus.search)\r\n    return {\r\n        model: {\r\n            ...model,\r\n            focus: {\r\n                kind: FocusKind.FINDER,\r\n                options: finderOptions(model.operations, search),\r\n                search,\r\n                quickSelect: { kind: QuickSelectKind.NONE }\r\n            }\r\n        },\r\n        render: true\r\n    }\r\n}\r\n\r\nconst updateBodyValue = (model: Model, body: UUID, transform: (value: number) => number): UpdateResult<Model, AppEvent> => {\r\n    return {\r\n        model: {\r\n            ...model,\r\n            graph: changeBodyValue(model.graph, body, transform)\r\n        },\r\n        render: true\r\n    }\r\n}\r\n\r\ninterface AddNodeInputs {\r\n    model: Model\r\n    operation: Operation\r\n    position: Position\r\n    generateUUID: GenerateUUID\r\n}\r\n\r\ninterface AddNodeOutputs {\r\n    model: Model\r\n    node: UUID\r\n}\r\n\r\n\r\nexport const addNodeToGraph = ({ model, operation, position, generateUUID }: AddNodeInputs): AddNodeOutputs => {\r\n    const { graph, node } = addNode({ graph: model.graph, operation, position, generateUUID })\r\n    return {\r\n        model: {\r\n            ...model,\r\n            graph,\r\n            nodeOrder: [...model.nodeOrder, node]\r\n        },\r\n        node\r\n    }\r\n}\r\n\r\nexport const removeNodeFromGraph = (model: Model, node: UUID): Model => clearFocus({\r\n    ...model,\r\n    graph: removeNode(model.graph, node),\r\n    nodeOrder: model.nodeOrder.filter(n => n !== node),\r\n})\r\n\r\nconst keyDown = (model: Model, event: KeyDown, { generateUUID, currentTime }: Effects): UpdateResult<Model, AppEvent> => {\r\n    const { key } = event\r\n    switch (model.focus.quickSelect.kind) {\r\n        case QuickSelectKind.INPUT:\r\n            return quickSelectInput(model, model.focus.quickSelect, key, generateUUID)\r\n        case QuickSelectKind.OUTPUT:\r\n            return quickSelectOutput(model, model.focus.quickSelect, key, generateUUID)\r\n        case QuickSelectKind.NODE:\r\n            return quickSelectNode(model, model.focus.quickSelect, key)\r\n        case QuickSelectKind.BODY:\r\n            return quickSelectBody(model, model.focus.quickSelect, key)\r\n        case QuickSelectKind.NONE:\r\n            switch (model.focus.kind) {\r\n                case FocusKind.FINDER:\r\n                    switch (key) {\r\n                        case 'Backspace':\r\n                            return updateFinderSearch(model, model.focus, search => search.slice(0, -1))\r\n                        case 'Shift':\r\n                        case 'Alt':\r\n                        case 'Control':\r\n                        case 'Meta':\r\n                        case 'Tab':\r\n                            return { model }\r\n                        case 'Enter':\r\n                            if (model.focus.options.length > 0) {\r\n                                const name = model.focus.options[0]\r\n                                return insertOperationFromFinder(model, name, generateUUID)\r\n                            } else {\r\n                                return { model: clearFocus(model), render: true }\r\n                            }\r\n                        case 'Escape':\r\n                            return { model: clearFocus(model), render: true }\r\n                        default:\r\n                            return updateFinderSearch(model, model.focus, search => search + key)\r\n                    }\r\n                case FocusKind.BODY:\r\n                    switch (key) {\r\n                        case 'Backspace':\r\n                            return updateBodyValue(model, model.focus.body, value => {\r\n                                let newValue = value.toString().slice(0, -1)\r\n                                return newValue === '' ? 0 : parseFloat(newValue)\r\n                            })\r\n                        case '1':\r\n                        case '2':\r\n                        case '3':\r\n                        case '4':\r\n                        case '5':\r\n                        case '6':\r\n                        case '7':\r\n                        case '8':\r\n                        case '9':\r\n                        case '0':\r\n                            return updateBodyValue(model, model.focus.body, value => parseFloat(value.toString() + key))\r\n                        case 'Enter':\r\n                        case 'Escape':\r\n                            return {\r\n                                model: clearFocus(model),\r\n                                render: true\r\n                            }\r\n                        default:\r\n                            return maybeTriggerQuickSelect(model, model.focus, key)\r\n                    }\r\n                case FocusKind.NODE:\r\n                    switch (key) {\r\n                        case 'f':\r\n                            return { model: openFinder(model), render: true }\r\n                        case 'd':\r\n                        case 'Backspace':\r\n                        case 'Delete':\r\n                            return {\r\n                                model: removeNodeFromGraph(model, model.focus.node),\r\n                                render: true\r\n                            }\r\n                        case 'Escape':\r\n                            return { model: clearFocus(model), render: true }\r\n                        default:\r\n                            const result = maybeTriggerQuickSelect(model, model.focus, key)\r\n                            if (result.render) {\r\n                                return result\r\n                            } else {\r\n                                return maybeStartMoveNode(result.model, model.focus, key, currentTime)\r\n                            }\r\n                    }\r\n                case FocusKind.INPUT:\r\n                    switch (key) {\r\n                        case 'f':\r\n                            return { model: openFinder(model), render: true }\r\n                        case 'd':\r\n                        case 'Backspace':\r\n                        case 'Delete':\r\n                            return {\r\n                                model: clearFocus({\r\n                                    ...model,\r\n                                    graph: removeInputEdge(model.graph, model.focus.input),\r\n                                }),\r\n                                render: true\r\n                            }\r\n                        case 'Escape':\r\n                            return { model: clearFocus(model), render: true }\r\n                        default:\r\n                            return maybeTriggerQuickSelect(model, model.focus, key)\r\n                    }\r\n                case FocusKind.OUTPUT:\r\n                    switch (key) {\r\n                        case 'f':\r\n                            return { model: openFinder(model), render: true }\r\n                        case 'd':\r\n                        case 'Backspace':\r\n                        case 'Delete':\r\n                            return {\r\n                                model: clearFocus({\r\n                                    ...model,\r\n                                    graph: removeOutputEdges(model.graph, model.focus.output),\r\n                                }),\r\n                                render: true\r\n                            }\r\n                        case 'Escape':\r\n                            return { model: clearFocus(model), render: true }\r\n                        default:\r\n                            return maybeTriggerQuickSelect(model, model.focus, key)\r\n                    }\r\n                case FocusKind.NONE:\r\n                    if (key == 'f') {\r\n                        return { model: openFinder(model), render: true }\r\n                    } else {\r\n                        const result = maybeTriggerQuickSelect(model, model.focus, key)\r\n                        if (result.render) {\r\n                            return result\r\n                        } else {\r\n                            return maybeStartMoveCamera(result.model, event, currentTime)\r\n                        }\r\n                    }\r\n            }\r\n    }\r\n}\r\n\r\nconst keyUp = (model: Model, event: KeyUp): UpdateResult<Model, AppEvent> => {\r\n    switch (model.focus.kind) {\r\n        case FocusKind.NONE:\r\n            return maybeStopMoveCamera(model, event)\r\n        case FocusKind.NODE:\r\n            return maybeStopMoveNode(model, model.focus, event.key)\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\nconst virtualKeyDown = (model: Model, { key }: VirtualKeyDown, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> => {\r\n    switch (model.focus.kind) {\r\n        case FocusKind.FINDER:\r\n            switch (key) {\r\n                case 'del':\r\n                    return updateFinderSearch(model, model.focus, search => search.slice(0, -1))\r\n                case 'sft':\r\n                    return { model }\r\n                case 'space':\r\n                    return updateFinderSearch(model, model.focus, search => search + ' ')\r\n                case 'ret':\r\n                    if (model.focus.options.length > 0) {\r\n                        const name = model.focus.options[0]\r\n                        return insertOperationFromFinder(model, name, generateUUID)\r\n                    } else {\r\n                        return { model: clearFocus(model), render: true }\r\n                    }\r\n                default:\r\n                    return updateFinderSearch(model, model.focus, search => search + key)\r\n            }\r\n        case FocusKind.BODY:\r\n            switch (key) {\r\n                case 'del':\r\n                    return updateBodyValue(model, model.focus.body, value => {\r\n                        let newValue = value.toString().slice(0, -1)\r\n                        return newValue === '' ? 0 : parseFloat(newValue)\r\n                    })\r\n                case '1':\r\n                case '2':\r\n                case '3':\r\n                case '4':\r\n                case '5':\r\n                case '6':\r\n                case '7':\r\n                case '8':\r\n                case '9':\r\n                case '0':\r\n                case '.':\r\n                    return updateBodyValue(model, model.focus.body, value => parseFloat(value.toString() + key))\r\n                case 'ret':\r\n                    return {\r\n                        model: clearFocus(model),\r\n                        render: true\r\n                    }\r\n                default:\r\n                    return { model }\r\n            }\r\n        default:\r\n            return { model }\r\n    }\r\n}\r\n\r\nconst clickedFinderOption = (model: Model, { option }: ClickedFinderOption, generateUUID: GenerateUUID): UpdateResult<Model, AppEvent> =>\r\n    insertOperationFromFinder(model, option, generateUUID)\r\n\r\nexport const openNumericKeyboard = (model: Model, body: UUID): Model => ({\r\n    ...model,\r\n    focus: {\r\n        kind: FocusKind.BODY,\r\n        body,\r\n        quickSelect: { kind: QuickSelectKind.NONE }\r\n    }\r\n})\r\n\r\nconst clickedNumber = (model: Model, { body }: ClickedNumber): UpdateResult<Model, AppEvent> => ({\r\n    model: openNumericKeyboard(clearFocus(model), body),\r\n    render: true\r\n})\r\n\r\nconst clickedBackground = (model: Model): UpdateResult<Model, AppEvent> => {\r\n    if (model.focus.kind === FocusKind.FINDER) {\r\n        return {\r\n            model: clearFocus(model),\r\n            render: true\r\n        }\r\n    } else if (model.openFinderFirstClick) {\r\n        const { x, y } = model.pointers[0].position\r\n        return {\r\n            model: openFinder({\r\n                ...model,\r\n                nodePlacementLocation: { x, y, show: false },\r\n            }),\r\n            render: true\r\n        }\r\n    } else {\r\n        const focus: Focus = model.focus.kind === FocusKind.NONE ? model.focus : {\r\n            kind: FocusKind.NONE,\r\n            pointerAction: { kind: PointerActionKind.PAN },\r\n            quickSelect: { kind: QuickSelectKind.NONE }\r\n        }\r\n        return {\r\n            model: {\r\n                ...model,\r\n                openFinderFirstClick: model.pointers.length == 1,\r\n                focus\r\n            },\r\n            schedule: [\r\n                { after: { milliseconds: 300 }, event: { kind: EventKind.OPEN_FINDER_TIMEOUT } }\r\n            ],\r\n            render: true\r\n        }\r\n    }\r\n}\r\n\r\nconst deleteNode = (model: Model, { node }: DeleteNode): UpdateResult<Model, AppEvent> => ({\r\n    model: removeNodeFromGraph(model, node),\r\n    render: true\r\n})\r\n\r\nconst deleteInputEdge = (model: Model, { input }: DeleteInputEdge): UpdateResult<Model, AppEvent> => ({\r\n    model: clearFocus({\r\n        ...model,\r\n        graph: removeInputEdge(model.graph, input),\r\n    }),\r\n    render: true\r\n})\r\n\r\nconst deleteOutputEdges = (model: Model, { output }: DeleteOutputEdges): UpdateResult<Model, AppEvent> => ({\r\n    model: clearFocus({\r\n        ...model,\r\n        graph: removeOutputEdges(model.graph, output),\r\n    }),\r\n    render: true\r\n})\r\n\r\nexport const update = (effects: Effects, model: Model, event: AppEvent): UpdateResult<Model, AppEvent> => {\r\n    switch (event.kind) {\r\n        case EventKind.POINTER_DOWN: return pointerDown(model, event)\r\n        case EventKind.POINTER_UP: return pointerUp(model, event)\r\n        case EventKind.POINTER_MOVE: return pointerMove(model, event)\r\n        case EventKind.CLICKED_NODE: return clickedNode(model, event)\r\n        case EventKind.WHEEL: return wheel(model, event)\r\n        case EventKind.CLICKED_INPUT: return clickedInput(model, event, effects.generateUUID)\r\n        case EventKind.CLICKED_OUTPUT: return clickedOutput(model, event, effects.generateUUID)\r\n        case EventKind.OPEN_FINDER_TIMEOUT: return openFinderTimeout(model, event)\r\n        case EventKind.KEYDOWN: return keyDown(model, event, effects)\r\n        case EventKind.KEYUP: return keyUp(model, event)\r\n        case EventKind.VIRTUAL_KEYDOWN: return virtualKeyDown(model, event, effects.generateUUID)\r\n        case EventKind.CLICKED_FINDER_OPTION: return clickedFinderOption(model, event, effects.generateUUID)\r\n        case EventKind.CLICKED_BODY: return clickedNumber(model, event)\r\n        case EventKind.CLICKED_BACKGROUND: return clickedBackground(model)\r\n        case EventKind.DELETE_NODE: return deleteNode(model, event)\r\n        case EventKind.DELETE_INPUT_EDGE: return deleteInputEdge(model, event)\r\n        case EventKind.DELETE_OUTPUT_EDGES: return deleteOutputEdges(model, event)\r\n        case EventKind.PAN_CAMERA: return panCamera(model, effects.currentTime)\r\n        case EventKind.ZOOM_CAMERA: return zoomCamera(model, effects.currentTime)\r\n        case EventKind.MOVE_NODE: return moveNode(model, effects.currentTime)\r\n    }\r\n}\r\n","import { Renderer, Pointer, WorldSpace } from \".\"\r\n\r\nconst inWorldSpace = ({ x0, y0, x1, y1 }: WorldSpace, pointer: Pointer) =>\r\n    x0 <= pointer.position.x && pointer.position.x <= x1 &&\r\n    y0 <= pointer.position.y && pointer.position.y <= y1\r\n\r\nexport const pointerDown = <AppEvent, R extends Renderer<AppEvent>>(renderer: R, pointer: Pointer): R => {\r\n    for (let i = renderer.clickHandlers.length; i > 0; --i) {\r\n        for (const { onClick, worldSpace } of renderer.clickHandlers[i - 1]) {\r\n            if (inWorldSpace(worldSpace, pointer)) {\r\n                renderer.dispatch(onClick)\r\n                return renderer\r\n            }\r\n        }\r\n    }\r\n    return renderer\r\n}\r\n","import { Connections } from \"./gather_connections\"\r\nimport { Layers } from \"./layer_geometry\"\r\nimport { IdToWorldSpace } from \"./id_to_world_space\"\r\nimport { WorldSpace } from \".\"\r\n\r\nexport interface Triangles {\r\n    vertices: number[]\r\n    vertexIndices: number[]\r\n    colors: number[]\r\n    textureIndex: number\r\n    textureCoordinates: number[]\r\n    cameraIndex: number[]\r\n}\r\n\r\nexport interface Lines {\r\n    vertices: number[]\r\n    colors: number[]\r\n}\r\n\r\n\r\nexport interface Batch {\r\n    triangles: Triangles\r\n    lines: Lines\r\n}\r\n\r\nconst newBatch = (textureIndex: number): Batch => ({\r\n    triangles: {\r\n        vertices: [],\r\n        colors: [],\r\n        vertexIndices: [],\r\n        textureIndex,\r\n        textureCoordinates: [],\r\n        cameraIndex: []\r\n    },\r\n    lines: {\r\n        vertices: [],\r\n        colors: []\r\n    }\r\n})\r\n\r\nconst linspace = (start: number, stop: number, num: number): number[] => {\r\n    const step = (stop - start) / (num - 1)\r\n    return Array.from({ length: num }, (_, i) => start + step * i)\r\n}\r\n\r\nexport function* cubicBezier(ts: number[], from: WorldSpace, to: WorldSpace, offset: number): Generator<number> {\r\n    const p0x = (from.x0 + from.x1) / 2\r\n    const p0y = (from.y0 + from.y1) / 2\r\n    const p1x = p0x + offset\r\n    const p1y = p0y\r\n    const p3x = (to.x0 + to.x1) / 2\r\n    const p3y = (to.y0 + to.y1) / 2\r\n    const p2x = p3x - offset\r\n    const p2y = p3y\r\n    let lastX = 0\r\n    let lastY = 0\r\n    let first = true\r\n    for (const t of ts) {\r\n        const tSquared = t * t\r\n        const tCubed = tSquared * t\r\n        const oneMinusT = 1 - t\r\n        const oneMinusTSquared = oneMinusT * oneMinusT\r\n        const oneMinusTCubed = oneMinusTSquared * oneMinusT\r\n        const a = oneMinusTCubed\r\n        const b = 3 * oneMinusTSquared * t\r\n        const c = 3 * oneMinusT * tSquared\r\n        const d = tCubed\r\n        const x = a * p0x + b * p1x + c * p2x + d * p3x\r\n        const y = a * p0y + b * p1y + c * p2y + d * p3y\r\n        if (first) {\r\n            yield x\r\n            yield y\r\n            first = false\r\n        } else {\r\n            yield lastX\r\n            yield lastY\r\n        }\r\n        yield x\r\n        yield y\r\n        lastX = x\r\n        lastY = y\r\n    }\r\n}\r\n\r\n\r\nexport const batchGeometry = (layers: Layers, connections: Connections, idToWorldSpace: IdToWorldSpace): Batch[] => {\r\n    const samples = 20\r\n    const ts = linspace(0, 1, samples)\r\n    const batches: Batch[] = []\r\n    let batch = newBatch(0)\r\n    let batchTextureIndex = batch.triangles.textureIndex.toString()\r\n    layers.forEach((layer, z) => {\r\n        for (const [textureIndex, geometries] of Object.entries(layer)) {\r\n            if (batchTextureIndex !== textureIndex) {\r\n                if (batch.triangles.vertices.length !== 0) batches.push(batch)\r\n                batch = newBatch(parseInt(textureIndex))\r\n                batchTextureIndex = textureIndex\r\n            }\r\n            for (const geometry of geometries) {\r\n                const offset = batch.triangles.vertices.length / 2\r\n                batch.triangles.vertices.push(...geometry.vertices)\r\n                batch.triangles.colors.push(...geometry.colors)\r\n                for (const index of geometry.vertexIndices) {\r\n                    batch.triangles.vertexIndices.push(index + offset)\r\n                }\r\n                batch.triangles.textureCoordinates.push(...geometry.textureCoordinates)\r\n                batch.triangles.cameraIndex.push(...geometry.cameraIndex)\r\n            }\r\n        }\r\n        if (connections.length > z) {\r\n            for (const { connections: cs, scale } of connections[z]) {\r\n                const offset = 50 * scale\r\n                for (const { from, to, color } of cs) {\r\n                    for (const p of cubicBezier(ts, idToWorldSpace[from], idToWorldSpace[to], offset)) {\r\n                        batch.lines.vertices.push(p)\r\n                    }\r\n                    const { red, green, blue, alpha } = color\r\n                    for (let i = 0; i < samples * 2; ++i) batch.lines.colors.push(red, green, blue, alpha)\r\n                }\r\n            }\r\n            if (batch.lines.vertices.length !== 0) {\r\n                batches.push(batch)\r\n                batch = newBatch(0)\r\n            }\r\n        }\r\n    })\r\n    if (batch.triangles.vertices.length !== 0) batches.push(batch)\r\n    return batches\r\n}","import { WorldSpace } from \".\"\r\nimport { identity, inverse, Matrix3x3, multiplyMatrixVector } from \"../linear_algebra/matrix3x3\"\r\n\r\nexport interface CameraStack {\r\n    cameras: Matrix3x3[]\r\n    stack: number[]\r\n    transform: Matrix3x3\r\n}\r\n\r\nexport const initCameraStack = (): CameraStack => {\r\n    const camera = identity()\r\n    return {\r\n        cameras: [identity()],\r\n        stack: [0],\r\n        transform: inverse(camera)\r\n    }\r\n}\r\n\r\nexport const pushCamera = (cameraStack: CameraStack, camera: Matrix3x3): void => {\r\n    const index = cameraStack.cameras.length\r\n    cameraStack.cameras.push(camera)\r\n    cameraStack.stack.push(index)\r\n    cameraStack.transform = inverse(camera)\r\n}\r\n\r\nexport const activeCamera = (cameraStack: CameraStack): number => cameraStack.stack.slice(-1)[0]\r\n\r\nexport const popCamera = (cameraStack: CameraStack): void => {\r\n    cameraStack.stack.pop()\r\n    cameraStack.transform = inverse(cameraStack.cameras[activeCamera(cameraStack)])\r\n}\r\n\r\nexport const transformWorldSpace = (cameraStack: CameraStack, worldSpace: WorldSpace): WorldSpace => {\r\n    const [x0, y0, _0] = multiplyMatrixVector(cameraStack.transform, [worldSpace.x0, worldSpace.y0, 1])\r\n    const [x1, y1, _1] = multiplyMatrixVector(cameraStack.transform, [worldSpace.x1, worldSpace.y1, 1])\r\n    return { x0, y0, x1, y1 }\r\n}\r\n","import { Constraints, Entry, Geometry, geometry, layout, Layout, MeasureText, Offset, Size, UI, UIKind, WorldSpace, traverse } from \".\"\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface CenterLayout {\r\n    readonly size: Size\r\n    readonly child: Layout\r\n}\r\n\r\nexport interface CenterGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly child: Geometry\r\n}\r\n\r\nexport interface Center<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.CENTER\r\n    readonly child: UI<AppEvent>\r\n}\r\n\r\nexport const center = <AppEvent>(child: UI<AppEvent>): Center<AppEvent> => {\r\n    return {\r\n        kind: UIKind.CENTER,\r\n        child\r\n    }\r\n}\r\n\r\nexport const centerLayout = <AppEvent>(ui: Center<AppEvent>, constraints: Constraints, measureText: MeasureText): CenterLayout => {\r\n    const childLayout = layout(ui.child, constraints, measureText)\r\n    const width = constraints.maxWidth\r\n    const height = constraints.maxHeight\r\n    return { size: { width, height }, child: childLayout }\r\n}\r\n\r\nexport const centerGeometry = <AppEvent>(ui: Center<AppEvent>, layout: CenterLayout, offset: Offset, cameraStack: CameraStack): CenterGeometry => {\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height,\r\n    })\r\n    const childLayout = layout.child\r\n    const childOffset = {\r\n        x: offset.x + layout.size.width / 2 - childLayout.size.width / 2,\r\n        y: offset.y + layout.size.height / 2 - childLayout.size.height / 2\r\n    }\r\n    const childGeometry = geometry(ui.child, childLayout, childOffset, cameraStack)\r\n    return {\r\n        worldSpace,\r\n        child: childGeometry\r\n    }\r\n}\r\n\r\nexport function* centerTraverse<AppEvent>(ui: Center<AppEvent>, layout: CenterLayout, geometry: CenterGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield* traverse(ui.child, layout.child, geometry.child, z + 1)\r\n}","export enum MainAxisAlignment {\r\n    START,\r\n    CENTER,\r\n    END,\r\n    SPACE_EVENLY,\r\n    SPACE_BETWEEN\r\n}\r\n\r\nexport enum CrossAxisAlignment {\r\n    START,\r\n    CENTER,\r\n    END\r\n}","import { Constraints, Entry, geometry, Geometry, Layout, layout, MeasureText, Offset, Size, traverse, UI, UIKind, WorldSpace } from \".\"\r\nimport { MainAxisAlignment, CrossAxisAlignment } from \"./alignment\"\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface ColumnLayout {\r\n    readonly size: Size\r\n    readonly totalChildHeight: number\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface ColumnGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Column<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.COLUMN,\r\n    readonly mainAxisAlignment: MainAxisAlignment\r\n    readonly crossAxisAlignment: CrossAxisAlignment\r\n    readonly children: UI<AppEvent>[]\r\n}\r\n\r\ninterface Properties {\r\n    readonly mainAxisAlignment?: MainAxisAlignment\r\n    readonly crossAxisAlignment?: CrossAxisAlignment\r\n}\r\n\r\nexport function column<AppEvent>(children: UI<AppEvent>[]): Column<AppEvent>\r\nexport function column<AppEvent>(properties: Properties, children: UI<AppEvent>[]): Column<AppEvent>\r\nexport function column<AppEvent>(...args: any[]): Column<AppEvent> {\r\n    const [properties, children]: [Properties, UI<AppEvent>[]] = (() =>\r\n        args[0] instanceof Array ? [{}, args[0]] : [args[0], args[1]]\r\n    )()\r\n    return {\r\n        kind: UIKind.COLUMN,\r\n        mainAxisAlignment: properties.mainAxisAlignment ?? MainAxisAlignment.START,\r\n        crossAxisAlignment: properties.crossAxisAlignment ?? CrossAxisAlignment.START,\r\n        children\r\n    }\r\n}\r\n\r\nexport const columnLayout = <AppEvent>(ui: Column<AppEvent>, constraints: Constraints, measureText: MeasureText): ColumnLayout => {\r\n    const initialChildren: Layout[] = []\r\n    const initial = {\r\n        children: initialChildren,\r\n        width: 0,\r\n        totalChildHeight: 0\r\n    }\r\n    const result = ui.children.reduce((acc, child) => {\r\n        const childLayout = layout(child, constraints, measureText)\r\n        acc.children.push(childLayout)\r\n        acc.totalChildHeight += childLayout.size.height\r\n        acc.width = Math.max(acc.width, childLayout.size.width)\r\n        return acc\r\n    }, initial)\r\n    const { children, width, totalChildHeight } = result\r\n    const height = ui.mainAxisAlignment == MainAxisAlignment.START ? totalChildHeight : constraints.maxHeight\r\n    return {\r\n        size: { width, height },\r\n        totalChildHeight,\r\n        children\r\n    }\r\n}\r\n\r\nexport const columnGeometry = <AppEvent>(ui: Column<AppEvent>, layout: ColumnLayout, offset: Offset, cameraStack: CameraStack): ColumnGeometry => {\r\n    const initialChildren: Geometry[] = []\r\n    const freeSpaceY = layout.size.height - layout.totalChildHeight\r\n    const initial = {\r\n        children: initialChildren,\r\n        y: (() => {\r\n            switch (ui.mainAxisAlignment) {\r\n                case MainAxisAlignment.START: return offset.y\r\n                case MainAxisAlignment.CENTER: return offset.y + freeSpaceY / 2\r\n                case MainAxisAlignment.END: return offset.y + freeSpaceY\r\n                case MainAxisAlignment.SPACE_EVENLY: return offset.y + freeSpaceY / (ui.children.length + 1)\r\n                case MainAxisAlignment.SPACE_BETWEEN: return offset.y\r\n            }\r\n        })(),\r\n    }\r\n    const addYStart = (childLayout: Layout) => childLayout.size.height\r\n    const addYCenter = (childLayout: Layout) => childLayout.size.height\r\n    const addYEnd = (childLayout: Layout) => childLayout.size.height\r\n    const addYSpaceEvenly = (childLayout: Layout) => childLayout.size.height + freeSpaceY / (ui.children.length + 1)\r\n    const addYSpaceBetween = (childLayout: Layout) => childLayout.size.height + freeSpaceY / (ui.children.length - 1)\r\n    const addY = (() => {\r\n        switch (ui.mainAxisAlignment) {\r\n            case MainAxisAlignment.START: return addYStart\r\n            case MainAxisAlignment.CENTER: return addYCenter\r\n            case MainAxisAlignment.END: return addYEnd\r\n            case MainAxisAlignment.SPACE_EVENLY: return addYSpaceEvenly\r\n            case MainAxisAlignment.SPACE_BETWEEN: return addYSpaceBetween\r\n        }\r\n    })()\r\n    const offsetXStart = (_: Layout) => offset.x\r\n    const offsetXCenter = (childLayout: Layout) => offset.x + layout.size.width / 2 - childLayout.size.width / 2\r\n    const offsetXEnd = (childLayout: Layout) => offset.x + layout.size.width - childLayout.size.width\r\n    const offsetX = (() => {\r\n        switch (ui.crossAxisAlignment) {\r\n            case CrossAxisAlignment.START: return offsetXStart\r\n            case CrossAxisAlignment.CENTER: return offsetXCenter\r\n            case CrossAxisAlignment.END: return offsetXEnd\r\n        }\r\n    })()\r\n    const result = ui.children.reduce((acc, child, i) => {\r\n        const childLayout = layout.children[i]\r\n        const childOffset = { x: offsetX(childLayout), y: acc.y }\r\n        const childGeometry = geometry(child, childLayout, childOffset, cameraStack)\r\n        acc.children.push(childGeometry)\r\n        acc.y += addY(childLayout)\r\n        return acc\r\n    }, initial)\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height\r\n    })\r\n    return { worldSpace, children: result.children }\r\n}\r\n\r\nexport function* columnTraverse<AppEvent>(ui: Column<AppEvent>, layout: ColumnLayout, geometry: ColumnGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    const nextZ = z + 1\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        yield* traverse(child, layout.children[i], geometry.children[i], nextZ)\r\n        i += 1\r\n    }\r\n}","import { UI, Size, Layout, Constraints, MeasureText, UIKind, layout, Color, Offset, WorldSpace, Geometry, geometry, Entry, traverse, } from '.'\r\nimport { CameraStack, transformWorldSpace, activeCamera } from './camera_stack'\r\n\r\nexport interface ContainerLayout {\r\n    readonly size: Size\r\n    readonly child?: Layout\r\n}\r\n\r\nexport interface ContainerGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly vertices: number[]\r\n    readonly colors: number[]\r\n    readonly vertexIndices: number[]\r\n    readonly cameraIndex: number[]\r\n    readonly textureIndex: number\r\n    readonly textureCoordinates: number[]\r\n    readonly child?: Geometry\r\n}\r\n\r\nexport interface Padding {\r\n    readonly top: number\r\n    readonly right: number\r\n    readonly bottom: number\r\n    readonly left: number\r\n}\r\n\r\nexport interface Container<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.CONTAINER,\r\n    readonly padding: Padding\r\n    readonly width?: number\r\n    readonly height?: number\r\n    readonly x?: number\r\n    readonly y?: number\r\n    readonly color?: Color\r\n    readonly child?: UI<AppEvent>\r\n}\r\n\r\ninterface Properties<AppEvent> {\r\n    readonly padding?: number | Padding\r\n    readonly width?: number\r\n    readonly height?: number\r\n    readonly x?: number\r\n    readonly y?: number\r\n    readonly color?: Color\r\n    readonly onClick?: AppEvent\r\n    readonly id?: string\r\n}\r\n\r\nconst transformPadding = (padding?: number | Padding): Padding => {\r\n    if (padding) {\r\n        if (typeof padding === 'number') {\r\n            return { top: padding, right: padding, bottom: padding, left: padding }\r\n        } else {\r\n            return padding\r\n        }\r\n    } else {\r\n        return { top: 0, right: 0, bottom: 0, left: 0 }\r\n    }\r\n}\r\n\r\nexport const container = <AppEvent>({ padding, width, height, color, x, y, onClick, id }: Properties<AppEvent>, child?: UI<AppEvent>): Container<AppEvent> => {\r\n    return {\r\n        kind: UIKind.CONTAINER,\r\n        padding: transformPadding(padding),\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n        color,\r\n        onClick,\r\n        id,\r\n        child\r\n    }\r\n}\r\n\r\nexport const containerLayout = <AppEvent>(ui: Container<AppEvent>, constraints: Constraints, measureText: MeasureText): ContainerLayout => {\r\n    const { top, right, bottom, left } = ui.padding\r\n    if (ui.child) {\r\n        const childLayout = layout(ui.child, constraints, measureText)\r\n        const width = ui.width ?? childLayout.size.width + left + right\r\n        const height = ui.height ?? childLayout.size.height + top + bottom\r\n        return {\r\n            size: { width, height },\r\n            child: childLayout\r\n        }\r\n    }\r\n    const width = (() => {\r\n        if (ui.width) return ui.width + left + right\r\n        return constraints.maxWidth\r\n    })()\r\n    const height = (() => {\r\n        if (ui.height) return ui.height + top + bottom\r\n        return constraints.maxHeight\r\n    })()\r\n    return { size: { width, height } }\r\n}\r\n\r\nexport const containerGeometry = <AppEvent>(ui: Container<AppEvent>, layout: ContainerLayout, offset: Offset, cameraStack: CameraStack): ContainerGeometry => {\r\n    const x0 = offset.x + (ui.x ?? 0)\r\n    const x1 = x0 + layout.size.width\r\n    const y0 = offset.y + (ui.y ?? 0)\r\n    const y1 = y0 + layout.size.height\r\n    const worldSpace = transformWorldSpace(cameraStack, { x0, x1, y0, y1 })\r\n    const childGeometry = (() => {\r\n        if (ui.child) {\r\n            const childLayout = layout.child!\r\n            const childOffset = {\r\n                x: x0 + ui.padding.left,\r\n                y: y0 + ui.padding.top\r\n            }\r\n            return geometry(ui.child, childLayout, childOffset, cameraStack)\r\n        }\r\n        return undefined\r\n    })()\r\n    if (ui.color) {\r\n        const { red, green, blue, alpha } = ui.color\r\n        return {\r\n            worldSpace,\r\n            vertices: [\r\n                x0, y0,\r\n                x0, y1,\r\n                x1, y0,\r\n                x1, y1,\r\n            ],\r\n            colors: [\r\n                red, green, blue, alpha,\r\n                red, green, blue, alpha,\r\n                red, green, blue, alpha,\r\n                red, green, blue, alpha,\r\n            ],\r\n            vertexIndices: [\r\n                0, 1, 2,\r\n                1, 2, 3\r\n            ],\r\n            cameraIndex: Array(4).fill(activeCamera(cameraStack)),\r\n            textureIndex: 0,\r\n            textureCoordinates: Array(8).fill(0),\r\n            child: childGeometry\r\n        }\r\n    }\r\n    return {\r\n        worldSpace,\r\n        vertices: [],\r\n        colors: [],\r\n        vertexIndices: [],\r\n        cameraIndex: [],\r\n        textureIndex: 0,\r\n        textureCoordinates: [],\r\n        child: childGeometry\r\n    }\r\n}\r\n\r\nexport function* containerTraverse<AppEvent>(ui: Container<AppEvent>, layout: ContainerLayout, geometry: ContainerGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    if (ui.child) {\r\n        const childLayout = layout.child!\r\n        const childGeometry = geometry.child!\r\n        yield* traverse(ui.child, childLayout, childGeometry, z + 1)\r\n    }\r\n}","import { Constraints, Layout, MeasureText, Size, UI, UIKind, layout, Geometry, Offset, geometry, WorldSpace, Entry, traverse } from \".\"\r\nimport { CrossAxisAlignment, MainAxisAlignment } from \"./alignment\"\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface RowLayout {\r\n    readonly size: Size\r\n    readonly totalChildWidth: number\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface RowGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Row<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.ROW,\r\n    readonly mainAxisAlignment: MainAxisAlignment\r\n    readonly crossAxisAlignment: CrossAxisAlignment\r\n    readonly children: UI<AppEvent>[]\r\n}\r\n\r\n\r\ninterface Properties {\r\n    readonly mainAxisAlignment?: MainAxisAlignment\r\n    readonly crossAxisAlignment?: CrossAxisAlignment\r\n}\r\n\r\nexport function row<AppEvent>(children: UI<AppEvent>[]): Row<AppEvent>\r\nexport function row<AppEvent>(properties: Properties, children: UI<AppEvent>[]): Row<AppEvent>\r\nexport function row<AppEvent>(...args: any[]): Row<AppEvent> {\r\n    const [properties, children]: [Properties, UI<AppEvent>[]] = (() =>\r\n        args[0] instanceof Array ? [{}, args[0]] : [args[0], args[1]]\r\n    )()\r\n    return {\r\n        kind: UIKind.ROW,\r\n        mainAxisAlignment: properties.mainAxisAlignment ?? MainAxisAlignment.START,\r\n        crossAxisAlignment: properties.crossAxisAlignment ?? CrossAxisAlignment.START,\r\n        children\r\n    }\r\n}\r\n\r\nexport const rowLayout = <AppEvent>(ui: Row<AppEvent>, constraints: Constraints, measureText: MeasureText): RowLayout => {\r\n    const initialChildren: Layout[] = []\r\n    const initial = {\r\n        children: initialChildren,\r\n        totalChildWidth: 0,\r\n        height: 0\r\n    }\r\n    const result = ui.children.reduce((acc, child) => {\r\n        const childLayout = layout(child, constraints, measureText)\r\n        acc.children.push(childLayout)\r\n        acc.totalChildWidth += childLayout.size.width\r\n        acc.height = Math.max(acc.height, childLayout.size.height)\r\n        return acc\r\n    }, initial)\r\n    const { children, totalChildWidth, height } = result\r\n    const width = ui.mainAxisAlignment == MainAxisAlignment.START ? totalChildWidth : constraints.maxWidth\r\n    return { size: { width, height }, totalChildWidth, children }\r\n}\r\n\r\nexport const rowGeometry = <AppEvent>(ui: Row<AppEvent>, layout: RowLayout, offset: Offset, cameraStack: CameraStack): RowGeometry => {\r\n    const initialChildren: Geometry[] = []\r\n    const freeSpaceX = layout.size.width - layout.totalChildWidth\r\n    const initial = {\r\n        children: initialChildren,\r\n        x: (() => {\r\n            switch (ui.mainAxisAlignment) {\r\n                case MainAxisAlignment.START: return offset.x\r\n                case MainAxisAlignment.CENTER: return offset.x + freeSpaceX / 2\r\n                case MainAxisAlignment.END: return offset.x + freeSpaceX\r\n                case MainAxisAlignment.SPACE_EVENLY: return offset.x + freeSpaceX / (ui.children.length + 1)\r\n                case MainAxisAlignment.SPACE_BETWEEN: return offset.x\r\n            }\r\n        })(),\r\n    }\r\n    const addXStart = (childLayout: Layout) => childLayout.size.width\r\n    const addXCenter = (childLayout: Layout) => childLayout.size.width\r\n    const addXEnd = (childLayout: Layout) => childLayout.size.width\r\n    const addXSpaceEvenly = (childLayout: Layout) => childLayout.size.width + freeSpaceX / (ui.children.length + 1)\r\n    const addXSpaceBetween = (childLayout: Layout) => childLayout.size.width + freeSpaceX / (ui.children.length - 1)\r\n    const addX = (() => {\r\n        switch (ui.mainAxisAlignment) {\r\n            case MainAxisAlignment.START: return addXStart\r\n            case MainAxisAlignment.CENTER: return addXCenter\r\n            case MainAxisAlignment.END: return addXEnd\r\n            case MainAxisAlignment.SPACE_EVENLY: return addXSpaceEvenly\r\n            case MainAxisAlignment.SPACE_BETWEEN: return addXSpaceBetween\r\n        }\r\n    })()\r\n    const offsetYStart = (_: Layout) => offset.y\r\n    const offsetYCenter = (childLayout: Layout) => offset.y + layout.size.height / 2 - childLayout.size.height / 2\r\n    const offsetYEnd = (childLayout: Layout) => offset.y + layout.size.height - childLayout.size.height\r\n    const offsetY = (() => {\r\n        switch (ui.crossAxisAlignment) {\r\n            case CrossAxisAlignment.START: return offsetYStart\r\n            case CrossAxisAlignment.CENTER: return offsetYCenter\r\n            case CrossAxisAlignment.END: return offsetYEnd\r\n        }\r\n    })()\r\n    const result = ui.children.reduce((acc, child, i) => {\r\n        const childLayout = layout.children[i]\r\n        const childOffset = { x: acc.x, y: offsetY(childLayout) }\r\n        const childGeometry = geometry(child, childLayout, childOffset, cameraStack)\r\n        acc.children.push(childGeometry)\r\n        acc.x += addX(childLayout)\r\n        return acc\r\n    }, initial)\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height,\r\n    })\r\n    return { worldSpace, children: result.children }\r\n}\r\n\r\nexport function* rowTraverse<AppEvent>(ui: Row<AppEvent>, layout: RowLayout, geometry: RowGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    const nextZ = z + 1\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        yield* traverse(child, layout.children[i], geometry.children[i], nextZ)\r\n        i += 1\r\n    }\r\n}","import { Connection, Constraints, Entry, geometry, Geometry, layout, Layout, MeasureText, Offset, Size, traverse, UI, UIKind, WorldSpace } from \".\"\r\nimport { Matrix3x3 } from \"../linear_algebra/matrix3x3\"\r\nimport { CameraStack, popCamera, pushCamera, transformWorldSpace } from \"./camera_stack\"\r\n\r\nexport interface SceneLayout {\r\n    readonly size: Size\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface SceneGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Scene<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.SCENE\r\n    readonly camera: Matrix3x3\r\n    readonly children: UI<AppEvent>[]\r\n    readonly connections: Connection[]\r\n}\r\n\r\nexport interface Properties<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly camera: Matrix3x3\r\n    readonly children: UI<AppEvent>[]\r\n    readonly connections?: Connection[]\r\n}\r\n\r\nexport const scene = <AppEvent>({ id, onClick, camera, children, connections }: Properties<AppEvent>): Scene<AppEvent> => ({\r\n    id, onClick, kind: UIKind.SCENE, camera, children, connections: connections ?? []\r\n})\r\n\r\nexport const sceneLayout = <AppEvent>(ui: Scene<AppEvent>, constraints: Constraints, measureText: MeasureText): SceneLayout => {\r\n    const children = ui.children.map(c => layout(c, constraints, measureText))\r\n    const width = constraints.maxWidth\r\n    const height = constraints.maxHeight\r\n    return { size: { width, height }, children }\r\n}\r\n\r\nexport const sceneGeometry = <AppEvent>(ui: Scene<AppEvent>, layout: SceneLayout, offset: Offset, cameraStack: CameraStack): SceneGeometry => {\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height\r\n    })\r\n    pushCamera(cameraStack, ui.camera)\r\n    const children = ui.children.map((c, i) => geometry(c, layout.children[i], offset, cameraStack))\r\n    popCamera(cameraStack)\r\n    return { worldSpace, children }\r\n}\r\n\r\nexport function* sceneTraverse<AppEvent>(ui: Scene<AppEvent>, layout: SceneLayout, geometry: SceneGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        for (const entry of traverse(child, layout.children[i], geometry.children[i], z)) {\r\n            yield entry\r\n            z = Math.max(z, entry.z)\r\n        }\r\n        i++\r\n        z++\r\n    }\r\n}\r\n","import { Constraints, Geometry, layout, Layout, MeasureText, Offset, Size, UI, UIKind, WorldSpace, geometry, Entry, traverse } from \".\";\r\nimport { CameraStack, transformWorldSpace } from \"./camera_stack\";\r\n\r\nexport interface StackLayout {\r\n    readonly size: Size\r\n    readonly children: Layout[]\r\n}\r\n\r\nexport interface StackGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly children: Geometry[]\r\n}\r\n\r\nexport interface Stack<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    kind: UIKind.STACK\r\n    children: UI<AppEvent>[]\r\n}\r\n\r\nexport const stack = <AppEvent>(children: UI<AppEvent>[]): Stack<AppEvent> => ({\r\n    kind: UIKind.STACK,\r\n    children\r\n})\r\n\r\nexport const stackLayout = <AppEvent>(ui: Stack<AppEvent>, constraints: Constraints, measureText: MeasureText): StackLayout => {\r\n    const children = ui.children.map(c => layout(c, constraints, measureText))\r\n    const width = constraints.maxWidth\r\n    const height = constraints.maxHeight\r\n    return { size: { width, height }, children }\r\n}\r\n\r\nexport const stackGeometry = <AppEvent>(ui: Stack<AppEvent>, layout: StackLayout, offset: Offset, cameraStack: CameraStack): StackGeometry => {\r\n    const children = ui.children.map((c, i) => geometry(c, layout.children[i], offset, cameraStack))\r\n    const worldSpace = transformWorldSpace(cameraStack, {\r\n        x0: offset.x,\r\n        y0: offset.y,\r\n        x1: offset.x + layout.size.width,\r\n        y1: offset.y + layout.size.height,\r\n    })\r\n    return { worldSpace, children }\r\n}\r\n\r\nexport function* stackTraverse<AppEvent>(ui: Stack<AppEvent>, layout: StackLayout, geometry: StackGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n    let i = 0\r\n    for (const child of ui.children) {\r\n        for (const entry of traverse(child, layout.children[i], geometry.children[i], z)) {\r\n            yield entry\r\n            z = Math.max(z, entry.z)\r\n        }\r\n        i += 1\r\n        z += 1\r\n    }\r\n}","import { Color, Constraints, Entry, Font, MeasureText, Offset, Size, TextMeasurements, UIKind, WorldSpace } from \".\";\r\nimport { activeCamera, CameraStack, transformWorldSpace } from \"./camera_stack\";\r\n\r\nexport interface TextLayout {\r\n    readonly measurements: TextMeasurements\r\n    readonly size: Size\r\n}\r\n\r\nexport interface TextGeometry {\r\n    readonly worldSpace: WorldSpace\r\n    readonly textureIndex: number\r\n    readonly textureCoordinates: number[]\r\n    readonly colors: number[]\r\n    readonly vertices: number[]\r\n    readonly vertexIndices: number[]\r\n    readonly cameraIndex: number[]\r\n}\r\n\r\nexport interface Text<AppEvent> {\r\n    readonly id?: string\r\n    readonly onClick?: AppEvent\r\n    readonly kind: UIKind.TEXT\r\n    readonly font: Font\r\n    readonly color: Color\r\n    readonly str: string\r\n}\r\n\r\ninterface Properties {\r\n    readonly font?: string\r\n    readonly size?: number\r\n    readonly color?: Color\r\n}\r\n\r\nexport function text<AppEvent>(str: string): Text<AppEvent>\r\nexport function text<AppEvent>(properties: Properties, str: string): Text<AppEvent>\r\nexport function text<AppEvent>(...args: any[]): Text<AppEvent> {\r\n    const [properties, str]: [Properties, string] = (() =>\r\n        typeof args[0] == 'string' ? [{}, args[0]] : [args[0], args[1]]\r\n    )()\r\n    return {\r\n        kind: UIKind.TEXT,\r\n        font: {\r\n            family: properties.font ?? \"monospace\",\r\n            size: properties.size ?? 14\r\n        },\r\n        color: properties.color ?? { red: 255, green: 255, blue: 255, alpha: 255 },\r\n        str\r\n    }\r\n}\r\n\r\nexport const textLayout = <AppEvent>({ font, str }: Text<AppEvent>, _: Constraints, measureText: MeasureText): TextLayout => {\r\n    const measurements = measureText(font, str)\r\n    const width = measurements.widths.reduce((acc, width) => acc + width)\r\n    const size = { width, height: font.size }\r\n    return { measurements, size }\r\n}\r\n\r\nconst vertices = (widths: number[], height: number, offset: Offset) => {\r\n    const result = []\r\n    let offsetX = offset.x\r\n    const y0 = offset.y\r\n    const y1 = offset.y + height\r\n    for (const width of widths) {\r\n        const x0 = offsetX\r\n        const x1 = offsetX + width\r\n        result.push(\r\n            x0, y0,\r\n            x0, y1,\r\n            x1, y0,\r\n            x1, y1\r\n        )\r\n        offsetX += width\r\n    }\r\n    return result\r\n}\r\n\r\nconst colors = (n: number, { red, green, blue, alpha }: Color) => {\r\n    const result = []\r\n    for (let i = 0; i < n; ++i) {\r\n        result.push(\r\n            red, green, blue, alpha,\r\n            red, green, blue, alpha,\r\n            red, green, blue, alpha,\r\n            red, green, blue, alpha,\r\n        )\r\n    }\r\n    return result\r\n}\r\n\r\nconst vertexIndices = (n: number) => {\r\n    const result = []\r\n    let offset = 0\r\n    for (let i = 0; i < n; ++i) {\r\n        result.push(\r\n            offset, offset + 1, offset + 2,\r\n            offset + 1, offset + 2, offset + 3\r\n        )\r\n        offset += 4\r\n    }\r\n    return result\r\n}\r\n\r\nexport const textGeometry = <AppEvent>(ui: Text<AppEvent>, layout: TextLayout, offset: Offset, cameraStack: CameraStack): TextGeometry => {\r\n    const textLayout = layout as TextLayout\r\n    const { measurements } = textLayout\r\n    const { textureIndex, textureCoordinates, widths } = measurements\r\n    return {\r\n        worldSpace: transformWorldSpace(cameraStack, {\r\n            x0: offset.x,\r\n            y0: offset.y,\r\n            x1: offset.x + layout.size.width,\r\n            y1: offset.y + layout.size.height\r\n        }),\r\n        textureIndex,\r\n        textureCoordinates: textureCoordinates.flat(),\r\n        colors: colors(widths.length, ui.color),\r\n        vertices: vertices(widths, ui.font.size, offset),\r\n        vertexIndices: vertexIndices(widths.length),\r\n        cameraIndex: Array(widths.length * 4).fill(activeCamera(cameraStack))\r\n    }\r\n}\r\n\r\nexport function* textTraverse<AppEvent>(ui: Text<AppEvent>, layout: TextLayout, geometry: TextGeometry, z: number): Generator<Entry<AppEvent>> {\r\n    yield { ui, layout, geometry, z }\r\n}","import { Center, CenterLayout, centerLayout, CenterGeometry, centerGeometry, centerTraverse } from './center'\r\nimport { Column, ColumnLayout, columnLayout, ColumnGeometry, columnGeometry, columnTraverse } from './column'\r\nimport { Container, ContainerLayout, containerLayout, ContainerGeometry, containerGeometry, containerTraverse } from './container'\r\nimport { Row, RowLayout, rowLayout, RowGeometry, rowGeometry, rowTraverse } from './row'\r\nimport { Scene, SceneLayout, sceneLayout, SceneGeometry, sceneGeometry, sceneTraverse } from './scene'\r\nimport { Stack, StackLayout, stackLayout, StackGeometry, stackGeometry, stackTraverse } from './stack'\r\nimport { Text, TextLayout, textLayout, TextGeometry, textGeometry, textTraverse } from './text'\r\nimport { CameraStack } from './camera_stack'\r\nimport { Matrix3x3 } from '../linear_algebra/matrix3x3'\r\nimport { Batch } from './batch_geometry'\r\nimport { ClickHandlers } from './gather_on_click_handlers'\r\nimport { Position } from '../model/graph'\r\n\r\nexport { center } from './center'\r\nexport { column } from './column'\r\nexport { container } from './container'\r\nexport { row } from './row'\r\nexport { scene } from './scene'\r\nexport { stack } from './stack'\r\nexport { text } from './text'\r\n\r\nexport enum UIKind {\r\n    CENTER,\r\n    COLUMN,\r\n    CONTAINER,\r\n    ROW,\r\n    SCENE,\r\n    STACK,\r\n    TEXT,\r\n}\r\n\r\nexport type UI<AppEvent> =\r\n    | Center<AppEvent>\r\n    | Column<AppEvent>\r\n    | Container<AppEvent>\r\n    | Row<AppEvent>\r\n    | Scene<AppEvent>\r\n    | Stack<AppEvent>\r\n    | Text<AppEvent>\r\n\r\nexport interface Color {\r\n    red: number\r\n    green: number\r\n    blue: number\r\n    alpha: number\r\n}\r\n\r\nexport interface Size {\r\n    readonly width: number\r\n    readonly height: number\r\n}\r\n\r\nexport interface Constraints {\r\n    readonly minWidth: number\r\n    readonly maxWidth: number\r\n    readonly minHeight: number\r\n    readonly maxHeight: number\r\n}\r\n\r\nexport type Layout =\r\n    | CenterLayout\r\n    | ColumnLayout\r\n    | ContainerLayout\r\n    | RowLayout\r\n    | SceneLayout\r\n    | StackLayout\r\n    | TextLayout\r\n\r\nexport interface Font {\r\n    readonly family: string\r\n    readonly size: number\r\n}\r\n\r\nexport interface TextMeasurements {\r\n    readonly widths: number[]\r\n    readonly textureIndex: number\r\n    readonly textureCoordinates: number[][]\r\n}\r\n\r\nexport type MeasureText = (font: Font, str: string) => TextMeasurements\r\n\r\nexport const layout = <AppEvent>(ui: UI<AppEvent>, constraints: Constraints, measureText: MeasureText): Layout => {\r\n    switch (ui.kind) {\r\n        case UIKind.CENTER:\r\n            return centerLayout(ui, constraints, measureText)\r\n        case UIKind.COLUMN:\r\n            return columnLayout(ui, constraints, measureText)\r\n        case UIKind.CONTAINER:\r\n            return containerLayout(ui, constraints, measureText)\r\n        case UIKind.ROW:\r\n            return rowLayout(ui, constraints, measureText)\r\n        case UIKind.SCENE:\r\n            return sceneLayout(ui, constraints, measureText)\r\n        case UIKind.STACK:\r\n            return stackLayout(ui, constraints, measureText)\r\n        case UIKind.TEXT:\r\n            return textLayout(ui, constraints, measureText)\r\n    }\r\n}\r\n\r\nexport interface Offset {\r\n    readonly x: number\r\n    readonly y: number\r\n}\r\n\r\nexport interface WorldSpace {\r\n    readonly x0: number\r\n    readonly y0: number\r\n    readonly x1: number\r\n    readonly y1: number\r\n}\r\n\r\nexport type Geometry =\r\n    | CenterGeometry\r\n    | ColumnGeometry\r\n    | ContainerGeometry\r\n    | RowGeometry\r\n    | SceneGeometry\r\n    | StackGeometry\r\n    | TextGeometry\r\n\r\nexport const geometry = <AppEvent>(ui: UI<AppEvent>, layout: Layout, offset: Offset, cameraStack: CameraStack): Geometry => {\r\n    switch (ui.kind) {\r\n        case UIKind.CENTER:\r\n            return centerGeometry(ui, layout as CenterLayout, offset, cameraStack)\r\n        case UIKind.COLUMN:\r\n            return columnGeometry(ui, layout as ColumnLayout, offset, cameraStack)\r\n        case UIKind.CONTAINER:\r\n            return containerGeometry(ui, layout as ContainerLayout, offset, cameraStack)\r\n        case UIKind.ROW:\r\n            return rowGeometry(ui, layout as RowLayout, offset, cameraStack)\r\n        case UIKind.SCENE:\r\n            return sceneGeometry(ui, layout as SceneLayout, offset, cameraStack)\r\n        case UIKind.STACK:\r\n            return stackGeometry(ui, layout as StackLayout, offset, cameraStack)\r\n        case UIKind.TEXT:\r\n            return textGeometry(ui, layout as TextLayout, offset, cameraStack)\r\n    }\r\n}\r\n\r\nexport interface Entry<AppEvent> {\r\n    readonly ui: UI<AppEvent>\r\n    readonly layout: Layout\r\n    readonly geometry: Geometry\r\n    readonly z: number\r\n}\r\n\r\nexport function* traverse<AppEvent>(ui: UI<AppEvent>, layout: Layout, geometry: Geometry, z: number): Generator<Entry<AppEvent>> {\r\n    switch (ui.kind) {\r\n        case UIKind.CENTER:\r\n            yield* centerTraverse(ui, layout as CenterLayout, geometry as CenterGeometry, z)\r\n            break\r\n        case UIKind.COLUMN:\r\n            yield* columnTraverse(ui, layout as ColumnLayout, geometry as ColumnGeometry, z)\r\n            break\r\n        case UIKind.CONTAINER:\r\n            yield* containerTraverse(ui, layout as ContainerLayout, geometry as ContainerGeometry, z)\r\n            break\r\n        case UIKind.ROW:\r\n            yield* rowTraverse(ui, layout as RowLayout, geometry as RowGeometry, z)\r\n            break\r\n        case UIKind.SCENE:\r\n            yield* sceneTraverse(ui, layout as SceneLayout, geometry as SceneGeometry, z)\r\n            break\r\n        case UIKind.STACK:\r\n            yield* stackTraverse(ui, layout as StackLayout, geometry as StackGeometry, z)\r\n            break\r\n        case UIKind.TEXT:\r\n            yield* textTraverse(ui, layout as TextLayout, geometry as TextGeometry, z)\r\n            break\r\n    }\r\n}\r\n\r\nexport interface Connection {\r\n    from: string\r\n    to: string\r\n    color: Color\r\n}\r\n\r\nexport interface Renderer<AppEvent> {\r\n    size: Size\r\n    cameras: Matrix3x3[]\r\n    clickHandlers: ClickHandlers<AppEvent>\r\n    clear: () => void\r\n    draw: (batch: Batch) => void\r\n    measureText: MeasureText\r\n    dispatch: (event: AppEvent) => void\r\n}\r\n\r\nexport interface Pointer {\r\n    id: number\r\n    position: Position\r\n}","import { UI, Geometry, Layout, Entry, traverse } from \".\";\r\n\r\nexport interface Reducer<AppEvent, T> {\r\n    initial: () => T\r\n    combine: (accumulator: T, entry: Entry<AppEvent>) => T\r\n}\r\n\r\nexport const reduce = <AppEvent, T>(ui: UI<AppEvent>, layout: Layout, geometry: Geometry, reducer: Reducer<AppEvent, T>): T => {\r\n    const accumulator = reducer.initial()\r\n    for (const entry of traverse(ui, layout, geometry, 0)) {\r\n        reducer.combine(accumulator, entry)\r\n    }\r\n    return accumulator\r\n}","import { Entry, WorldSpace } from \".\"\r\n\r\nexport interface ClickHandler<AppEvent> {\r\n    onClick: AppEvent\r\n    worldSpace: WorldSpace\r\n}\r\n\r\nexport type ClickHandlers<AppEvent> = ClickHandler<AppEvent>[][]\r\n\r\nexport const initial = <AppEvent>(): ClickHandlers<AppEvent> => []\r\n\r\nexport const combine = <AppEvent>(handlers: ClickHandlers<AppEvent>, entry: Entry<AppEvent>): ClickHandlers<AppEvent> => {\r\n    if (entry.ui.onClick === undefined) return handlers\r\n    const needed = entry.z - handlers.length + 1\r\n    for (let i = 0; i < needed; ++i) handlers.push([])\r\n    handlers[entry.z].push({\r\n        onClick: entry.ui.onClick,\r\n        worldSpace: entry.geometry.worldSpace\r\n    })\r\n    return handlers\r\n}\r\n","import { Entry, WorldSpace } from \".\"\r\n\r\nexport type IdToWorldSpace = { [id: string]: WorldSpace }\r\n\r\nexport const initial = (): IdToWorldSpace => ({})\r\n\r\nexport const combine = <AppEvent>(lookup: IdToWorldSpace, entry: Entry<AppEvent>): IdToWorldSpace => {\r\n    if (!entry.ui.id) return lookup\r\n    lookup[entry.ui.id] = entry.geometry.worldSpace\r\n    return lookup\r\n}","import { Entry, UIKind } from \".\"\r\nimport { ContainerGeometry } from \"./container\"\r\nimport { TextGeometry } from \"./text\"\r\n\r\ntype Geometry = ContainerGeometry | TextGeometry\r\nexport type Layer = { [textureIndex: number]: Geometry[] }\r\nexport type Layers = Layer[]\r\n\r\nexport const initial = (): Layers => []\r\n\r\nexport const combine = <AppEvent>(layers: Layers, entry: Entry<AppEvent>): Layers => {\r\n    switch (entry.ui.kind) {\r\n        case UIKind.CONTAINER:\r\n        case UIKind.TEXT:\r\n            const entryGeometry = entry.geometry as Geometry\r\n            if (entryGeometry.vertices.length == 0) return layers\r\n            const needed = entry.z - layers.length + 1\r\n            for (let i = 0; i < needed; ++i) layers.push({})\r\n            const layer = layers[entry.z]\r\n            const geometry = (() => {\r\n                const geometry = layer[entryGeometry.textureIndex]\r\n                if (geometry) return geometry\r\n                const newGeometry: Geometry[] = []\r\n                layer[entryGeometry.textureIndex] = newGeometry\r\n                return newGeometry\r\n            })()\r\n            geometry.push(entryGeometry)\r\n            return layers\r\n        default:\r\n            return layers\r\n    }\r\n}\r\n","import { Entry, Connection, UIKind } from \".\"\r\nimport { inverse, multiplyMatrixVector } from \"../linear_algebra/matrix3x3\"\r\nimport { length } from \"../linear_algebra/vector3\"\r\n\r\nexport interface ConnectionsAndScale {\r\n    connections: Connection[]\r\n    scale: number\r\n}\r\n\r\nexport type Connections = ConnectionsAndScale[][]\r\n\r\nexport const initial = (): Connections => []\r\n\r\nexport const combine = <AppEvent>(connections: Connections, entry: Entry<AppEvent>): Connections => {\r\n    if (entry.ui.kind == UIKind.SCENE) {\r\n        if (entry.ui.connections.length === 0) return connections\r\n        const needed = entry.z - connections.length + 1\r\n        for (let i = 0; i < needed; ++i) connections.push([])\r\n        const layer = connections[entry.z]\r\n        layer.push({\r\n            connections: entry.ui.connections,\r\n            scale: length(multiplyMatrixVector(inverse(entry.ui.camera), [0, 1, 0]))\r\n        })\r\n        return connections\r\n    }\r\n    return connections\r\n}\r\n","import { Entry } from \".\"\r\nimport { ClickHandlers } from \"./gather_on_click_handlers\"\r\nimport * as gatherOnClickHandlers from \"./gather_on_click_handlers\"\r\nimport { IdToWorldSpace } from \"./id_to_world_space\"\r\nimport * as buildIdToWorldSpace from \"./id_to_world_space\"\r\nimport { Layers } from \"./layer_geometry\"\r\nimport * as layerGeometry from \"./layer_geometry\"\r\nimport { Connections } from \"./gather_connections\"\r\nimport * as gatherConnections from \"./gather_connections\"\r\n\r\nexport interface Accumulator<AppEvent> {\r\n    layers: Layers,\r\n    clickHandlers: ClickHandlers<AppEvent>,\r\n    idToWorldSpace: IdToWorldSpace\r\n    connections: Connections\r\n}\r\n\r\nexport const initial = <AppEvent>(): Accumulator<AppEvent> => ({\r\n    layers: layerGeometry.initial(),\r\n    clickHandlers: gatherOnClickHandlers.initial(),\r\n    idToWorldSpace: buildIdToWorldSpace.initial(),\r\n    connections: gatherConnections.initial()\r\n})\r\n\r\nexport const combine = <AppEvent>(acc: Accumulator<AppEvent>, entry: Entry<AppEvent>): Accumulator<AppEvent> => ({\r\n    layers: layerGeometry.combine(acc.layers, entry),\r\n    clickHandlers: gatherOnClickHandlers.combine(acc.clickHandlers, entry),\r\n    idToWorldSpace: buildIdToWorldSpace.combine(acc.idToWorldSpace, entry),\r\n    connections: gatherConnections.combine(acc.connections, entry)\r\n})\r\n","import { batchGeometry } from \"./batch_geometry\"\r\nimport { initCameraStack } from \"./camera_stack\"\r\nimport { reduce } from \"./reduce\"\r\nimport { UI, layout, geometry, Renderer } from \".\"\r\nimport * as reducer from './reducer'\r\nimport { Accumulator } from './reducer'\r\n\r\nexport const render = <AppEvent, R extends Renderer<AppEvent>>(renderer: R, ui: UI<AppEvent>): R => {\r\n    const { width, height } = renderer.size\r\n    renderer.clear()\r\n    const constraints = {\r\n        minWidth: 0,\r\n        maxWidth: width,\r\n        minHeight: 0,\r\n        maxHeight: height\r\n    }\r\n    const uiLayout = layout(ui, constraints, renderer.measureText)\r\n    const offsets = { x: 0, y: 0 }\r\n    const cameraStack = initCameraStack()\r\n    const uiGeometry = geometry(ui, uiLayout, offsets, cameraStack)\r\n    const { layers, clickHandlers, connections, idToWorldSpace } = reduce<AppEvent, Accumulator<AppEvent>>(ui, uiLayout, uiGeometry, reducer)\r\n    const batches = batchGeometry(layers, connections, idToWorldSpace)\r\n    renderer.cameras = cameraStack.cameras\r\n    renderer.clickHandlers = clickHandlers\r\n    for (const batch of batches) renderer.draw(batch)\r\n    return renderer\r\n}\r\n","import { Batch } from \"./batch_geometry\";\r\nimport { Font, TextMeasurements, Size } from \".\";\r\nimport { Matrix3x3, projection } from \"../linear_algebra/matrix3x3\";\r\nimport { Document, WebGL2Context, Buffer, UniformLocation, Shader, Program, Canvas, Texture, Window } from \"./dom\";\r\nimport { ClickHandlers } from \"./gather_on_click_handlers\";\r\n\r\ninterface Attribute {\r\n    location: number\r\n    buffer: Buffer\r\n}\r\n\r\ninterface Attributes {\r\n    vertices: Attribute\r\n    vertexIndices: Buffer\r\n    colors: Attribute\r\n    textureCoordinates: Attribute\r\n    cameraIndex: Attribute\r\n}\r\n\r\ninterface Uniforms {\r\n    projection: UniformLocation\r\n    texture: UniformLocation\r\n    cameras: UniformLocation\r\n}\r\n\r\nexport enum ProgramKind { DATA, ERROR }\r\n\r\ninterface ProgramData {\r\n    kind: ProgramKind.DATA\r\n    vertexShader: Shader\r\n    fragmentShader: Shader\r\n    program: Program\r\n    attributes: Attributes\r\n    uniforms: Uniforms\r\n}\r\n\r\nexport interface ProgramError {\r\n    kind: ProgramKind.ERROR\r\n    vertexInfoLog: string | null\r\n    fragmentInfoLog: string | null\r\n}\r\n\r\n\r\ntype DevicePixelRatio = number\r\n\r\nconst nearestPowerOfTwo = (x: number): number => {\r\n    let current = 1\r\n    while (current < x) {\r\n        current <<= 1\r\n    }\r\n    return current\r\n}\r\n\r\nconst createTextMeasurements = (document: Document, gl: WebGL2Context, font: Font, dpr: DevicePixelRatio) => {\r\n    const canvas = document.createElement('canvas')\r\n    const ctx = canvas.getContext('2d')!\r\n    const totalCells = 256\r\n    const rows = Math.sqrt(totalCells)\r\n    const size = nearestPowerOfTwo(font.size * rows)\r\n    const cellSize = size / rows\r\n    canvas.width = size * dpr\r\n    canvas.height = size * dpr\r\n    canvas.style.width = `${size}px`\r\n    canvas.style.height = `${size}px`\r\n    ctx.scale(dpr, dpr)\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'top'\r\n    ctx.font = `${font.size}px ${font.family}`\r\n    ctx.fillStyle = 'white'\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    const height = font.size\r\n    const widths: number[] = []\r\n    const textureCoordinates: number[][] = []\r\n    for (let i = 0; i < totalCells; ++i) {\r\n        const c = String.fromCharCode(i)\r\n        const metric = ctx.measureText(c)\r\n        const width = Math.ceil(metric.width)\r\n        const x = i % rows * cellSize\r\n        const y = Math.floor(i / rows) * cellSize\r\n        ctx.fillText(c, x, y)\r\n        widths.push(width)\r\n        const x0 = x / size\r\n        const x1 = (x + width) / size\r\n        const y0 = y / size\r\n        const y1 = (y + height) / size\r\n        textureCoordinates.push([\r\n            x0, y0,\r\n            x0, y1,\r\n            x1, y0,\r\n            x1, y1\r\n        ])\r\n    }\r\n    const texture = gl.createTexture()!\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n      /*mipLevel*/0,\r\n      /*internalformat*/gl.RGBA,\r\n      /*srcFormat*/gl.RGBA,\r\n      /*srcType*/gl.UNSIGNED_BYTE,\r\n      /*source*/canvas\r\n    )\r\n    gl.generateMipmap(gl.TEXTURE_2D)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n    return { widths, textureCoordinates, texture }\r\n}\r\n\r\nconst mapString = <T>(str: string, f: (c: string, i: number) => T): Array<T> => {\r\n    let result = []\r\n    for (let i = 0; i < str.length; ++i) {\r\n        result.push(f(str[i], i))\r\n    }\r\n    return result\r\n}\r\n\r\nexport class WebGL2Renderer<AppEvent> {\r\n    _size: Size\r\n    _cameras: Matrix3x3[]\r\n    kind: ProgramKind.DATA = ProgramKind.DATA\r\n\r\n    constructor(\r\n        public window: Window,\r\n        public document: Document,\r\n        public canvas: Canvas,\r\n        public gl: WebGL2Context,\r\n        public program: ProgramData,\r\n        public textures: Texture[],\r\n        public textMeasurementsCache: Map<string, TextMeasurements>,\r\n        public clickHandlers: ClickHandlers<AppEvent>,\r\n        public dispatch: (event: AppEvent) => void\r\n    ) {\r\n    }\r\n\r\n    clear = () => {\r\n        const { gl } = this\r\n        gl.clear(gl.COLOR_BUFFER_BIT)\r\n    }\r\n\r\n    set size(size: Size) {\r\n        const { gl, program, window } = this\r\n        const { uniforms } = program\r\n        const { canvas } = gl\r\n        gl.uniformMatrix3fv(uniforms.projection, /*transpose*/true, projection(size))\r\n        canvas.width = size.width * window.devicePixelRatio\r\n        canvas.height = size.height * window.devicePixelRatio\r\n        canvas.style.width = `${size.width}px`\r\n        canvas.style.height = `${size.height}px`\r\n        canvas.style.display = 'block'\r\n        gl.viewport(0, 0, canvas.width, canvas.height)\r\n        this._size = size\r\n    }\r\n\r\n    get size() { return this._size }\r\n\r\n    set cameras(cameras: Matrix3x3[]) {\r\n        const { gl, program } = this\r\n        const { uniforms } = program\r\n        const data: number[] = []\r\n        for (const camera of cameras) data.push(...camera)\r\n        gl.uniformMatrix3fv(uniforms.cameras, /*transpose*/true, data)\r\n        this._cameras = cameras\r\n    }\r\n\r\n    get cameras() { return this._cameras }\r\n\r\n    draw = ({ triangles, lines }: Batch) => {\r\n        const { gl, program, textures } = this\r\n        const { attributes } = program\r\n        {\r\n            const { vertices, colors, vertexIndices, textureCoordinates, textureIndex, cameraIndex } = triangles\r\n            if (vertices.length !== 0) {\r\n                const texture = textures[textureIndex]\r\n                gl.bindTexture(gl.TEXTURE_2D, texture)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.vertices.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.colors.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.textureCoordinates.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinates), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.cameraIndex.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Uint8Array(cameraIndex), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.vertexIndices)\r\n                gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW)\r\n                gl.drawElements(gl.TRIANGLES, /*count*/vertexIndices.length, /*type*/gl.UNSIGNED_SHORT, /*offset*/0)\r\n            }\r\n        }\r\n        {\r\n            const { vertices, colors } = lines\r\n            if (vertices.length !== 0) {\r\n                const texture = textures[0]\r\n                const count = vertices.length / 2\r\n                gl.bindTexture(gl.TEXTURE_2D, texture)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.vertices.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.colors.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.textureCoordinates.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(Array(count * 2).fill(0)), gl.STATIC_DRAW)\r\n                gl.bindBuffer(gl.ARRAY_BUFFER, attributes.cameraIndex.buffer)\r\n                gl.bufferData(gl.ARRAY_BUFFER, new Uint8Array(Array(count).fill(0)), gl.STATIC_DRAW)\r\n                gl.drawArrays(gl.LINES, /*first*/0, count)\r\n            }\r\n        }\r\n    }\r\n\r\n    getTextureMeasurements = (font: Font, dpr: DevicePixelRatio) => {\r\n        const { document, gl } = this\r\n        const key = `${dpr} ${font.size} ${font.family}`\r\n        const measurements = this.textMeasurementsCache.get(key)\r\n        if (measurements) return measurements\r\n        const { texture, widths, textureCoordinates } = createTextMeasurements(document, gl, font, dpr)\r\n        const textureIndex = this.textures.length\r\n        this.textures.push(texture)\r\n        const newMeasurements = { widths, textureIndex, textureCoordinates }\r\n        this.textMeasurementsCache.set(key, newMeasurements)\r\n        return newMeasurements\r\n    }\r\n\r\n    measureText = (font: Font, str: string) => {\r\n        const { window } = this\r\n        const dpr = window.devicePixelRatio\r\n        const { widths, textureIndex, textureCoordinates } = this.getTextureMeasurements(font, dpr)\r\n        const indices = mapString(str, c => c.charCodeAt(0))\r\n        return {\r\n            widths: indices.map(i => widths[i]),\r\n            textureIndex,\r\n            textureCoordinates: indices.map(i => textureCoordinates[i]),\r\n        }\r\n    }\r\n}\r\n\r\nconst createVertexShader = (gl: WebGL2Context, attributes: Attributes): Shader => {\r\n    const { vertices, colors, textureCoordinates, cameraIndex } = attributes\r\n    const vertexShaderSource = `#version 300 es\r\n  uniform mat3 u_projection;\r\n  uniform mat3 u_cameras[8];\r\n\r\n  layout(location = ${vertices.location}) in vec2 a_vertex;\r\n  layout(location = ${colors.location}) in vec4 a_color;\r\n  layout(location = ${textureCoordinates.location}) in vec2 a_textureCoordinates;\r\n  layout(location = ${cameraIndex.location}) in uint a_cameraIndex;\r\n\r\n  out vec4 v_color;\r\n  out vec2 v_textureCoordinates;\r\n\r\n  void main() {\r\n    mat3 camera = u_cameras[a_cameraIndex];\r\n    mat3 transform = u_projection * inverse(camera);\r\n    gl_Position = vec4((transform * vec3(a_vertex, 1)).xy, 0, 1);\r\n    v_color = a_color / 255.0;\r\n    v_textureCoordinates = a_textureCoordinates;\r\n  }\r\n  `\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER)!\r\n    gl.shaderSource(vertexShader, vertexShaderSource)\r\n    gl.compileShader(vertexShader)\r\n    return vertexShader\r\n}\r\n\r\nconst createFragmentShader = (gl: WebGL2Context): Shader => {\r\n    const fragmentShaderSource = `#version 300 es\r\n  precision highp float;\r\n\r\n  uniform sampler2D u_texture;\r\n\r\n  in vec4 v_color;\r\n  in vec2 v_textureCoordinates;\r\n\r\n  out vec4 fragColor;\r\n  \r\n  void main() {\r\n    fragColor = texture(u_texture, v_textureCoordinates) * v_color;\r\n  }\r\n  `\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!\r\n    gl.shaderSource(fragmentShader, fragmentShaderSource)\r\n    gl.compileShader(fragmentShader)\r\n    return fragmentShader\r\n}\r\n\r\nconst bindVertices = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_vertex')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        /*size*/2,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst bindColors = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_color')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        /*size*/4,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst bindTextureCoordinates = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_textureCoordinates')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        /*size*/2,\r\n        /*type*/gl.FLOAT,\r\n        /*normalize*/false,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst bindCameraIndex = (gl: WebGL2Context, program: Program, { location, buffer }: Attribute) => {\r\n    gl.bindAttribLocation(program, location, 'a_cameraIndex')\r\n    gl.enableVertexAttribArray(location)\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.vertexAttribIPointer(\r\n        location,\r\n        /*size*/1,\r\n        /*type*/gl.UNSIGNED_BYTE,\r\n        /*stride*/0,\r\n        /*offset*/0\r\n    )\r\n}\r\n\r\nconst createProgram = (gl: WebGL2Context): ProgramData | ProgramError => {\r\n    const attributes: Attributes = {\r\n        vertices: {\r\n            location: 0,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        colors: {\r\n            location: 1,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        textureCoordinates: {\r\n            location: 2,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        cameraIndex: {\r\n            location: 3,\r\n            buffer: gl.createBuffer()!\r\n        },\r\n        vertexIndices: gl.createBuffer()!\r\n    }\r\n    const vertexShader = createVertexShader(gl, attributes)\r\n    const fragmentShader = createFragmentShader(gl)\r\n    const program = gl.createProgram()!\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n    gl.linkProgram(program)\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        return {\r\n            kind: ProgramKind.ERROR,\r\n            vertexInfoLog: gl.getShaderInfoLog(vertexShader),\r\n            fragmentInfoLog: gl.getShaderInfoLog(fragmentShader),\r\n        }\r\n    }\r\n    gl.useProgram(program)\r\n    const vertexArrayObject = gl.createVertexArray()!\r\n    gl.bindVertexArray(vertexArrayObject)\r\n    bindVertices(gl, program, attributes.vertices)\r\n    bindColors(gl, program, attributes.colors)\r\n    bindTextureCoordinates(gl, program, attributes.textureCoordinates)\r\n    bindCameraIndex(gl, program, attributes.cameraIndex)\r\n    const uniforms: Uniforms = {\r\n        projection: gl.getUniformLocation(program, 'u_projection')!,\r\n        texture: gl.getUniformLocation(program, 'u_texture')!,\r\n        cameras: gl.getUniformLocation(program, 'u_cameras')!\r\n    }\r\n    return {\r\n        kind: ProgramKind.DATA,\r\n        vertexShader,\r\n        fragmentShader,\r\n        program,\r\n        attributes,\r\n        uniforms\r\n    }\r\n}\r\n\r\ninterface Parameters<AppEvent> {\r\n    width: number\r\n    height: number\r\n    document: Document\r\n    window: Window\r\n    dispatch?: (event: AppEvent) => void\r\n}\r\n\r\nexport const webGL2Renderer = <AppEvent>({ width, height, document, window, dispatch }: Parameters<AppEvent>): WebGL2Renderer<AppEvent> | ProgramError => {\r\n    const canvas = document.createElement('canvas')\r\n    canvas.style.touchAction = 'none'\r\n    const gl = canvas.getContext('webgl2')!\r\n    gl.enable(gl.BLEND)\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA)\r\n    gl.depthMask(false)\r\n    gl.activeTexture(gl.TEXTURE0)\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true)\r\n    gl.clearColor(0, 0, 0, 1)\r\n    const program = createProgram(gl)\r\n    if (program.kind == ProgramKind.ERROR) return program\r\n    const texture = gl.createTexture()!\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n        gl.TEXTURE_2D,\r\n      /*mipLevel*/0,\r\n      /*internalformat*/gl.RGBA,\r\n      /*width*/1,\r\n      /*height*/1,\r\n      /*border*/0,\r\n      /*srcFormat*/gl.RGBA,\r\n      /*srcType*/gl.UNSIGNED_BYTE,\r\n      /*data*/new Uint8Array([255, 255, 255, 255])\r\n    )\r\n    const renderer = new WebGL2Renderer<AppEvent>(\r\n        window,\r\n        document,\r\n        canvas,\r\n        gl,\r\n        program,\r\n        [texture],\r\n        new Map(),\r\n        [],\r\n        dispatch ?? (() => { })\r\n    )\r\n    renderer.size = { width, height }\r\n    return renderer\r\n}","import { pointerDown } from \"./pointer_down\"\r\nimport { render } from \"./render\"\r\nimport { ProgramError, ProgramKind, WebGL2Renderer, webGL2Renderer } from \"./webgl2\"\r\nimport { Pointer, UI } from \".\"\r\nimport { Document, Window, PointerEvent } from \"./dom\"\r\nimport { GenerateUUID } from \"../model/graph\"\r\n\r\nexport const transformPointer = (p: PointerEvent): Pointer => ({\r\n    id: p.pointerId,\r\n    position: { x: p.clientX, y: p.clientY }\r\n})\r\n\r\nexport type Dispatch<AppEvent> = (event: AppEvent) => void\r\n\r\ntype View<Model, AppEvent> = (model: Model) => UI<AppEvent>\r\n\r\ninterface Milliseconds {\r\n    milliseconds: number\r\n}\r\n\r\ninterface Scheduled<AppEvent> {\r\n    after: Milliseconds\r\n    event: AppEvent\r\n}\r\n\r\nexport interface UpdateResult<Model, AppEvent> {\r\n    model: Model\r\n    render?: boolean\r\n    schedule?: Scheduled<AppEvent>[]\r\n    dispatch?: AppEvent[]\r\n}\r\n\r\nexport type CurrentTime = () => number\r\n\r\nexport interface Effects {\r\n    currentTime: CurrentTime\r\n    generateUUID: GenerateUUID\r\n}\r\n\r\ntype Update<Model, AppEvent> = (effects: Effects, model: Model, event: AppEvent) => UpdateResult<Model, AppEvent>\r\n\r\ninterface Properties<Model, AppEvent> {\r\n    model: Model\r\n    view: View<Model, AppEvent>\r\n    update: Update<Model, AppEvent>\r\n    window: Window\r\n    document: Document\r\n    requestAnimationFrame: (callback: () => void) => void\r\n    setTimeout: (callback: () => void, milliseconds: number) => void\r\n    pointerDown: (dispatch: Dispatch<AppEvent>, pointer: Pointer) => void\r\n    effects: Effects\r\n}\r\n\r\nexport interface Success<AppEvent> {\r\n    kind: ProgramKind.DATA\r\n    dispatch: Dispatch<AppEvent>\r\n}\r\n\r\nexport const run = <Model, AppEvent>(properties: Properties<Model, AppEvent>): Success<AppEvent> | ProgramError => {\r\n    let { model, view, update, window, document, requestAnimationFrame, setTimeout, effects } = properties\r\n    const renderer_or_error = webGL2Renderer<AppEvent>({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n        window,\r\n        document,\r\n    })\r\n    switch (renderer_or_error.kind) {\r\n        case ProgramKind.ERROR:\r\n            return renderer_or_error\r\n        case ProgramKind.DATA:\r\n            let renderer = renderer_or_error\r\n            let renderQueued = false\r\n            const scheduleRender = () => {\r\n                if (!renderQueued) {\r\n                    renderQueued = true\r\n                    requestAnimationFrame(() => {\r\n                        renderer = render(renderer, view(model))\r\n                        renderQueued = false\r\n                    })\r\n                }\r\n            }\r\n            const dispatch = (event: AppEvent) => {\r\n                const {\r\n                    model: newModel,\r\n                    render,\r\n                    schedule,\r\n                    dispatch: dispatchEvents\r\n                } = update(effects, model, event)\r\n                model = newModel\r\n                if (render) scheduleRender()\r\n                for (const { after, event } of schedule ?? []) {\r\n                    const { milliseconds } = after\r\n                    setTimeout(() => dispatch(event), milliseconds)\r\n                }\r\n                for (const event of dispatchEvents ?? []) dispatch(event)\r\n            }\r\n            renderer.dispatch = dispatch\r\n            document.body.appendChild(renderer.canvas)\r\n            document.addEventListener(\"pointerdown\", p => {\r\n                const transformed = transformPointer(p)\r\n                properties.pointerDown(dispatch, transformed)\r\n                renderer = pointerDown<AppEvent, WebGL2Renderer<AppEvent>>(renderer, transformed)\r\n            })\r\n            window.addEventListener(\"resize\", () => {\r\n                renderer.size = { width: window.innerWidth, height: window.innerHeight }\r\n                scheduleRender()\r\n            })\r\n            scheduleRender()\r\n            return { kind: ProgramKind.DATA, dispatch }\r\n    }\r\n}\r\n","import { UI, row, column, container, Color, text } from \"../ui\"\r\nimport { MainAxisAlignment } from \"../ui/alignment\"\r\n\r\nexport interface ContextMenuItem<AppEvent> {\r\n    name: string\r\n    shortcut: string\r\n    onClick: AppEvent\r\n}\r\n\r\ninterface Properties<AppEvent> {\r\n    items: ContextMenuItem<AppEvent>[]\r\n    backgroundColor: Color\r\n}\r\n\r\nexport const contextMenu = <AppEvent>({ items, backgroundColor }: Properties<AppEvent>): UI<AppEvent> =>\r\n    column({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n        row({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n            container({ padding: 4, color: backgroundColor },\r\n                column(items.map(({ name, shortcut, onClick }) =>\r\n                    container({\r\n                        padding: 10,\r\n                        onClick\r\n                    }, text({ size: 18 }, `(${shortcut}) ${name}`))\r\n                )))\r\n        ])\r\n    ])","import { CrossAxisAlignment, MainAxisAlignment } from \"../ui/alignment\"\r\nimport { AppEvent, EventKind } from \"../update\"\r\nimport { Model } from \"../model\"\r\nimport { Theme } from '../model/theme'\r\nimport { Focus, FocusFinder, FocusKind } from \"../model/focus\"\r\nimport { text, stack, scene, row, container, column, Connection, UI } from '../ui'\r\nimport { Body, Graph, Input, Output, UUID } from \"../model/graph\"\r\nimport { contextMenu } from \"./context_menu\"\r\nimport { QuickSelectKind } from \"../model/quick_select\"\r\nimport { identity } from \"../linear_algebra/matrix3x3\"\r\n\r\n\r\nexport const spacer = (size: number): UI<AppEvent> =>\r\n    container({ width: size, height: size })\r\n\r\n\r\nexport const intersperse = <T>(array: T[], seperator: T): T[] => {\r\n    const result = [array[0]]\r\n    for (const element of array.slice(1)) {\r\n        result.push(seperator, element)\r\n    }\r\n    return result\r\n}\r\n\r\nexport const isFocused = (focus: Focus, uuid: UUID): boolean => {\r\n    switch (focus.kind) {\r\n        case FocusKind.BODY: return focus.body === uuid\r\n        case FocusKind.INPUT: return focus.input === uuid\r\n        case FocusKind.NODE: return focus.node === uuid\r\n        case FocusKind.OUTPUT: return focus.output === uuid\r\n        default: return false\r\n    }\r\n}\r\n\r\nexport const inputUi = (theme: Theme, { name, uuid }: Input, focus: Focus): UI<AppEvent> =>\r\n    container({\r\n        onClick: {\r\n            kind: EventKind.CLICKED_INPUT,\r\n            input: uuid\r\n        }\r\n    },\r\n        row({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n            container({\r\n                id: uuid,\r\n                color: isFocused(focus, uuid) ? theme.focusInput : theme.input,\r\n                padding: { top: 2, right: 4, bottom: 2, left: 4 }\r\n            }, text({ color: theme.background }, focus.quickSelect.kind === QuickSelectKind.INPUT ? focus.quickSelect.hotkeys[uuid] : ' ')),\r\n            spacer(4),\r\n            text(name)\r\n        ])\r\n    )\r\n\r\n\r\nexport const inputsUi = (theme: Theme, inputs: Input[], focus: Focus) =>\r\n    column(\r\n        intersperse(\r\n            inputs.map(input => inputUi(theme, input, focus)),\r\n            spacer(4)\r\n        )\r\n    )\r\n\r\n\r\nexport const outputUi = (theme: Theme, { name, uuid }: Output, focus: Focus): UI<AppEvent> =>\r\n    container({\r\n        onClick: {\r\n            kind: EventKind.CLICKED_OUTPUT,\r\n            output: uuid\r\n        }\r\n    },\r\n        row({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n            text(name),\r\n            spacer(4),\r\n            container({\r\n                id: uuid,\r\n                color: isFocused(focus, uuid) ? theme.focusInput : theme.input,\r\n                padding: { top: 2, right: 4, bottom: 2, left: 4 }\r\n            }, text({ color: theme.background }, focus.quickSelect.kind === QuickSelectKind.OUTPUT ? focus.quickSelect.hotkeys[uuid] : ' ')),\r\n        ])\r\n    )\r\n\r\n\r\nexport const outputsUi = (theme: Theme, outputs: Output[], focus: Focus) =>\r\n    column(\r\n        intersperse(\r\n            outputs.map(output => outputUi(theme, output, focus)),\r\n            spacer(4)\r\n        )\r\n    )\r\n\r\n\r\nexport const numberUi = (theme: Theme, body: Body, focus: Focus): UI<AppEvent> => {\r\n    const value = focus.quickSelect.kind === QuickSelectKind.BODY ?\r\n        focus.quickSelect.hotkeys[body.uuid] :\r\n        body.value.toString()\r\n    return container({\r\n        color: isFocused(focus, body.uuid) ? theme.focusInput : theme.background,\r\n        padding: 5,\r\n        onClick: {\r\n            kind: EventKind.CLICKED_BODY,\r\n            body: body.uuid\r\n        }\r\n    },\r\n        text(value))\r\n}\r\n\r\n\r\nexport const nodeUi = (theme: Theme, nodeUUID: UUID, graph: Graph, focus: Focus): UI<AppEvent> => {\r\n    const node = graph.nodes[nodeUUID]\r\n    const rowEntries: UI<AppEvent>[] = []\r\n    if (node.inputs.length) {\r\n        rowEntries.push(inputsUi(theme, node.inputs.map(i => graph.inputs[i]), focus))\r\n    }\r\n    if (node.inputs.length && node.outputs.length) {\r\n        rowEntries.push(spacer(15))\r\n    }\r\n    if (node.body) {\r\n        rowEntries.push(numberUi(theme, graph.bodys[node.body], focus), spacer(15))\r\n    }\r\n    if (node.outputs.length) {\r\n        rowEntries.push(outputsUi(theme, node.outputs.map(o => graph.outputs[o]), focus))\r\n    }\r\n    const name = focus.quickSelect.kind === QuickSelectKind.NODE ?\r\n        focus.quickSelect.hotkeys[node.uuid] :\r\n        node.name\r\n    return container(\r\n        {\r\n            color: isFocused(focus, node.uuid) ? theme.focusNode : theme.node,\r\n            padding: 4,\r\n            x: node.position.x,\r\n            y: node.position.y,\r\n            onClick: {\r\n                kind: EventKind.CLICKED_NODE,\r\n                node: node.uuid\r\n            }\r\n        },\r\n        column({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n            text(name),\r\n            spacer(4),\r\n            row(rowEntries)\r\n        ])\r\n    )\r\n}\r\n\r\n\r\nexport const finder = ({ search, options }: FocusFinder, theme: Theme): UI<AppEvent> =>\r\n    column({ crossAxisAlignment: CrossAxisAlignment.CENTER }, [\r\n        container({ height: 10 }),\r\n        container({ color: theme.node, padding: 4 },\r\n            column([\r\n                container({ color: theme.background, width: 300, padding: 4 },\r\n                    text({ color: theme.input, size: 24 }, search.length ? search : \"Search ...\")),\r\n                container({ width: 10, height: 10 }),\r\n                ...options.map((option, i) =>\r\n                    container<AppEvent>({\r\n                        padding: 4,\r\n                        onClick: {\r\n                            kind: EventKind.CLICKED_FINDER_OPTION,\r\n                            option\r\n                        }\r\n                    },\r\n                        text({\r\n                            size: 18,\r\n                            color: i == 0 ? theme.input : { red: 255, green: 255, blue: 255, alpha: 255 }\r\n                        }, option)\r\n                    )\r\n                )\r\n            ])\r\n        )\r\n    ])\r\n\r\n\r\nexport const virtualKey = (key: string): UI<AppEvent> =>\r\n    container({\r\n        padding: 10,\r\n        onClick: {\r\n            kind: EventKind.VIRTUAL_KEYDOWN,\r\n            key\r\n        }\r\n    }, text({ size: 24 }, key))\r\n\r\n\r\nexport const virtualKeys = (keys: string[]) =>\r\n    row(keys.map(c => virtualKey(c)))\r\n\r\n\r\nexport const alphabeticVirtualKeyboard = (theme: Theme) =>\r\n    column({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n        row({ mainAxisAlignment: MainAxisAlignment.SPACE_BETWEEN }, [\r\n            container({ padding: 4, color: theme.node },\r\n                column([\r\n                    virtualKeys(['1', '2', '3', '4', '5']),\r\n                    virtualKeys(['q', 'w', 'e', 'r', 't']),\r\n                    virtualKeys(['a', 's', 'd', 'f', 'g']),\r\n                    virtualKeys(['z', 'x', 'c', 'v']),\r\n                    virtualKeys(['sft', 'space']),\r\n                ])\r\n            ),\r\n            container({ padding: 4, color: theme.node },\r\n                column({ crossAxisAlignment: CrossAxisAlignment.END }, [\r\n                    virtualKeys(['6', '7', '8', '9', '0']),\r\n                    virtualKeys(['y', 'u', 'i', 'o', 'p']),\r\n                    virtualKeys(['h', 'j', 'k', 'l']),\r\n                    virtualKeys(['b', 'n', 'm', 'del']),\r\n                    virtualKeys(['space', 'ret']),\r\n                ])\r\n            ),\r\n        ]),\r\n    ])\r\n\r\n\r\nexport const numericVirtualKeyboard = (theme: Theme) =>\r\n    column({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n        row({ mainAxisAlignment: MainAxisAlignment.END }, [\r\n            container({ padding: 4, color: theme.node },\r\n                column({ crossAxisAlignment: CrossAxisAlignment.END }, [\r\n                    virtualKeys(['1', '2', '3', '4']),\r\n                    virtualKeys(['5', '6', '7', '8']),\r\n                    virtualKeys(['9', '0', 'del']),\r\n                    virtualKeys(['.', 'ret']),\r\n                ])\r\n            ),\r\n        ]),\r\n    ])\r\n\r\nconst identityCamera = identity()\r\n\r\nexport const view = (model: Model): UI<AppEvent> => {\r\n    const nodes = model.nodeOrder\r\n        .map(node =>\r\n            nodeUi(\r\n                model.theme,\r\n                node,\r\n                model.graph,\r\n                model.focus\r\n            )\r\n        )\r\n    const connections: Connection[] = Object.values(model.graph.edges).map(({ input, output }) => ({\r\n        from: output,\r\n        to: input,\r\n        color: model.theme.connection\r\n    }))\r\n    const stacked: UI<AppEvent>[] = [\r\n        container({ color: model.theme.background, onClick: { kind: EventKind.CLICKED_BACKGROUND } }),\r\n        scene({ camera: model.camera, children: nodes, connections }),\r\n    ]\r\n    if (model.nodePlacementLocation.show) {\r\n        stacked.push(\r\n            scene({\r\n                camera: identityCamera,\r\n                children: [\r\n                    container({\r\n                        color: model.theme.nodePlacementLocation,\r\n                        width: 10,\r\n                        height: 10,\r\n                        x: model.nodePlacementLocation.x,\r\n                        y: model.nodePlacementLocation.y,\r\n                    })\r\n                ],\r\n                connections: []\r\n            })\r\n        )\r\n    }\r\n    switch (model.focus.kind) {\r\n        case FocusKind.FINDER:\r\n            stacked.push(\r\n                finder(model.focus, model.theme),\r\n                alphabeticVirtualKeyboard(model.theme)\r\n            )\r\n            break\r\n        case FocusKind.BODY:\r\n            stacked.push(numericVirtualKeyboard(model.theme))\r\n            break\r\n        case FocusKind.NODE:\r\n            stacked.push(contextMenu({\r\n                items: [{\r\n                    name: 'Delete Node',\r\n                    shortcut: 'd',\r\n                    onClick: {\r\n                        kind: EventKind.DELETE_NODE,\r\n                        node: model.focus.node\r\n                    }\r\n                }],\r\n                backgroundColor: model.theme.node\r\n            }))\r\n            break\r\n        case FocusKind.INPUT:\r\n            if (model.graph.inputs[model.focus.input].edge) {\r\n                stacked.push(contextMenu({\r\n                    items: [{\r\n                        name: 'Delete Edge',\r\n                        shortcut: 'd',\r\n                        onClick: {\r\n                            kind: EventKind.DELETE_INPUT_EDGE,\r\n                            input: model.focus.input\r\n                        }\r\n                    }],\r\n                    backgroundColor: model.theme.node\r\n                }))\r\n            }\r\n            break\r\n        case FocusKind.OUTPUT:\r\n            if (model.graph.outputs[model.focus.output].edges.length > 0) {\r\n                stacked.push(contextMenu({\r\n                    items: [\r\n                        {\r\n                            name: 'Delete Edge',\r\n                            shortcut: 'd',\r\n                            onClick: {\r\n                                kind: EventKind.DELETE_OUTPUT_EDGES,\r\n                                output: model.focus.output\r\n                            }\r\n                        }\r\n                    ],\r\n                    backgroundColor: model.theme.node\r\n                }))\r\n            }\r\n            break\r\n    }\r\n    return stack(stacked)\r\n}","import { Model, Window } from \".\"\r\nimport { FocusKind } from \"./focus\"\r\nimport { PointerActionKind } from \"./pointer_action\"\r\nimport { identity } from \"../linear_algebra/matrix3x3\"\r\nimport { emptyGraph } from './graph'\r\nimport { QuickSelectKind } from \"./quick_select\"\r\n\r\nexport const emptyModel = (window: Window): Model => ({\r\n    graph: emptyGraph(),\r\n    nodeOrder: [],\r\n    pointers: [],\r\n    camera: identity(),\r\n    focus: {\r\n        kind: FocusKind.NONE,\r\n        pointerAction: { kind: PointerActionKind.NONE },\r\n        quickSelect: { kind: QuickSelectKind.NONE }\r\n    },\r\n    openFinderFirstClick: false,\r\n    nodePlacementLocation: { x: window.width / 2, y: window.height / 2, show: false },\r\n    window,\r\n    operations: {},\r\n    panCamera: { left: false, down: false, up: false, right: false, now: 0 },\r\n    zoomCamera: { in: false, out: false, now: 0 },\r\n    theme: {\r\n        background: { red: 2, green: 22, blue: 39, alpha: 255 },\r\n        node: { red: 41, green: 95, blue: 120, alpha: 255 },\r\n        nodePlacementLocation: { red: 41, green: 95, blue: 120, alpha: 50 },\r\n        focusNode: { red: 23, green: 54, blue: 69, alpha: 255 },\r\n        input: { red: 188, green: 240, blue: 192, alpha: 255 },\r\n        focusInput: { red: 175, green: 122, blue: 208, alpha: 255 },\r\n        connection: { red: 255, green: 255, blue: 255, alpha: 255 },\r\n    },\r\n})","export type UUID = string\r\n\r\nexport type GenerateUUID = () => UUID\r\n\r\nexport interface Input {\r\n    readonly uuid: UUID\r\n    readonly node: UUID\r\n    readonly name: string\r\n    readonly edge?: UUID\r\n}\r\n\r\nexport interface Output {\r\n    readonly uuid: UUID\r\n    readonly node: UUID\r\n    readonly name: string\r\n    readonly edges: Readonly<UUID[]>\r\n}\r\n\r\nexport interface Body {\r\n    readonly uuid: UUID\r\n    readonly node: UUID\r\n    readonly value: number\r\n}\r\n\r\nexport interface Position {\r\n    readonly x: number\r\n    readonly y: number\r\n}\r\n\r\nexport interface Node {\r\n    readonly uuid: UUID\r\n    readonly name: string\r\n    readonly inputs: Readonly<UUID[]>\r\n    readonly body?: UUID\r\n    readonly outputs: Readonly<UUID[]>\r\n    readonly position: Position\r\n}\r\n\r\nexport interface Edge {\r\n    readonly uuid: UUID\r\n    readonly input: UUID\r\n    readonly output: UUID\r\n}\r\n\r\nexport type Nodes = { [uuid: UUID]: Node }\r\nexport type Edges = { [uuid: UUID]: Edge }\r\nexport type Inputs = { [uuid: UUID]: Input }\r\nexport type Bodys = { [uuid: UUID]: Body }\r\nexport type Outputs = { [uuid: UUID]: Output }\r\n\r\nexport interface Graph {\r\n    readonly nodes: Readonly<Nodes>\r\n    readonly edges: Readonly<Edges>\r\n    readonly inputs: Readonly<Inputs>\r\n    readonly bodys: Readonly<Bodys>\r\n    readonly outputs: Readonly<Outputs>\r\n}\r\n\r\nexport interface Operation {\r\n    readonly name: string\r\n    readonly inputs: Readonly<string[]>\r\n    readonly body?: number\r\n    readonly outputs: Readonly<string[]>\r\n}\r\n\r\nexport type Operations = { [name: string]: Operation }\r\n\r\nexport const emptyGraph = (): Graph => ({\r\n    nodes: {},\r\n    edges: {},\r\n    inputs: {},\r\n    bodys: {},\r\n    outputs: {},\r\n})","import { EventKind, update } from \"./update\"\r\nimport { run, transformPointer } from \"./ui/run\"\r\nimport { view } from './view'\r\nimport { demoModel } from \"./model/demo\"\r\nimport { Document } from './ui/dom'\r\nimport { ProgramKind } from \"./ui/webgl2\"\r\n\r\nconst generateUUID = () => crypto.randomUUID()\r\nconst currentTime = () => performance.now()\r\n\r\nconst success_or_error = run({\r\n    model: demoModel({ width: window.innerWidth, height: window.innerHeight }, generateUUID),\r\n    view,\r\n    update,\r\n    window,\r\n    document: document as Document,\r\n    requestAnimationFrame,\r\n    setTimeout,\r\n    pointerDown: (dispatch, pointer) => {\r\n        dispatch({\r\n            kind: EventKind.POINTER_DOWN,\r\n            pointer\r\n        })\r\n    },\r\n    effects: { currentTime, generateUUID }\r\n})\r\n\r\nif (success_or_error.kind == ProgramKind.ERROR) {\r\n    throw success_or_error\r\n}\r\n\r\nconst dispatch = success_or_error.dispatch\r\n\r\nif (typeof PointerEvent.prototype.getCoalescedEvents === 'function') {\r\n    document.addEventListener('pointermove', (e) => {\r\n        e.getCoalescedEvents().forEach(p => {\r\n            dispatch({\r\n                kind: EventKind.POINTER_MOVE,\r\n                pointer: transformPointer(p)\r\n            })\r\n        })\r\n    })\r\n} else {\r\n    document.addEventListener('pointermove', p =>\r\n        dispatch({\r\n            kind: EventKind.POINTER_MOVE,\r\n            pointer: transformPointer(p)\r\n        })\r\n    )\r\n}\r\n\r\ndocument.addEventListener(\"pointerup\", p => {\r\n    dispatch({\r\n        kind: EventKind.POINTER_UP,\r\n        pointer: transformPointer(p)\r\n    })\r\n})\r\n\r\ndocument.addEventListener('wheel', e => {\r\n    e.preventDefault()\r\n    dispatch({\r\n        kind: EventKind.WHEEL,\r\n        position: { x: e.clientX, y: e.clientY },\r\n        deltaY: e.deltaY,\r\n    })\r\n}, { passive: false })\r\n\r\ndocument.addEventListener('contextmenu', e => {\r\n    e.preventDefault()\r\n})\r\n\r\ndocument.addEventListener('touchend', () => {\r\n    document.body.requestFullscreen()\r\n})\r\n\r\ndocument.addEventListener('keydown', e => {\r\n    if (e.ctrlKey) {\r\n        switch (e.key) {\r\n            case 'j':\r\n            case 'k':\r\n                e.preventDefault()\r\n        }\r\n    }\r\n    dispatch({\r\n        kind: EventKind.KEYDOWN,\r\n        key: e.key,\r\n        ctrl: e.ctrlKey\r\n    })\r\n})\r\n\r\ndocument.addEventListener('keyup', e => {\r\n    dispatch({\r\n        kind: EventKind.KEYUP,\r\n        key: e.key,\r\n        ctrl: e.ctrlKey\r\n    })\r\n})\r\n\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register(\r\n        new URL('service_worker.ts', import.meta.url),\r\n        { type: 'module' }\r\n    );\r\n}","import { GenerateUUID } from './graph'\r\nimport { addEdge, addNode, changeBodyValue } from \"../update/graph\"\r\nimport { Model, Window } from '.'\r\nimport { emptyModel } from './empty'\r\n\r\nexport const demoModel = (window: Window, generateUUID: GenerateUUID): Model => {\r\n    const model = {\r\n        ...emptyModel(window),\r\n        operations: {\r\n            \"Number\": {\r\n                name: \"Number\",\r\n                inputs: [],\r\n                body: 0,\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Add\": {\r\n                name: \"Add\",\r\n                inputs: [\"x\", \"y\"],\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Subtract\": {\r\n                name: \"Subtract\",\r\n                inputs: [\"x\", \"y\"],\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Multiply\": {\r\n                name: \"Multiply\",\r\n                inputs: [\"x\", \"y\"],\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Divide\": {\r\n                name: \"Divide\",\r\n                inputs: [\"x\", \"y\"],\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Equal\": {\r\n                name: \"Equal\",\r\n                inputs: [\"x\", \"y\"],\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Less Than\": {\r\n                name: \"Less Than\",\r\n                inputs: [\"x\", \"y\"],\r\n                outputs: [\"out\"]\r\n            },\r\n            \"Print\": {\r\n                name: \"Print\",\r\n                inputs: [\"value\"],\r\n                outputs: []\r\n            }\r\n        }\r\n    }\r\n    const { graph: graph0, node: number0 } = addNode({\r\n        graph: model.graph,\r\n        operation: model.operations[\"Number\"],\r\n        position: { x: 25, y: 20 },\r\n        generateUUID\r\n    })\r\n    const graph1 = changeBodyValue(graph0, graph0.nodes[number0].body!, () => 10)\r\n    const { graph: graph2, node: number1 } = addNode({\r\n        graph: graph1,\r\n        operation: model.operations[\"Number\"],\r\n        position: { x: 55, y: 105 },\r\n        generateUUID\r\n    })\r\n    const graph3 = changeBodyValue(graph2, graph2.nodes[number1].body!, () => 25)\r\n    const { graph: graph4, node: add } = addNode({\r\n        graph: graph3,\r\n        operation: model.operations[\"Add\"],\r\n        position: { x: 175, y: 55 },\r\n        generateUUID\r\n    })\r\n    const { graph: graph5 } = addEdge({\r\n        graph: graph4,\r\n        input: graph4.nodes[add].inputs[0],\r\n        output: graph4.nodes[number0].outputs[0],\r\n        generateUUID\r\n    })\r\n    const { graph: graph6 } = addEdge({\r\n        graph: graph5,\r\n        input: graph5.nodes[add].inputs[1],\r\n        output: graph5.nodes[number1].outputs[0],\r\n        generateUUID\r\n    })\r\n    const { graph: graph7, node: number2 } = addNode({\r\n        graph: graph6,\r\n        operation: model.operations[\"Number\"],\r\n        position: { x: 225, y: 145 },\r\n        generateUUID\r\n    })\r\n    const graph8 = changeBodyValue(graph7, graph7.nodes[number2].body!, () => 5)\r\n    const { graph: graph9, node: div } = addNode({\r\n        graph: graph8,\r\n        operation: model.operations[\"Divide\"],\r\n        position: { x: 355, y: 75 },\r\n        generateUUID\r\n    })\r\n    const { graph: graph10 } = addEdge({\r\n        graph: graph9,\r\n        input: graph9.nodes[div].inputs[0],\r\n        output: graph9.nodes[add].outputs[0],\r\n        generateUUID\r\n    })\r\n    const { graph: graph11 } = addEdge({\r\n        graph: graph10,\r\n        input: graph10.nodes[div].inputs[1],\r\n        output: graph10.nodes[number2].outputs[0],\r\n        generateUUID\r\n    })\r\n    const { graph: graph12, node: print } = addNode({\r\n        graph: graph11,\r\n        operation: model.operations[\"Print\"],\r\n        position: { x: 535, y: 85 },\r\n        generateUUID\r\n    })\r\n    const { graph: graph13 } = addEdge({\r\n        graph: graph12,\r\n        input: graph12.nodes[print].inputs[0],\r\n        output: graph12.nodes[div].outputs[0],\r\n        generateUUID\r\n    })\r\n    return {\r\n        ...model,\r\n        graph: graph13,\r\n        nodeOrder: [number0, number1, add, number2, div, print]\r\n    }\r\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"g0Phv\")).toString();"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$f4c0df53f29f413e$export$fad298d038a96a64","haystack","needle","haystackIndex","needleIndex","n","toLowerCase","$2a9d6d4b688c9d90$export$b74061472fe7c07","width","height","$2a9d6d4b688c9d90$export$d73ee8ef04f5226a","x","y","$2a9d6d4b688c9d90$export$dcdf75081b88279d","$2a9d6d4b688c9d90$export$84b43e5e8429f175","matrices","head","tail","reduce","a","b","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","$2a9d6d4b688c9d90$export$dbb85424dca880d0","b1","b2","b3","$2a9d6d4b688c9d90$export$70ae2c07e401031b","idet","$9a57707492d0f60d$export$f24224f1c91d8156","c","Math","sqrt","pow","$a0f3f64302a26730$export$a46189eda869aab0","FocusKind1","$77749a5d3c7f9622$export$e8353d760175d4a6","PointerActionKind1","$2ef4625a0625787e$export$2fed3c3ffa8e7fdf","graph","operation","position","generateUUID","nodeUUID","inputs","inputUUIDs","name","uuid","node","push","outputs","outputUUIDs","name1","edges","undefined","body","value","nodes","bodys","$2ef4625a0625787e$export$1d0aa160432dfea5","removedNode","edgeUUIDs","input","edge","output","filter","e","input1","output1","$2ef4625a0625787e$export$29df27f8a43b7d73","edgeUUID","$2ef4625a0625787e$export$c551ecdfdbecb8a","$2ef4625a0625787e$export$3b35d6dc248b6d92","currentOutput","$2ef4625a0625787e$export$928e3f0f851a815","transform","currentNode","$2ef4625a0625787e$export$a40a9a25f66c1b6c","currentBody","$6ff62f829f2c2cfe$export$64991f9d8f2b107","QuickSelectKind1","$3456f50a45a19294$export$845a324f418df9ff","model","focus","kind","NONE","pointerAction","quickSelect","$3456f50a45a19294$export$4f502711de93d534","inputUUID","OUTPUT","graph0","graph1","render","INPUT","$3456f50a45a19294$export$d6ab939b03262ebe","outputUUID","$88a5357f98e8e1b9$export$18fb507c43cb9eb4","key","hotkeys","forEach","String","fromCharCode","NODE","BODY","$88a5357f98e8e1b9$export$13d3ac1826a52f1b","entry","entries","find","_","hotkey","$88a5357f98e8e1b9$export$27e6ba733783aa92","$88a5357f98e8e1b9$export$85010dd9a272b2e2","drag","move","left","up","down","right","now","$88a5357f98e8e1b9$export$d9f885680086da68","$eded1e3cb7dde7d7$export$18571dd214cc90c6","ctrl","currentTime","panDispatch","panCamera","dispatch","$63f0cc5d3322bdba$export$50508d7849040d51","PAN_CAMERA","zoomDispatch","zoomCamera","in","out","ZOOM_CAMERA","nodePlacementLocation","window","show","$eded1e3cb7dde7d7$export$eef2689fe4b07182","max","abs","speed","camera","schedule","after","milliseconds","event","$eded1e3cb7dde7d7$export$283128e0a6fbb1c3","zoom","moveBack","$c70765bf473b401b$export$808e0c489b6fdd11","notMoving","MOVE_NODE","$c70765bf473b401b$export$83751492c88cf2ca","normalized_distance","p","EventKind1","$63f0cc5d3322bdba$var$finderOptions","operations","search","item","$63f0cc5d3322bdba$export$a72e97d68c48a4a","FINDER","options","openFinderFirstClick","$63f0cc5d3322bdba$var$insertOperationFromFinder","nextModel","$63f0cc5d3322bdba$export$71609a29f506e4f6","$63f0cc5d3322bdba$var$updateFinderSearch","$63f0cc5d3322bdba$var$updateBodyValue","nodeOrder","$63f0cc5d3322bdba$export$6da59a5b2e9d2d3b","$63f0cc5d3322bdba$var$keyDown","slice","newValue","toString","parseFloat","result","$63f0cc5d3322bdba$export$c1b5afa9b8c6f143","$3aa357479a49b085$var$inWorldSpace","x0","y0","x1","y1","pointer","$3aa357479a49b085$export$e6e29dfeb5ef19c1","renderer","clickHandlers","onClick","worldSpace","$b6ca04fcd3e6f123$var$newBatch","textureIndex","triangles","vertices","colors","vertexIndices","textureCoordinates","cameraIndex","lines","$b6ca04fcd3e6f123$export$2c575fa1d20488bd","ts","from","to","offset","p0x","p0y","p1x","p1y","p3x","p3y","p2x","p2y","lastX","lastY","first","t","tSquared","tCubed","oneMinusT","oneMinusTSquared","oneMinusTCubed","$b6ca04fcd3e6f123$export$1e96939139b396da","layers","connections","idToWorldSpace","start","stop","num","step","Array","$b6ca04fcd3e6f123$var$linspace","batches","batch","batchTextureIndex","layer","z","geometries","parseInt","geometry","index","cs","scale","color","red","green","blue","alpha","samples","$f82cd7e5241fa075$export$eea5d8c438131c40","cameraStack","cameras","stack","$f82cd7e5241fa075$export$3c901611250dc02c","$f82cd7e5241fa075$export$d14f39ee728c5da5","pop","$f82cd7e5241fa075$export$86ad693455315c84","_0","_1","$fd89ce3675dee463$export$83d5419fac007c8c","ui","constraints","measureText","childLayout","$1e3ba84e9ce044db$export$b3219800bda33a1f","child","size","maxWidth","maxHeight","$fd89ce3675dee463$export$efb2657d225c129a","layout1","childOffset","$1e3ba84e9ce044db$export$42a7622cbf932bb","$fd89ce3675dee463$export$edc8554b50279bf4","layout2","geometry1","$1e3ba84e9ce044db$export$df3f009e3d155b20","$9b5b1345df3acfe9$export$6595504a60e1f77c","MainAxisAlignment1","$9b5b1345df3acfe9$export$66a3248d846611ce","CrossAxisAlignment1","$518015a6e3cc694d$export$4e0c71f277ca26b3","args","properties","children","$1e3ba84e9ce044db$export$8984f19c96d30531","COLUMN","mainAxisAlignment","START","crossAxisAlignment","$518015a6e3cc694d$export$f8ce731bdfd45dc7","initial","totalChildHeight","acc","$518015a6e3cc694d$export$5a1548308f4d4391","freeSpaceY","CENTER","END","SPACE_EVENLY","SPACE_BETWEEN","addYStart","addYCenter","addYEnd","addYSpaceEvenly","addYSpaceBetween","addY","offsetXStart","offsetXCenter","offsetXEnd","offsetX","childGeometry","$518015a6e3cc694d$export$9f45e883ef2b80c0","layout","nextZ","$8a99d960732a172f$var$transformPadding","padding","top","bottom","$8a99d960732a172f$export$34e0f9847d4c02dd","CONTAINER","$8a99d960732a172f$export$a4e80cd8d85917bb","$8a99d960732a172f$export$7c88ce694bad6320","fill","$8a99d960732a172f$export$6f2a7b3ebfc2cfa0","$9e4edab979495f0d$export$120ff0929b202a6d","ROW","$9e4edab979495f0d$export$4076779b9674714b","totalChildWidth","$9e4edab979495f0d$export$90e65e88c1393562","freeSpaceX","addXStart","addXCenter","addXEnd","addXSpaceEvenly","addXSpaceBetween","addX","offsetYStart","offsetYCenter","offsetYEnd","offsetY","$9e4edab979495f0d$export$1152b7e6303a2c68","$864b15efd9f5e1a7$export$33aff30b8aa0934e","SCENE","$864b15efd9f5e1a7$export$9e03d30774b30061","map","$864b15efd9f5e1a7$export$7a4266c2aa024d65","$864b15efd9f5e1a7$export$7b2ec4d82804e47f","$d380360335f9e6c0$export$b008c3d2ea57ca56","$d380360335f9e6c0$export$218db93a2e8965d","$d380360335f9e6c0$export$13c8b19be38670b3","$2d5075f154be1094$export$6f093cfa640b7166","str","TEXT","font","family","$2d5075f154be1094$export$801f12fcd9ba2788","measurements","width1","widths","$2d5075f154be1094$var$vertices","$2d5075f154be1094$var$colors","$2d5075f154be1094$var$vertexIndices","$2d5075f154be1094$export$f543e72c4af89828","textLayout1","flat","$2d5075f154be1094$export$3d02b268fb89b14d","UIKind1","STACK","$e364cd7af35feef1$export$533b26079ad0b4b","reducer","accumulator","combine","$cce0295d6d688136$export$1be1fc439b849fdf","handlers","needed","$3d1ad3352b3daee3$export$1be1fc439b849fdf","lookup","$0c1fb5dcb73854b4$export$1be1fc439b849fdf","entryGeometry","newGeometry","$d33a6e3c77e8a82f$export$1be1fc439b849fdf","$8fb27619ef3752ba$export$59ff82fc918bd7e3","$8fb27619ef3752ba$export$1be1fc439b849fdf","$cbb8ce85e6a0780d$export$b3890eb0ae9dca99","clear","uiLayout","minWidth","minHeight","uiGeometry","$8fb27619ef3752ba$exports","draw","$2561bfce8bbd3fa5$export$128884f9a44a0f0c","ProgramKind1","$2561bfce8bbd3fa5$export$ce2766bf4a8721d3","constructor","window1","document1","canvas","gl1","program1","textures1","textMeasurementsCache","document","gl","program","textures","DATA","this","COLOR_BUFFER_BIT","attributes","texture","bindTexture","TEXTURE_2D","bindBuffer","ARRAY_BUFFER","buffer","bufferData","Float32Array","STATIC_DRAW","Uint8Array","ELEMENT_ARRAY_BUFFER","Uint16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","count","drawArrays","LINES","getTextureMeasurements","dpr","get","createElement","ctx","getContext","rows","current","$2561bfce8bbd3fa5$var$nearestPowerOfTwo","cellSize","style","textAlign","textBaseline","fillStyle","clearRect","metric","ceil","floor","fillText","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","$2561bfce8bbd3fa5$var$createTextMeasurements","newMeasurements","set","devicePixelRatio","indices","f","$2561bfce8bbd3fa5$var$mapString","charCodeAt","uniforms","uniformMatrix3fv","projection","display","viewport","_size","data","_cameras","location","createBuffer","vertexShader","vertexShaderSource","createShader","VERTEX_SHADER","shaderSource","compileShader","$2561bfce8bbd3fa5$var$createVertexShader","fragmentShader","FRAGMENT_SHADER","$2561bfce8bbd3fa5$var$createFragmentShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","ERROR","vertexInfoLog","getShaderInfoLog","fragmentInfoLog","useProgram","vertexArrayObject","createVertexArray","bindVertexArray","FLOAT","$2561bfce8bbd3fa5$var$bindVertices","$2561bfce8bbd3fa5$var$bindColors","bindAttribLocation","enableVertexAttribArray","vertexAttribPointer","$2561bfce8bbd3fa5$var$bindTextureCoordinates","vertexAttribIPointer","$2561bfce8bbd3fa5$var$bindCameraIndex","getUniformLocation","$13904534c2e00d0c$export$479aac53993fd71","pointerId","clientX","clientY","$04bf81609edc91d2$export$218b899e1d476006","items","backgroundColor","shortcut","$0015d6a63d35b231$export$8cc075c801fd6817","$0015d6a63d35b231$export$af200dcf8b7cb5de","array","seperator","element","$0015d6a63d35b231$export$d267344c6c72483b","$0015d6a63d35b231$export$f0aff9ee68de27f8","theme","CLICKED_INPUT","focusInput","background","$0015d6a63d35b231$export$60c2cea27aefb32b","$0015d6a63d35b231$export$3cbc1f9e6e82ea7","CLICKED_OUTPUT","$0015d6a63d35b231$export$bb70de462253a3c9","$0015d6a63d35b231$export$5b0a3b587d4840d2","rowEntries","CLICKED_BODY","$0015d6a63d35b231$export$26fbed5ffd120939","o","focusNode","CLICKED_NODE","$0015d6a63d35b231$export$a0bbe14c4282928","$0015d6a63d35b231$export$b5eb6b87d37ec205","VIRTUAL_KEYDOWN","$0015d6a63d35b231$var$identityCamera","$6020bdcbc973292f$export$d421ebe6a9625795","pointers","connection","$b4e14b6b8da86996$var$generateUUID","crypto","randomUUID","$b4e14b6b8da86996$var$success_or_error","view","update","requestAnimationFrame","setTimeout","effects","renderer_or_error","$2561bfce8bbd3fa5$export$94781114c991ae1c","innerWidth","innerHeight","renderQueued","scheduleRender","newModel","render1","dispatchEvents","event1","event2","appendChild","addEventListener","transformed","pointerDown","Number","Add","Subtract","Multiply","Divide","Equal","Print","number0","graph2","number1","graph3","graph4","add","graph5","graph6","graph7","number2","graph8","graph9","div","graph10","graph11","graph12","print","graph13","values","stacked","CLICKED_BACKGROUND","option","CLICKED_FINDER_OPTION","$0015d6a63d35b231$export$ae58c3420da023e7","$0015d6a63d35b231$export$67e5e8cc6531f853","DELETE_NODE","DELETE_INPUT_EDGE","DELETE_OUTPUT_EDGES","POINTER_DOWN","ZOOM","pointerCenter","pointerDistance","PAN","$63f0cc5d3322bdba$var$pointerDown","POINTER_UP","$63f0cc5d3322bdba$var$pointerUp","POINTER_MOVE","findIndex","xs","previousPointerAction","dx","dy","p0","p1","x2","y2","scaling","$63f0cc5d3322bdba$var$pointerMove","$63f0cc5d3322bdba$var$clickedNode","WHEEL","deltaY","$63f0cc5d3322bdba$var$wheel","$63f0cc5d3322bdba$var$clickedInput","$63f0cc5d3322bdba$var$clickedOutput","OPEN_FINDER_TIMEOUT","$63f0cc5d3322bdba$var$openFinderTimeout","KEYDOWN","KEYUP","$63f0cc5d3322bdba$var$keyUp","$63f0cc5d3322bdba$var$virtualKeyDown","$63f0cc5d3322bdba$var$clickedFinderOption","$63f0cc5d3322bdba$var$clickedNumber","$63f0cc5d3322bdba$var$clickedBackground","$63f0cc5d3322bdba$var$deleteNode","$63f0cc5d3322bdba$var$deleteInputEdge","$63f0cc5d3322bdba$var$deleteOutputEdges","dispatch1","performance","$b4e14b6b8da86996$var$dispatch","PointerEvent","prototype","getCoalescedEvents","preventDefault","passive","requestFullscreen","ctrlKey","$2e8f211bd175cb9d$exports","URL","resolve","import","meta","url","navigator","serviceWorker"],"version":3,"file":"index.d75cafe0.js.map"}